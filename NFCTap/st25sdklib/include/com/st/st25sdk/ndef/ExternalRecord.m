//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: st25sdk_ios/ndef/ExternalRecord.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/st/st25sdk/Helper.h"
#include "com/st/st25sdk/ndef/ExternalRecord.h"
#include "com/st/st25sdk/ndef/NDEFRecord.h"
#include "java/io/ByteArrayInputStream.h"
#include "java/lang/Character.h"
#include "java/lang/Exception.h"
#include "java/lang/Throwable.h"
#include "java/nio/ByteBuffer.h"
#include "java/nio/charset/Charset.h"
#include "java/util/Locale.h"
#include "java/util/Scanner.h"

static id (*ComStSt25sdkNdefExternalRecord_super$_getPayload)(id, SEL);

static id (*ComStSt25sdkNdefExternalRecord_super$_getType)(id, SEL);

@interface ComStSt25sdkNdefExternalRecord () {
 @public
  NSString *mDomain_;
  NSString *mExternalType_;
  IOSByteArray *mExternalData_;
  jboolean mUtf8_;
}

- (jchar)getCharWithByte:(jbyte)myByte;

- (NSString *)formatToAsciiWithByteArray:(IOSByteArray *)content;

- (void)updateRecordType;

- (void)parseWithNSString:(NSString *)externalDomain;

@end

J2OBJC_FIELD_SETTER(ComStSt25sdkNdefExternalRecord, mDomain_, NSString *)
J2OBJC_FIELD_SETTER(ComStSt25sdkNdefExternalRecord, mExternalType_, NSString *)
J2OBJC_FIELD_SETTER(ComStSt25sdkNdefExternalRecord, mExternalData_, IOSByteArray *)

__attribute__((unused)) static jchar ComStSt25sdkNdefExternalRecord_getCharWithByte_(ComStSt25sdkNdefExternalRecord *self, jbyte myByte);

__attribute__((unused)) static NSString *ComStSt25sdkNdefExternalRecord_formatToAsciiWithByteArray_(ComStSt25sdkNdefExternalRecord *self, IOSByteArray *content);

__attribute__((unused)) static void ComStSt25sdkNdefExternalRecord_updateRecordType(ComStSt25sdkNdefExternalRecord *self);

__attribute__((unused)) static void ComStSt25sdkNdefExternalRecord_parseWithNSString_(ComStSt25sdkNdefExternalRecord *self, NSString *externalDomain);

J2OBJC_INITIALIZED_DEFN(ComStSt25sdkNdefExternalRecord)

NSString *ComStSt25sdkNdefExternalRecord_DEFAULT_EXTERNAL_TYPE_FORMAT = @"type";
NSString *ComStSt25sdkNdefExternalRecord_DEFAULT_EXTERNAL_DOMAIN_FORMAT = @"domain";
NSString *ComStSt25sdkNdefExternalRecord_DEFAULT_EXTERNAL_FORMAT = @"domain:type";

@implementation ComStSt25sdkNdefExternalRecord

+ (NSString *)DEFAULT_EXTERNAL_TYPE_FORMAT {
  return ComStSt25sdkNdefExternalRecord_DEFAULT_EXTERNAL_TYPE_FORMAT;
}

+ (NSString *)DEFAULT_EXTERNAL_DOMAIN_FORMAT {
  return ComStSt25sdkNdefExternalRecord_DEFAULT_EXTERNAL_DOMAIN_FORMAT;
}

+ (NSString *)DEFAULT_EXTERNAL_FORMAT {
  return ComStSt25sdkNdefExternalRecord_DEFAULT_EXTERNAL_FORMAT;
}

+ (void)setDEFAULT_EXTERNAL_FORMAT:(NSString *)value {
  ComStSt25sdkNdefExternalRecord_DEFAULT_EXTERNAL_FORMAT = value;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComStSt25sdkNdefExternalRecord_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithJavaIoByteArrayInputStream:(JavaIoByteArrayInputStream *)inputStream {
  ComStSt25sdkNdefExternalRecord_initWithJavaIoByteArrayInputStream_(self, inputStream);
  return self;
}

- (IOSByteArray *)getContent {
  return mExternalData_;
}

- (void)setContentWithByteArray:(IOSByteArray *)content {
  mExternalData_ = content;
}

- (NSString *)getExternalDomain {
  return mDomain_;
}

- (void)setExternalDomainWithNSString:(NSString *)domain {
  mDomain_ = [((NSString *) nil_chk([((NSString *) nil_chk(domain)) java_trim])) java_lowercaseStringWithJRELocale:JreLoadStatic(JavaUtilLocale, ROOT)];
  ComStSt25sdkNdefExternalRecord_updateRecordType(self);
}

- (NSString *)getExternalType {
  return mExternalType_;
}

- (void)setExternalTypeWithNSString:(NSString *)externalType {
  mExternalType_ = [((NSString *) nil_chk([((NSString *) nil_chk(externalType)) java_trim])) java_lowercaseStringWithJRELocale:JreLoadStatic(JavaUtilLocale, ROOT)];
  ComStSt25sdkNdefExternalRecord_updateRecordType(self);
}

- (jchar)getCharWithByte:(jbyte)myByte {
  return ComStSt25sdkNdefExternalRecord_getCharWithByte_(self, myByte);
}

- (NSString *)formatToAsciiWithByteArray:(IOSByteArray *)content {
  return ComStSt25sdkNdefExternalRecord_formatToAsciiWithByteArray_(self, content);
}

- (void)updateRecordType {
  ComStSt25sdkNdefExternalRecord_updateRecordType(self);
}

- (void)parseWithNSString:(NSString *)externalDomain {
  ComStSt25sdkNdefExternalRecord_parseWithNSString_(self, externalDomain);
}

- (IOSByteArray *)getPayload {
  IOSByteArray *payload;
  if (mDomain_ == nil || mExternalType_ == nil || ([mDomain_ java_length] == 0) || ([((NSString *) nil_chk(mExternalType_)) java_length] == 0)) {
    return nil;
  }
  payload = mExternalData_;
  return payload;
}

- (NSString *)description {
  NSString *txt = @"External Record:\n";
  (void) JreStrAppendStrong(&txt, "$$C", @"- Domain : ", mDomain_, 0x000a);
  (void) JreStrAppendStrong(&txt, "$$C", @"- External Type : ", mExternalType_, 0x000a);
  (void) JreStrAppendStrong(&txt, "$$C", @"- External Data : ", ComStSt25sdkHelper_convertHexByteArrayToStringWithByteArray_(mExternalData_), 0x000a);
  return txt;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, 1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 5, -1, -1, -1, -1 },
    { NULL, "C", 0x2, 7, 8, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x2, 9, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 10, 5, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 11, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithJavaIoByteArrayInputStream:);
  methods[2].selector = @selector(getContent);
  methods[3].selector = @selector(setContentWithByteArray:);
  methods[4].selector = @selector(getExternalDomain);
  methods[5].selector = @selector(setExternalDomainWithNSString:);
  methods[6].selector = @selector(getExternalType);
  methods[7].selector = @selector(setExternalTypeWithNSString:);
  methods[8].selector = @selector(getCharWithByte:);
  methods[9].selector = @selector(formatToAsciiWithByteArray:);
  methods[10].selector = @selector(updateRecordType);
  methods[11].selector = @selector(parseWithNSString:);
  methods[12].selector = @selector(getPayload);
  methods[13].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "mDomain_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mExternalType_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mExternalData_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mUtf8_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "DEFAULT_EXTERNAL_TYPE_FORMAT", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 12, -1, -1 },
    { "DEFAULT_EXTERNAL_DOMAIN_FORMAT", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 13, -1, -1 },
    { "DEFAULT_EXTERNAL_FORMAT", "LNSString;", .constantValue.asLong = 0, 0x9, -1, 14, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaIoByteArrayInputStream;", "LJavaLangException;", "setContent", "[B", "setExternalDomain", "LNSString;", "setExternalType", "getChar", "B", "formatToAscii", "parse", "toString", &ComStSt25sdkNdefExternalRecord_DEFAULT_EXTERNAL_TYPE_FORMAT, &ComStSt25sdkNdefExternalRecord_DEFAULT_EXTERNAL_DOMAIN_FORMAT, &ComStSt25sdkNdefExternalRecord_DEFAULT_EXTERNAL_FORMAT };
  static const J2ObjcClassInfo _ComStSt25sdkNdefExternalRecord = { "ExternalRecord", "com.st.st25sdk.ndef", ptrTable, methods, fields, 7, 0x1, 14, 7, -1, -1, -1, -1, -1 };
  return &_ComStSt25sdkNdefExternalRecord;
}

+ (void)initialize {
  if (self == [ComStSt25sdkNdefExternalRecord class]) {
    ComStSt25sdkNdefExternalRecord_super$_getType = (id (*)(id, SEL))[ComStSt25sdkNdefNDEFRecord instanceMethodForSelector:@selector(getType)];
    ComStSt25sdkNdefExternalRecord_super$_getPayload = (id (*)(id, SEL))[ComStSt25sdkNdefNDEFRecord instanceMethodForSelector:@selector(getPayload)];
    J2OBJC_SET_INITIALIZED(ComStSt25sdkNdefExternalRecord)
  }
}

@end

void ComStSt25sdkNdefExternalRecord_init(ComStSt25sdkNdefExternalRecord *self) {
  ComStSt25sdkNdefNDEFRecord_init(self);
  self->mUtf8_ = true;
  [self setTnfWithShort:ComStSt25sdkNdefNDEFRecord_TNF_EXTERNAL];
  [self setExternalDomainWithNSString:ComStSt25sdkNdefExternalRecord_DEFAULT_EXTERNAL_DOMAIN_FORMAT];
  [self setExternalTypeWithNSString:ComStSt25sdkNdefExternalRecord_DEFAULT_EXTERNAL_TYPE_FORMAT];
  self->mExternalData_ = nil;
  self->mUtf8_ = true;
}

ComStSt25sdkNdefExternalRecord *new_ComStSt25sdkNdefExternalRecord_init() {
  J2OBJC_NEW_IMPL(ComStSt25sdkNdefExternalRecord, init)
}

ComStSt25sdkNdefExternalRecord *create_ComStSt25sdkNdefExternalRecord_init() {
  J2OBJC_CREATE_IMPL(ComStSt25sdkNdefExternalRecord, init)
}

void ComStSt25sdkNdefExternalRecord_initWithJavaIoByteArrayInputStream_(ComStSt25sdkNdefExternalRecord *self, JavaIoByteArrayInputStream *inputStream) {
  ComStSt25sdkNdefNDEFRecord_initWithJavaIoByteArrayInputStream_(self, inputStream);
  self->mUtf8_ = true;
  IOSByteArray *payload = ComStSt25sdkNdefExternalRecord_super$_getPayload(self, @selector(getPayload));
  IOSByteArray *domainType = ComStSt25sdkNdefExternalRecord_super$_getType(self, @selector(getType));
  if (payload == nil) {
    @throw new_JavaLangException_initWithNSString_(@"Invalid ndef data");
  }
  [self setTnfWithShort:ComStSt25sdkNdefNDEFRecord_TNF_EXTERNAL];
  self->mExternalData_ = payload;
  ComStSt25sdkNdefExternalRecord_parseWithNSString_(self, ComStSt25sdkNdefExternalRecord_formatToAsciiWithByteArray_(self, domainType));
  if (JreLoadStatic(ComStSt25sdkNdefNDEFRecord, DBG_NDEF_RECORD)) {
    [self dbgCheckNdefRecordContentWithByteArray:payload];
  }
}

ComStSt25sdkNdefExternalRecord *new_ComStSt25sdkNdefExternalRecord_initWithJavaIoByteArrayInputStream_(JavaIoByteArrayInputStream *inputStream) {
  J2OBJC_NEW_IMPL(ComStSt25sdkNdefExternalRecord, initWithJavaIoByteArrayInputStream_, inputStream)
}

ComStSt25sdkNdefExternalRecord *create_ComStSt25sdkNdefExternalRecord_initWithJavaIoByteArrayInputStream_(JavaIoByteArrayInputStream *inputStream) {
  J2OBJC_CREATE_IMPL(ComStSt25sdkNdefExternalRecord, initWithJavaIoByteArrayInputStream_, inputStream)
}

jchar ComStSt25sdkNdefExternalRecord_getCharWithByte_(ComStSt25sdkNdefExternalRecord *self, jbyte myByte) {
  jchar myChar = ' ';
  if (myByte > (jint) 0x20) {
    myChar = (jchar) (myByte & (jint) 0xFF);
  }
  return myChar;
}

NSString *ComStSt25sdkNdefExternalRecord_formatToAsciiWithByteArray_(ComStSt25sdkNdefExternalRecord *self, IOSByteArray *content) {
  NSString *data = @"";
  jchar charx;
  {
    IOSByteArray *a__ = content;
    jbyte const *b__ = ((IOSByteArray *) nil_chk(a__))->buffer_;
    jbyte const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      jbyte aByte = *b__++;
      charx = ComStSt25sdkNdefExternalRecord_getCharWithByte_(self, aByte);
      data = JreStrcat("$$", data, NSString_java_formatWithNSString_withNSObjectArray_(@"%c", [IOSObjectArray newArrayWithObjects:(id[]){ JavaLangCharacter_valueOfWithChar_(charx) } count:1 type:NSObject_class_()]));
    }
  }
  return data;
}

void ComStSt25sdkNdefExternalRecord_updateRecordType(ComStSt25sdkNdefExternalRecord *self) {
  if (self->mDomain_ != nil && self->mExternalType_ != nil) {
    JavaNioCharsetCharset *utfEncoding = self->mUtf8_ ? JavaNioCharsetCharset_forNameWithNSString_(@"UTF-8") : JavaNioCharsetCharset_forNameWithNSString_(@"UTF-16");
    IOSByteArray *byteDomain = [((NSString *) nil_chk(self->mDomain_)) java_getBytesWithCharset:utfEncoding];
    IOSByteArray *byteType = [((NSString *) nil_chk(self->mExternalType_)) java_getBytesWithCharset:utfEncoding];
    JavaNioByteBuffer *bb = JavaNioByteBuffer_allocateWithInt_(((IOSByteArray *) nil_chk(byteDomain))->size_ + 1 + ((IOSByteArray *) nil_chk(byteType))->size_);
    (void) [((JavaNioByteBuffer *) nil_chk(bb)) putWithByteArray:byteDomain];
    (void) [bb putWithByteArray:[@":" java_getBytesWithCharset:utfEncoding]];
    (void) [bb putWithByteArray:byteType];
    [self setTypeWithByteArray:[bb array]];
  }
}

void ComStSt25sdkNdefExternalRecord_parseWithNSString_(ComStSt25sdkNdefExternalRecord *self, NSString *externalDomain) {
  if (externalDomain != nil) {
    JavaUtilScanner *scanner = new_JavaUtilScanner_initWithNSString_(externalDomain);
    JavaLangThrowable *__primaryException1 = nil;
    @try {
      NSString *EXTERNAL_DELIMITER_RETURN_STRING = @"\n";
      (void) [scanner useDelimiterWithNSString:EXTERNAL_DELIMITER_RETURN_STRING];
      while ([scanner hasNext]) {
        NSString *item = [scanner next];
        IOSObjectArray *property = [((NSString *) nil_chk(item)) java_split:@":"];
        if (((IOSObjectArray *) nil_chk(property))->size_ < 2) {
          continue;
        }
        NSString *domain = IOSObjectArray_Get(property, 0);
        NSString *externalType = IOSObjectArray_Get(property, 1);
        [self setExternalDomainWithNSString:domain];
        [self setExternalTypeWithNSString:externalType];
      }
    }
    @catch (JavaLangThrowable *e) {
      __primaryException1 = e;
      @throw e;
    }
    @finally {
      if (scanner != nil) {
        if (__primaryException1 != nil) {
          @try {
            [scanner close];
          }
          @catch (JavaLangThrowable *e) {
            [__primaryException1 addSuppressedWithJavaLangThrowable:e];
          }
        }
        else {
          [scanner close];
        }
      }
    }
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComStSt25sdkNdefExternalRecord)
