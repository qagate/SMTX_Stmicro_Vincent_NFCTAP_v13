//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: st25sdk_ios/ndef/AarRecord.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/st/st25sdk/ndef/AarRecord.h"
#include "com/st/st25sdk/ndef/NDEFRecord.h"
#include "java/io/ByteArrayInputStream.h"
#include "java/lang/Exception.h"
#include "java/lang/IllegalArgumentException.h"

static id (*ComStSt25sdkNdefAarRecord_super$_getPayload)(id, SEL);

@interface ComStSt25sdkNdefAarRecord () {
 @public
  NSString *mAar_;
}

@end

J2OBJC_FIELD_SETTER(ComStSt25sdkNdefAarRecord, mAar_, NSString *)

J2OBJC_INITIALIZED_DEFN(ComStSt25sdkNdefAarRecord)

@implementation ComStSt25sdkNdefAarRecord

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComStSt25sdkNdefAarRecord_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithNSString:(NSString *)aar {
  ComStSt25sdkNdefAarRecord_initWithNSString_(self, aar);
  return self;
}

- (instancetype)initWithJavaIoByteArrayInputStream:(JavaIoByteArrayInputStream *)inputStream {
  ComStSt25sdkNdefAarRecord_initWithJavaIoByteArrayInputStream_(self, inputStream);
  return self;
}

- (void)setAarWithNSString:(NSString *)aar {
  if (aar == nil) {
    @throw new_JavaLangIllegalArgumentException_init();
  }
  mAar_ = aar;
}

- (NSString *)getAar {
  return mAar_;
}

- (IOSByteArray *)getPayload {
  IOSByteArray *payload = nil;
  if (mAar_ != nil) {
    payload = [mAar_ java_getBytes];
  }
  return payload;
}

- (NSString *)description {
  NSString *txt = @"AAR Record:\n";
  (void) JreStrAppendStrong(&txt, "$$C", @"- AAR : ", mAar_, 0x000a);
  return txt;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 4, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithNSString:);
  methods[2].selector = @selector(initWithJavaIoByteArrayInputStream:);
  methods[3].selector = @selector(setAarWithNSString:);
  methods[4].selector = @selector(getAar);
  methods[5].selector = @selector(getPayload);
  methods[6].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "mAar_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;", "LJavaIoByteArrayInputStream;", "LJavaLangException;", "setAar", "toString" };
  static const J2ObjcClassInfo _ComStSt25sdkNdefAarRecord = { "AarRecord", "com.st.st25sdk.ndef", ptrTable, methods, fields, 7, 0x1, 7, 1, -1, -1, -1, -1, -1 };
  return &_ComStSt25sdkNdefAarRecord;
}

+ (void)initialize {
  if (self == [ComStSt25sdkNdefAarRecord class]) {
    ComStSt25sdkNdefAarRecord_super$_getPayload = (id (*)(id, SEL))[ComStSt25sdkNdefNDEFRecord instanceMethodForSelector:@selector(getPayload)];
    J2OBJC_SET_INITIALIZED(ComStSt25sdkNdefAarRecord)
  }
}

@end

void ComStSt25sdkNdefAarRecord_init(ComStSt25sdkNdefAarRecord *self) {
  ComStSt25sdkNdefNDEFRecord_init(self);
  [self setTnfWithShort:ComStSt25sdkNdefNDEFRecord_TNF_EXTERNAL];
  [self setTypeWithByteArray:[@"android.com:pkg" java_getBytes]];
  self->mAar_ = @"";
  [self setIdWithByteArray:[IOSByteArray newArrayWithLength:0]];
}

ComStSt25sdkNdefAarRecord *new_ComStSt25sdkNdefAarRecord_init() {
  J2OBJC_NEW_IMPL(ComStSt25sdkNdefAarRecord, init)
}

ComStSt25sdkNdefAarRecord *create_ComStSt25sdkNdefAarRecord_init() {
  J2OBJC_CREATE_IMPL(ComStSt25sdkNdefAarRecord, init)
}

void ComStSt25sdkNdefAarRecord_initWithNSString_(ComStSt25sdkNdefAarRecord *self, NSString *aar) {
  ComStSt25sdkNdefNDEFRecord_init(self);
  if (aar == nil) {
    @throw new_JavaLangIllegalArgumentException_init();
  }
  [self setTnfWithShort:ComStSt25sdkNdefNDEFRecord_TNF_EXTERNAL];
  [self setTypeWithByteArray:[@"android.com:pkg" java_getBytes]];
  self->mAar_ = aar;
  [self setSR];
  [self setIdWithByteArray:[IOSByteArray newArrayWithLength:0]];
}

ComStSt25sdkNdefAarRecord *new_ComStSt25sdkNdefAarRecord_initWithNSString_(NSString *aar) {
  J2OBJC_NEW_IMPL(ComStSt25sdkNdefAarRecord, initWithNSString_, aar)
}

ComStSt25sdkNdefAarRecord *create_ComStSt25sdkNdefAarRecord_initWithNSString_(NSString *aar) {
  J2OBJC_CREATE_IMPL(ComStSt25sdkNdefAarRecord, initWithNSString_, aar)
}

void ComStSt25sdkNdefAarRecord_initWithJavaIoByteArrayInputStream_(ComStSt25sdkNdefAarRecord *self, JavaIoByteArrayInputStream *inputStream) {
  ComStSt25sdkNdefNDEFRecord_initWithJavaIoByteArrayInputStream_(self, inputStream);
  IOSByteArray *payload = ComStSt25sdkNdefAarRecord_super$_getPayload(self, @selector(getPayload));
  if (payload == nil) {
    @throw new_JavaLangException_initWithNSString_(@"Invalid ndef data");
  }
  [self setTnfWithShort:ComStSt25sdkNdefNDEFRecord_TNF_EXTERNAL];
  [self setTypeWithByteArray:[@"android.com:pkg" java_getBytes]];
  if (payload != nil) self->mAar_ = [NSString java_stringWithBytes:payload];
  else self->mAar_ = @"";
  [self setIdWithByteArray:[IOSByteArray newArrayWithLength:0]];
  if (JreLoadStatic(ComStSt25sdkNdefNDEFRecord, DBG_NDEF_RECORD)) {
    [self dbgCheckNdefRecordContentWithByteArray:payload];
  }
}

ComStSt25sdkNdefAarRecord *new_ComStSt25sdkNdefAarRecord_initWithJavaIoByteArrayInputStream_(JavaIoByteArrayInputStream *inputStream) {
  J2OBJC_NEW_IMPL(ComStSt25sdkNdefAarRecord, initWithJavaIoByteArrayInputStream_, inputStream)
}

ComStSt25sdkNdefAarRecord *create_ComStSt25sdkNdefAarRecord_initWithJavaIoByteArrayInputStream_(JavaIoByteArrayInputStream *inputStream) {
  J2OBJC_CREATE_IMPL(ComStSt25sdkNdefAarRecord, initWithJavaIoByteArrayInputStream_, inputStream)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComStSt25sdkNdefAarRecord)
