//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: st25sdk_ios/ndef/AlternativeCarrierRecord.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/st/st25sdk/Helper.h"
#include "com/st/st25sdk/ndef/AlternativeCarrierRecord.h"
#include "com/st/st25sdk/ndef/NDEFRecord.h"
#include "java/io/ByteArrayInputStream.h"
#include "java/io/ByteArrayOutputStream.h"
#include "java/io/IOException.h"
#include "java/lang/Byte.h"
#include "java/lang/Exception.h"
#include "java/nio/ByteBuffer.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"

static id (*ComStSt25sdkNdefAlternativeCarrierRecord_super$_getPayload)(id, SEL);

@interface ComStSt25sdkNdefAlternativeCarrierRecord () {
 @public
  jbyte mCarrierPowerState_;
  jbyte mCarrierDataReferenceLength_;
  IOSByteArray *mCarrierDataReferenceChararacters_;
  jbyte mAuxiliaryDataReferenceCount_;
  id<JavaUtilList> mAuxiliaryDataReferences_;
}

- (void)parseWithJavaNioByteBuffer:(JavaNioByteBuffer *)payload;

@end

J2OBJC_FIELD_SETTER(ComStSt25sdkNdefAlternativeCarrierRecord, mCarrierDataReferenceChararacters_, IOSByteArray *)
J2OBJC_FIELD_SETTER(ComStSt25sdkNdefAlternativeCarrierRecord, mAuxiliaryDataReferences_, id<JavaUtilList>)

__attribute__((unused)) static void ComStSt25sdkNdefAlternativeCarrierRecord_parseWithJavaNioByteBuffer_(ComStSt25sdkNdefAlternativeCarrierRecord *self, JavaNioByteBuffer *payload);

@interface ComStSt25sdkNdefAlternativeCarrierRecord_AuxiliaryDataReference () {
 @public
  jbyte mAuxiliaryDataReferenceLength_;
  IOSByteArray *mAuxiliaryDataReferenceCharacters_;
}

@end

J2OBJC_FIELD_SETTER(ComStSt25sdkNdefAlternativeCarrierRecord_AuxiliaryDataReference, mAuxiliaryDataReferenceCharacters_, IOSByteArray *)

J2OBJC_INITIALIZED_DEFN(ComStSt25sdkNdefAlternativeCarrierRecord)

@implementation ComStSt25sdkNdefAlternativeCarrierRecord

+ (jbyte)CARRIER_POWER_STATE_INACTIVE {
  return ComStSt25sdkNdefAlternativeCarrierRecord_CARRIER_POWER_STATE_INACTIVE;
}

+ (jbyte)CARRIER_POWER_STATE_ACTIVE {
  return ComStSt25sdkNdefAlternativeCarrierRecord_CARRIER_POWER_STATE_ACTIVE;
}

+ (jbyte)CARRIER_POWER_STATE_ACTIVATING {
  return ComStSt25sdkNdefAlternativeCarrierRecord_CARRIER_POWER_STATE_ACTIVATING;
}

+ (jbyte)CARRIER_POWER_STATE_UNKNOWN {
  return ComStSt25sdkNdefAlternativeCarrierRecord_CARRIER_POWER_STATE_UNKNOWN;
}

- (instancetype)initWithByte:(jbyte)carrierPowerState
               withByteArray:(IOSByteArray *)carrierDataReferenceCharacters
            withJavaUtilList:(id<JavaUtilList>)auxiliaryDataReferences {
  ComStSt25sdkNdefAlternativeCarrierRecord_initWithByte_withByteArray_withJavaUtilList_(self, carrierPowerState, carrierDataReferenceCharacters, auxiliaryDataReferences);
  return self;
}

- (instancetype)initWithJavaIoByteArrayInputStream:(JavaIoByteArrayInputStream *)inputStream {
  ComStSt25sdkNdefAlternativeCarrierRecord_initWithJavaIoByteArrayInputStream_(self, inputStream);
  return self;
}

- (void)parseWithJavaNioByteBuffer:(JavaNioByteBuffer *)payload {
  ComStSt25sdkNdefAlternativeCarrierRecord_parseWithJavaNioByteBuffer_(self, payload);
}

- (IOSByteArray *)getPayload {
  @try {
    JavaIoByteArrayOutputStream *outputStream = new_JavaIoByteArrayOutputStream_init();
    [outputStream writeWithInt:mCarrierPowerState_];
    [outputStream writeWithInt:mCarrierDataReferenceLength_];
    [outputStream writeWithByteArray:mCarrierDataReferenceChararacters_];
    [outputStream writeWithInt:mAuxiliaryDataReferenceCount_];
    for (jint i = 0; i < mAuxiliaryDataReferenceCount_; i++) {
      ComStSt25sdkNdefAlternativeCarrierRecord_AuxiliaryDataReference *auxiliaryDataReference = [((id<JavaUtilList>) nil_chk(mAuxiliaryDataReferences_)) getWithInt:i];
      [outputStream writeWithInt:[((ComStSt25sdkNdefAlternativeCarrierRecord_AuxiliaryDataReference *) nil_chk(auxiliaryDataReference)) getAuxiliaryDataReferenceLength]];
      [outputStream writeWithByteArray:[auxiliaryDataReference getAuxiliaryDataReferenceCharacters]];
    }
    IOSByteArray *payload = [outputStream toByteArray];
    return payload;
  }
  @catch (JavaIoIOException *e) {
    [e printStackTrace];
    @throw new_JavaLangException_initWithNSString_(@"Error while parsing payload");
  }
}

- (jbyte)getCarrierPowerState {
  return mCarrierPowerState_;
}

- (jbyte)getCarrierDataReferenceLength {
  return mCarrierDataReferenceLength_;
}

- (IOSByteArray *)getCarrierDataReferenceCharacters {
  return mCarrierDataReferenceChararacters_;
}

- (jbyte)getAuxiliaryDataReferenceCount {
  return mAuxiliaryDataReferenceCount_;
}

- (id<JavaUtilList>)getAuxiliaryDataReferences {
  return mAuxiliaryDataReferences_;
}

- (NSString *)description {
  NSString *recordHeader = [super description];
  NSString *txt = @"Alternative Carrier Record:\n";
  (void) JreStrAppendStrong(&txt, "$", recordHeader);
  (void) JreStrAppendStrong(&txt, "$$C", @"- Carrier Power State : 0x", [((NSString *) nil_chk(NSString_java_formatWithNSString_withNSObjectArray_(@"%02x", [IOSObjectArray newArrayWithObjects:(id[]){ JavaLangByte_valueOfWithByte_(mCarrierPowerState_) } count:1 type:NSObject_class_()]))) uppercaseString], 0x000a);
  (void) JreStrAppendStrong(&txt, "$BC", @"- Carrier Data Reference Length : ", mCarrierDataReferenceLength_, 0x000a);
  (void) JreStrAppendStrong(&txt, "$$C", @"- Carrier Data Reference (hex values) : ", [((NSString *) nil_chk(ComStSt25sdkHelper_convertHexByteArrayToStringWithByteArray_(mCarrierDataReferenceChararacters_))) uppercaseString], 0x000a);
  (void) JreStrAppendStrong(&txt, "$$C", @"- Auxiliary Data Reference Count : ", NSString_java_formatWithNSString_withNSObjectArray_(@"%d", [IOSObjectArray newArrayWithObjects:(id[]){ JavaLangByte_valueOfWithByte_(mAuxiliaryDataReferenceCount_) } count:1 type:NSObject_class_()]), 0x000a);
  for (jint i = 0; i < mAuxiliaryDataReferenceCount_; i++) {
    ComStSt25sdkNdefAlternativeCarrierRecord_AuxiliaryDataReference *auxiliaryDataReference = [((id<JavaUtilList>) nil_chk(mAuxiliaryDataReferences_)) getWithInt:i];
    (void) JreStrAppendStrong(&txt, "$I$", @"- Reference ", i, @":\n");
    (void) JreStrAppendStrong(&txt, "$BC", @"-- Auxiliary Data Reference Length : ", ((ComStSt25sdkNdefAlternativeCarrierRecord_AuxiliaryDataReference *) nil_chk(auxiliaryDataReference))->mAuxiliaryDataReferenceLength_, 0x000a);
    (void) JreStrAppendStrong(&txt, "$$C", @"-- Auxiliary Data Reference (hex values) : ", [((NSString *) nil_chk(ComStSt25sdkHelper_convertHexByteArrayToStringWithByteArray_(auxiliaryDataReference->mAuxiliaryDataReferenceCharacters_))) uppercaseString], 0x000a);
  }
  return txt;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, 3, -1, -1, -1 },
    { NULL, "V", 0x2, 4, 5, 3, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, 3, -1, -1, -1 },
    { NULL, "B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, -1, -1, -1, 6, -1, -1 },
    { NULL, "LNSString;", 0x1, 7, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithByte:withByteArray:withJavaUtilList:);
  methods[1].selector = @selector(initWithJavaIoByteArrayInputStream:);
  methods[2].selector = @selector(parseWithJavaNioByteBuffer:);
  methods[3].selector = @selector(getPayload);
  methods[4].selector = @selector(getCarrierPowerState);
  methods[5].selector = @selector(getCarrierDataReferenceLength);
  methods[6].selector = @selector(getCarrierDataReferenceCharacters);
  methods[7].selector = @selector(getAuxiliaryDataReferenceCount);
  methods[8].selector = @selector(getAuxiliaryDataReferences);
  methods[9].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "mCarrierPowerState_", "B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mCarrierDataReferenceLength_", "B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mCarrierDataReferenceChararacters_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mAuxiliaryDataReferenceCount_", "B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mAuxiliaryDataReferences_", "LJavaUtilList;", .constantValue.asLong = 0, 0x2, -1, -1, 8, -1 },
    { "CARRIER_POWER_STATE_INACTIVE", "B", .constantValue.asChar = ComStSt25sdkNdefAlternativeCarrierRecord_CARRIER_POWER_STATE_INACTIVE, 0x19, -1, -1, -1, -1 },
    { "CARRIER_POWER_STATE_ACTIVE", "B", .constantValue.asChar = ComStSt25sdkNdefAlternativeCarrierRecord_CARRIER_POWER_STATE_ACTIVE, 0x19, -1, -1, -1, -1 },
    { "CARRIER_POWER_STATE_ACTIVATING", "B", .constantValue.asChar = ComStSt25sdkNdefAlternativeCarrierRecord_CARRIER_POWER_STATE_ACTIVATING, 0x19, -1, -1, -1, -1 },
    { "CARRIER_POWER_STATE_UNKNOWN", "B", .constantValue.asChar = ComStSt25sdkNdefAlternativeCarrierRecord_CARRIER_POWER_STATE_UNKNOWN, 0x19, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "B[BLJavaUtilList;", "(B[BLjava/util/List<Lcom/st/st25sdk/ndef/AlternativeCarrierRecord$AuxiliaryDataReference;>;)V", "LJavaIoByteArrayInputStream;", "LJavaLangException;", "parse", "LJavaNioByteBuffer;", "()Ljava/util/List<Lcom/st/st25sdk/ndef/AlternativeCarrierRecord$AuxiliaryDataReference;>;", "toString", "Ljava/util/List<Lcom/st/st25sdk/ndef/AlternativeCarrierRecord$AuxiliaryDataReference;>;", "LComStSt25sdkNdefAlternativeCarrierRecord_AuxiliaryDataReference;" };
  static const J2ObjcClassInfo _ComStSt25sdkNdefAlternativeCarrierRecord = { "AlternativeCarrierRecord", "com.st.st25sdk.ndef", ptrTable, methods, fields, 7, 0x1, 10, 9, -1, 9, -1, -1, -1 };
  return &_ComStSt25sdkNdefAlternativeCarrierRecord;
}

+ (void)initialize {
  if (self == [ComStSt25sdkNdefAlternativeCarrierRecord class]) {
    ComStSt25sdkNdefAlternativeCarrierRecord_super$_getPayload = (id (*)(id, SEL))[ComStSt25sdkNdefNDEFRecord instanceMethodForSelector:@selector(getPayload)];
    J2OBJC_SET_INITIALIZED(ComStSt25sdkNdefAlternativeCarrierRecord)
  }
}

@end

void ComStSt25sdkNdefAlternativeCarrierRecord_initWithByte_withByteArray_withJavaUtilList_(ComStSt25sdkNdefAlternativeCarrierRecord *self, jbyte carrierPowerState, IOSByteArray *carrierDataReferenceCharacters, id<JavaUtilList> auxiliaryDataReferences) {
  ComStSt25sdkNdefNDEFRecord_init(self);
  self->mAuxiliaryDataReferences_ = new_JavaUtilArrayList_init();
  [self setTnfWithShort:ComStSt25sdkNdefNDEFRecord_TNF_WELLKNOWN];
  [self setTypeWithByteArray:JreLoadStatic(ComStSt25sdkNdefNDEFRecord, RTD_ALTERNATIVE_CARRIER)];
  [self setILWithBoolean:false];
  self->mCarrierPowerState_ = carrierPowerState;
  self->mCarrierDataReferenceLength_ = (jbyte) ((IOSByteArray *) nil_chk(carrierDataReferenceCharacters))->size_;
  self->mCarrierDataReferenceChararacters_ = carrierDataReferenceCharacters;
  self->mAuxiliaryDataReferenceCount_ = (jbyte) [((id<JavaUtilList>) nil_chk(auxiliaryDataReferences)) size];
  self->mAuxiliaryDataReferences_ = auxiliaryDataReferences;
  [self setSR];
}

ComStSt25sdkNdefAlternativeCarrierRecord *new_ComStSt25sdkNdefAlternativeCarrierRecord_initWithByte_withByteArray_withJavaUtilList_(jbyte carrierPowerState, IOSByteArray *carrierDataReferenceCharacters, id<JavaUtilList> auxiliaryDataReferences) {
  J2OBJC_NEW_IMPL(ComStSt25sdkNdefAlternativeCarrierRecord, initWithByte_withByteArray_withJavaUtilList_, carrierPowerState, carrierDataReferenceCharacters, auxiliaryDataReferences)
}

ComStSt25sdkNdefAlternativeCarrierRecord *create_ComStSt25sdkNdefAlternativeCarrierRecord_initWithByte_withByteArray_withJavaUtilList_(jbyte carrierPowerState, IOSByteArray *carrierDataReferenceCharacters, id<JavaUtilList> auxiliaryDataReferences) {
  J2OBJC_CREATE_IMPL(ComStSt25sdkNdefAlternativeCarrierRecord, initWithByte_withByteArray_withJavaUtilList_, carrierPowerState, carrierDataReferenceCharacters, auxiliaryDataReferences)
}

void ComStSt25sdkNdefAlternativeCarrierRecord_initWithJavaIoByteArrayInputStream_(ComStSt25sdkNdefAlternativeCarrierRecord *self, JavaIoByteArrayInputStream *inputStream) {
  ComStSt25sdkNdefNDEFRecord_initWithJavaIoByteArrayInputStream_(self, inputStream);
  self->mAuxiliaryDataReferences_ = new_JavaUtilArrayList_init();
  IOSByteArray *payload = ComStSt25sdkNdefAlternativeCarrierRecord_super$_getPayload(self, @selector(getPayload));
  if (payload == nil) {
    @throw new_JavaLangException_initWithNSString_(@"Invalid ndef data");
  }
  [self setTnfWithShort:ComStSt25sdkNdefNDEFRecord_TNF_WELLKNOWN];
  [self setTypeWithByteArray:JreLoadStatic(ComStSt25sdkNdefNDEFRecord, RTD_ALTERNATIVE_CARRIER)];
  ComStSt25sdkNdefAlternativeCarrierRecord_parseWithJavaNioByteBuffer_(self, JavaNioByteBuffer_wrapWithByteArray_(payload));
  if (JreLoadStatic(ComStSt25sdkNdefNDEFRecord, DBG_NDEF_RECORD)) {
    [self dbgCheckNdefRecordContentWithByteArray:payload];
  }
}

ComStSt25sdkNdefAlternativeCarrierRecord *new_ComStSt25sdkNdefAlternativeCarrierRecord_initWithJavaIoByteArrayInputStream_(JavaIoByteArrayInputStream *inputStream) {
  J2OBJC_NEW_IMPL(ComStSt25sdkNdefAlternativeCarrierRecord, initWithJavaIoByteArrayInputStream_, inputStream)
}

ComStSt25sdkNdefAlternativeCarrierRecord *create_ComStSt25sdkNdefAlternativeCarrierRecord_initWithJavaIoByteArrayInputStream_(JavaIoByteArrayInputStream *inputStream) {
  J2OBJC_CREATE_IMPL(ComStSt25sdkNdefAlternativeCarrierRecord, initWithJavaIoByteArrayInputStream_, inputStream)
}

void ComStSt25sdkNdefAlternativeCarrierRecord_parseWithJavaNioByteBuffer_(ComStSt25sdkNdefAlternativeCarrierRecord *self, JavaNioByteBuffer *payload) {
  self->mCarrierPowerState_ = [((JavaNioByteBuffer *) nil_chk(payload)) get];
  self->mCarrierDataReferenceLength_ = [payload get];
  self->mCarrierDataReferenceChararacters_ = [IOSByteArray newArrayWithLength:self->mCarrierDataReferenceLength_];
  (void) [payload getWithByteArray:self->mCarrierDataReferenceChararacters_];
  self->mAuxiliaryDataReferenceCount_ = [payload get];
  for (jint i = 0; i < self->mAuxiliaryDataReferenceCount_; i++) {
    jbyte auxiliaryDataReferenceLength = [payload get];
    IOSByteArray *auxiliaryDataReferenceCharacters = [IOSByteArray newArrayWithLength:auxiliaryDataReferenceLength];
    (void) [payload getWithByteArray:auxiliaryDataReferenceCharacters];
    ComStSt25sdkNdefAlternativeCarrierRecord_AuxiliaryDataReference *auxiliaryDataReference = new_ComStSt25sdkNdefAlternativeCarrierRecord_AuxiliaryDataReference_initWithByteArray_(auxiliaryDataReferenceCharacters);
    [((id<JavaUtilList>) nil_chk(self->mAuxiliaryDataReferences_)) addWithId:auxiliaryDataReference];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComStSt25sdkNdefAlternativeCarrierRecord)

@implementation ComStSt25sdkNdefAlternativeCarrierRecord_AuxiliaryDataReference

- (instancetype)initWithByteArray:(IOSByteArray *)auxiliaryDataReferenceCharacters {
  ComStSt25sdkNdefAlternativeCarrierRecord_AuxiliaryDataReference_initWithByteArray_(self, auxiliaryDataReferenceCharacters);
  return self;
}

- (jbyte)getAuxiliaryDataReferenceLength {
  return mAuxiliaryDataReferenceLength_;
}

- (IOSByteArray *)getAuxiliaryDataReferenceCharacters {
  return mAuxiliaryDataReferenceCharacters_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithByteArray:);
  methods[1].selector = @selector(getAuxiliaryDataReferenceLength);
  methods[2].selector = @selector(getAuxiliaryDataReferenceCharacters);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "mAuxiliaryDataReferenceLength_", "B", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "mAuxiliaryDataReferenceCharacters_", "[B", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "[B", "LComStSt25sdkNdefAlternativeCarrierRecord;" };
  static const J2ObjcClassInfo _ComStSt25sdkNdefAlternativeCarrierRecord_AuxiliaryDataReference = { "AuxiliaryDataReference", "com.st.st25sdk.ndef", ptrTable, methods, fields, 7, 0x9, 3, 2, 1, -1, -1, -1, -1 };
  return &_ComStSt25sdkNdefAlternativeCarrierRecord_AuxiliaryDataReference;
}

@end

void ComStSt25sdkNdefAlternativeCarrierRecord_AuxiliaryDataReference_initWithByteArray_(ComStSt25sdkNdefAlternativeCarrierRecord_AuxiliaryDataReference *self, IOSByteArray *auxiliaryDataReferenceCharacters) {
  NSObject_init(self);
  self->mAuxiliaryDataReferenceLength_ = (jbyte) ((IOSByteArray *) nil_chk(auxiliaryDataReferenceCharacters))->size_;
  self->mAuxiliaryDataReferenceCharacters_ = auxiliaryDataReferenceCharacters;
}

ComStSt25sdkNdefAlternativeCarrierRecord_AuxiliaryDataReference *new_ComStSt25sdkNdefAlternativeCarrierRecord_AuxiliaryDataReference_initWithByteArray_(IOSByteArray *auxiliaryDataReferenceCharacters) {
  J2OBJC_NEW_IMPL(ComStSt25sdkNdefAlternativeCarrierRecord_AuxiliaryDataReference, initWithByteArray_, auxiliaryDataReferenceCharacters)
}

ComStSt25sdkNdefAlternativeCarrierRecord_AuxiliaryDataReference *create_ComStSt25sdkNdefAlternativeCarrierRecord_AuxiliaryDataReference_initWithByteArray_(IOSByteArray *auxiliaryDataReferenceCharacters) {
  J2OBJC_CREATE_IMPL(ComStSt25sdkNdefAlternativeCarrierRecord_AuxiliaryDataReference, initWithByteArray_, auxiliaryDataReferenceCharacters)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComStSt25sdkNdefAlternativeCarrierRecord_AuxiliaryDataReference)
