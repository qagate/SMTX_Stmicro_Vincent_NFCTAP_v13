//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: st25sdk_ios/MultiAreaInterface.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComStSt25sdkMultiAreaInterface")
#ifdef RESTRICT_ComStSt25sdkMultiAreaInterface
#define INCLUDE_ALL_ComStSt25sdkMultiAreaInterface 0
#else
#define INCLUDE_ALL_ComStSt25sdkMultiAreaInterface 1
#endif
#undef RESTRICT_ComStSt25sdkMultiAreaInterface

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComStSt25sdkMultiAreaInterface_) && (INCLUDE_ALL_ComStSt25sdkMultiAreaInterface || defined(INCLUDE_ComStSt25sdkMultiAreaInterface))
#define ComStSt25sdkMultiAreaInterface_

@class ComStSt25sdkNdefNDEFMsg;
@class ComStSt25sdkTagHelper_ReadWriteProtection;
@class IOSByteArray;
@protocol JavaUtilList;

@protocol ComStSt25sdkMultiAreaInterface < JavaObject >

- (jint)getMaxNumberOfAreas;

- (jint)getNumberOfAreas;

- (void)setNumberOfAreasWithInt:(jint)nbOfAreas;

- (jint)getAreaSizeInBytesWithInt:(jint)area;

- (jint)getAreaOffsetInBytesWithInt:(jint)area;

- (jint)getAreaOffsetInBlocksWithInt:(jint)area;

- (jint)getAreaFromBlockAddressWithInt:(jint)blockOffset;

- (jint)getAreaFromByteAddressWithInt:(jint)address;

- (ComStSt25sdkNdefNDEFMsg *)readNdefMessageWithInt:(jint)area;

- (void)writeNdefMessageWithInt:(jint)area
    withComStSt25sdkNdefNDEFMsg:(ComStSt25sdkNdefNDEFMsg *)msg;

- (ComStSt25sdkTagHelper_ReadWriteProtection *)getReadWriteProtectionWithInt:(jint)area;

- (void)setReadWriteProtectionWithInt:(jint)area
withComStSt25sdkTagHelper_ReadWriteProtection:(ComStSt25sdkTagHelper_ReadWriteProtection *)protection;

- (void)setReadWriteProtectionWithInt:(jint)area
withComStSt25sdkTagHelper_ReadWriteProtection:(ComStSt25sdkTagHelper_ReadWriteProtection *)protection
                        withByteArray:(IOSByteArray *)password;

- (id<JavaUtilList>)getPossibleReadWriteProtectionWithInt:(jint)area;

- (jint)getAreaPasswordLengthWithInt:(jint)area;

@end

@interface ComStSt25sdkMultiAreaInterface : NSObject
@property (readonly, class) jint AREA1 NS_SWIFT_NAME(AREA1);
@property (readonly, class) jint AREA2 NS_SWIFT_NAME(AREA2);
@property (readonly, class) jint AREA3 NS_SWIFT_NAME(AREA3);
@property (readonly, class) jint AREA4 NS_SWIFT_NAME(AREA4);

+ (jint)AREA1;

+ (jint)AREA2;

+ (jint)AREA3;

+ (jint)AREA4;

@end

J2OBJC_EMPTY_STATIC_INIT(ComStSt25sdkMultiAreaInterface)

inline jint ComStSt25sdkMultiAreaInterface_get_AREA1(void);
#define ComStSt25sdkMultiAreaInterface_AREA1 1
J2OBJC_STATIC_FIELD_CONSTANT(ComStSt25sdkMultiAreaInterface, AREA1, jint)

inline jint ComStSt25sdkMultiAreaInterface_get_AREA2(void);
#define ComStSt25sdkMultiAreaInterface_AREA2 2
J2OBJC_STATIC_FIELD_CONSTANT(ComStSt25sdkMultiAreaInterface, AREA2, jint)

inline jint ComStSt25sdkMultiAreaInterface_get_AREA3(void);
#define ComStSt25sdkMultiAreaInterface_AREA3 3
J2OBJC_STATIC_FIELD_CONSTANT(ComStSt25sdkMultiAreaInterface, AREA3, jint)

inline jint ComStSt25sdkMultiAreaInterface_get_AREA4(void);
#define ComStSt25sdkMultiAreaInterface_AREA4 4
J2OBJC_STATIC_FIELD_CONSTANT(ComStSt25sdkMultiAreaInterface, AREA4, jint)

J2OBJC_TYPE_LITERAL_HEADER(ComStSt25sdkMultiAreaInterface)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComStSt25sdkMultiAreaInterface")
