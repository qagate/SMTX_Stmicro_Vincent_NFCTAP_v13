//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: st25sdk_ios/NFCTag.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/st/st25sdk/Helper.h"
#include "com/st/st25sdk/NFCTag.h"
#include "com/st/st25sdk/RFReaderInterface.h"
#include "com/st/st25sdk/STException.h"
#include "com/st/st25sdk/TagHelper.h"
#include "com/st/st25sdk/ndef/NDEFMsg.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/util/Hashtable.h"

@protocol JavaUtilFunctionBiFunction;
@protocol JavaUtilFunctionFunction;

#pragma clang diagnostic ignored "-Wincomplete-implementation"

@interface ComStSt25sdkNFCTag () {
 @public
  id<ComStSt25sdkRFReaderInterface> mReaderInterface_;
}

@end

J2OBJC_FIELD_SETTER(ComStSt25sdkNFCTag, mReaderInterface_, id<ComStSt25sdkRFReaderInterface>)

__attribute__((unused)) static void ComStSt25sdkNFCTag_TagAddressingMode_initWithNSString_withInt_(ComStSt25sdkNFCTag_TagAddressingMode *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static ComStSt25sdkNFCTag_TagAddressingMode *new_ComStSt25sdkNFCTag_TagAddressingMode_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

__attribute__((unused)) static void ComStSt25sdkNFCTag_NfcTagTypes_initWithNSString_withInt_(ComStSt25sdkNFCTag_NfcTagTypes *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static ComStSt25sdkNFCTag_NfcTagTypes *new_ComStSt25sdkNFCTag_NfcTagTypes_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

@interface ComStSt25sdkNFCTag_1 : JavaUtilHashtable

- (instancetype)init;

- (NSString *)computeIfAbsentWithId:(ComStSt25sdkNFCTag_NfcTagTypes *)arg0
       withJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg1;

- (NSString *)getWithId:(id)arg0;

- (NSString *)removeWithId:(id)arg0;

- (NSString *)putIfAbsentWithId:(ComStSt25sdkNFCTag_NfcTagTypes *)arg0
                         withId:(NSString *)arg1;

- (NSString *)computeIfPresentWithId:(ComStSt25sdkNFCTag_NfcTagTypes *)arg0
      withJavaUtilFunctionBiFunction:(id<JavaUtilFunctionBiFunction>)arg1;

- (NSString *)replaceWithId:(ComStSt25sdkNFCTag_NfcTagTypes *)arg0
                     withId:(NSString *)arg1;

- (NSString *)putWithId:(ComStSt25sdkNFCTag_NfcTagTypes *)arg0
                 withId:(NSString *)arg1;

- (NSString *)computeWithId:(ComStSt25sdkNFCTag_NfcTagTypes *)arg0
withJavaUtilFunctionBiFunction:(id<JavaUtilFunctionBiFunction>)arg1;

- (NSString *)mergeWithId:(ComStSt25sdkNFCTag_NfcTagTypes *)arg0
                   withId:(NSString *)arg1
withJavaUtilFunctionBiFunction:(id<JavaUtilFunctionBiFunction>)arg2;

- (NSString *)getOrDefaultWithId:(id)arg0
                          withId:(NSString *)arg1;

@end

J2OBJC_EMPTY_STATIC_INIT(ComStSt25sdkNFCTag_1)

__attribute__((unused)) static void ComStSt25sdkNFCTag_1_init(ComStSt25sdkNFCTag_1 *self);

__attribute__((unused)) static ComStSt25sdkNFCTag_1 *new_ComStSt25sdkNFCTag_1_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComStSt25sdkNFCTag_1 *create_ComStSt25sdkNFCTag_1_init(void);

J2OBJC_INITIALIZED_DEFN(ComStSt25sdkNFCTag)

JavaUtilHashtable *ComStSt25sdkNFCTag_NFCTagTypeDescription;
NSString *ComStSt25sdkNFCTag_DYNAMIC_NFC_RFID_TAG = @"Dynamic NFC/RFID tag";
NSString *ComStSt25sdkNFCTag_NFC_RFID_TAG = @"NFC/RFID tag";

@implementation ComStSt25sdkNFCTag

+ (JavaUtilHashtable *)NFCTagTypeDescription {
  return ComStSt25sdkNFCTag_NFCTagTypeDescription;
}

+ (void)setNFCTagTypeDescription:(JavaUtilHashtable *)value {
  ComStSt25sdkNFCTag_NFCTagTypeDescription = value;
}

+ (NSString *)DYNAMIC_NFC_RFID_TAG {
  return ComStSt25sdkNFCTag_DYNAMIC_NFC_RFID_TAG;
}

+ (void)setDYNAMIC_NFC_RFID_TAG:(NSString *)value {
  ComStSt25sdkNFCTag_DYNAMIC_NFC_RFID_TAG = value;
}

+ (NSString *)NFC_RFID_TAG {
  return ComStSt25sdkNFCTag_NFC_RFID_TAG;
}

+ (void)setNFC_RFID_TAG:(NSString *)value {
  ComStSt25sdkNFCTag_NFC_RFID_TAG = value;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComStSt25sdkNFCTag_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithComStSt25sdkRFReaderInterface:(id<ComStSt25sdkRFReaderInterface>)readerInterface {
  ComStSt25sdkNFCTag_initWithComStSt25sdkRFReaderInterface_(self, readerInterface);
  return self;
}

- (id<ComStSt25sdkRFReaderInterface>)getReaderInterface {
  return mReaderInterface_;
}

- (void)setReaderInterfaceWithComStSt25sdkRFReaderInterface:(id<ComStSt25sdkRFReaderInterface>)rfReaderInterface {
  mReaderInterface_ = rfReaderInterface;
}

- (jint)getCCFileLength {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jbyte)getCCMagicNumber {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jbyte)getCCMappingVersion {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jbyte)getCCReadAccess {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jbyte)getCCWriteAccess {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jint)getCCMemorySize {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jboolean)isEqual:(id)obj {
  if (self == obj) return true;
  if (obj == nil) return false;
  if ([self java_getClass] != [obj java_getClass]) return false;
  @try {
    if ([((NSString *) nil_chk([self getUidString])) isEqual:[((ComStSt25sdkNFCTag *) cast_chk(obj, [ComStSt25sdkNFCTag class])) getUidString]]) return true;
  }
  @catch (ComStSt25sdkSTException *e) {
    [e printStackTrace];
  }
  return false;
}

- (void)writeNdefMessageWithComStSt25sdkNdefNDEFMsg:(ComStSt25sdkNdefNDEFMsg *)msg {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (ComStSt25sdkNdefNDEFMsg *)readNdefMessage {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (IOSByteArray *)readCCFile {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)writeCCFile {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)writeCCFileWithByteArray:(IOSByteArray *)buffer {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)initEmptyCCFile {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (jint)getSysFileLength {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jbyte)getICRef {
  return 0;
}

- (jint)getMemSizeInBytes {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (IOSByteArray *)readBytesWithInt:(jint)byteAddress
                           withInt:(jint)sizeInBytes {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)writeBytesWithInt:(jint)byteAddress
            withByteArray:(IOSByteArray *)data {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (NSString *)getManufacturerName {
  return ComStSt25sdkTagHelper_getManufacturerNameWithComStSt25sdkNFCTag_(self);
}

- (NSString *)getUidString {
  return ComStSt25sdkHelper_convertByteArrayToHexStringWithByteArray_(mUid_);
}

- (IOSByteArray *)getUid {
  return mUid_;
}

- (NSString *)getName {
  return mName_;
}

- (void)setNameWithNSString:(NSString *)name {
  mName_ = name;
}

- (NSString *)getTypeDescription {
  return mTypeDescription_;
}

- (NSString *)getDescription {
  return mDescription_;
}

- (IOSObjectArray *)getTechList {
  return [((id<ComStSt25sdkRFReaderInterface>) nil_chk(mReaderInterface_)) getTechListWithByteArray:mUid_];
}

- (ComStSt25sdkNFCTag_NfcTagTypes *)getType {
  ComStSt25sdkNFCTag_NfcTagTypes *tagType = JreLoadEnum(ComStSt25sdkNFCTag_NfcTagTypes, NFC_TAG_TYPE_UNKNOWN);
  @try {
    tagType = [((id<ComStSt25sdkRFReaderInterface>) nil_chk(mReaderInterface_)) decodeTagTypeWithByteArray:[self getUid]];
  }
  @catch (ComStSt25sdkSTException *e) {
    [e printStackTrace];
  }
  return tagType;
}

- (IOSByteArray *)readSysFile {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LComStSt25sdkRFReaderInterface;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 0, -1, -1, -1, -1 },
    { NULL, "I", 0x401, -1, -1, 2, -1, -1, -1 },
    { NULL, "B", 0x401, -1, -1, 2, -1, -1, -1 },
    { NULL, "B", 0x401, -1, -1, 2, -1, -1, -1 },
    { NULL, "B", 0x401, -1, -1, 2, -1, -1, -1 },
    { NULL, "B", 0x401, -1, -1, 2, -1, -1, -1 },
    { NULL, "I", 0x401, -1, -1, 2, -1, -1, -1 },
    { NULL, "Z", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 5, 6, 2, -1, -1, -1 },
    { NULL, "LComStSt25sdkNdefNDEFMsg;", 0x401, -1, -1, 2, -1, -1, -1 },
    { NULL, "[B", 0x401, -1, -1, 2, -1, -1, -1 },
    { NULL, "V", 0x401, -1, -1, 2, -1, -1, -1 },
    { NULL, "V", 0x401, 7, 8, 2, -1, -1, -1 },
    { NULL, "V", 0x401, -1, -1, 2, -1, -1, -1 },
    { NULL, "I", 0x401, -1, -1, 2, -1, -1, -1 },
    { NULL, "B", 0x1, -1, -1, 2, -1, -1, -1 },
    { NULL, "I", 0x401, -1, -1, 2, -1, -1, -1 },
    { NULL, "[B", 0x401, 9, 10, 2, -1, -1, -1 },
    { NULL, "V", 0x401, 11, 12, 2, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, 2, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, 2, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, 2, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 13, 14, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComStSt25sdkNFCTag_NfcTagTypes;", 0x1, -1, -1, 2, -1, -1, -1 },
    { NULL, "[B", 0x401, -1, -1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithComStSt25sdkRFReaderInterface:);
  methods[2].selector = @selector(getReaderInterface);
  methods[3].selector = @selector(setReaderInterfaceWithComStSt25sdkRFReaderInterface:);
  methods[4].selector = @selector(getCCFileLength);
  methods[5].selector = @selector(getCCMagicNumber);
  methods[6].selector = @selector(getCCMappingVersion);
  methods[7].selector = @selector(getCCReadAccess);
  methods[8].selector = @selector(getCCWriteAccess);
  methods[9].selector = @selector(getCCMemorySize);
  methods[10].selector = @selector(isEqual:);
  methods[11].selector = @selector(writeNdefMessageWithComStSt25sdkNdefNDEFMsg:);
  methods[12].selector = @selector(readNdefMessage);
  methods[13].selector = @selector(readCCFile);
  methods[14].selector = @selector(writeCCFile);
  methods[15].selector = @selector(writeCCFileWithByteArray:);
  methods[16].selector = @selector(initEmptyCCFile);
  methods[17].selector = @selector(getSysFileLength);
  methods[18].selector = @selector(getICRef);
  methods[19].selector = @selector(getMemSizeInBytes);
  methods[20].selector = @selector(readBytesWithInt:withInt:);
  methods[21].selector = @selector(writeBytesWithInt:withByteArray:);
  methods[22].selector = @selector(getManufacturerName);
  methods[23].selector = @selector(getUidString);
  methods[24].selector = @selector(getUid);
  methods[25].selector = @selector(getName);
  methods[26].selector = @selector(setNameWithNSString:);
  methods[27].selector = @selector(getTypeDescription);
  methods[28].selector = @selector(getDescription);
  methods[29].selector = @selector(getTechList);
  methods[30].selector = @selector(getType);
  methods[31].selector = @selector(readSysFile);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "mReaderInterface_", "LComStSt25sdkRFReaderInterface;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mName_", "LNSString;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "mUid_", "[B", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "mTypeDescription_", "LNSString;", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "mDescription_", "LNSString;", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "mMemSize_", "I", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "mAddressingMode_", "LComStSt25sdkNFCTag_TagAddressingMode;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "mNdefMsg_", "LComStSt25sdkNdefNDEFMsg;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "NFCTagTypeDescription", "LJavaUtilHashtable;", .constantValue.asLong = 0, 0x9, -1, 15, 16, -1 },
    { "DYNAMIC_NFC_RFID_TAG", "LNSString;", .constantValue.asLong = 0, 0x9, -1, 17, -1, -1 },
    { "NFC_RFID_TAG", "LNSString;", .constantValue.asLong = 0, 0x9, -1, 18, -1, -1 },
  };
  static const void *ptrTable[] = { "LComStSt25sdkRFReaderInterface;", "setReaderInterface", "LComStSt25sdkSTException;", "equals", "LNSObject;", "writeNdefMessage", "LComStSt25sdkNdefNDEFMsg;", "writeCCFile", "[B", "readBytes", "II", "writeBytes", "I[B", "setName", "LNSString;", &ComStSt25sdkNFCTag_NFCTagTypeDescription, "Ljava/util/Hashtable<Lcom/st/st25sdk/NFCTag$NfcTagTypes;Ljava/lang/String;>;", &ComStSt25sdkNFCTag_DYNAMIC_NFC_RFID_TAG, &ComStSt25sdkNFCTag_NFC_RFID_TAG, "LComStSt25sdkNFCTag_TagAddressingMode;LComStSt25sdkNFCTag_NfcTagTypes;" };
  static const J2ObjcClassInfo _ComStSt25sdkNFCTag = { "NFCTag", "com.st.st25sdk", ptrTable, methods, fields, 7, 0x401, 32, 11, -1, 19, -1, -1, -1 };
  return &_ComStSt25sdkNFCTag;
}

+ (void)initialize {
  if (self == [ComStSt25sdkNFCTag class]) {
    ComStSt25sdkNFCTag_NFCTagTypeDescription = new_ComStSt25sdkNFCTag_1_init();
    J2OBJC_SET_INITIALIZED(ComStSt25sdkNFCTag)
  }
}

@end

void ComStSt25sdkNFCTag_init(ComStSt25sdkNFCTag *self) {
  NSObject_init(self);
  self->mReaderInterface_ = nil;
}

void ComStSt25sdkNFCTag_initWithComStSt25sdkRFReaderInterface_(ComStSt25sdkNFCTag *self, id<ComStSt25sdkRFReaderInterface> readerInterface) {
  NSObject_init(self);
  self->mReaderInterface_ = nil;
  self->mReaderInterface_ = readerInterface;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComStSt25sdkNFCTag)

J2OBJC_INITIALIZED_DEFN(ComStSt25sdkNFCTag_TagAddressingMode)

ComStSt25sdkNFCTag_TagAddressingMode *ComStSt25sdkNFCTag_TagAddressingMode_values_[3];

@implementation ComStSt25sdkNFCTag_TagAddressingMode

+ (ComStSt25sdkNFCTag_TagAddressingMode *)NON_ADDRESSED {
  return JreEnum(ComStSt25sdkNFCTag_TagAddressingMode, NON_ADDRESSED);
}

+ (ComStSt25sdkNFCTag_TagAddressingMode *)ADDRESSED {
  return JreEnum(ComStSt25sdkNFCTag_TagAddressingMode, ADDRESSED);
}

+ (ComStSt25sdkNFCTag_TagAddressingMode *)SELECT {
  return JreEnum(ComStSt25sdkNFCTag_TagAddressingMode, SELECT);
}

+ (IOSObjectArray *)values {
  return ComStSt25sdkNFCTag_TagAddressingMode_values();
}

+ (ComStSt25sdkNFCTag_TagAddressingMode *)valueOfWithNSString:(NSString *)name {
  return ComStSt25sdkNFCTag_TagAddressingMode_valueOfWithNSString_(name);
}

- (ComStSt25sdkNFCTag_TagAddressingMode_Enum)toNSEnum {
  return (ComStSt25sdkNFCTag_TagAddressingMode_Enum)[self ordinal];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "[LComStSt25sdkNFCTag_TagAddressingMode;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComStSt25sdkNFCTag_TagAddressingMode;", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(values);
  methods[1].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "NON_ADDRESSED", "LComStSt25sdkNFCTag_TagAddressingMode;", .constantValue.asLong = 0, 0x4019, -1, 2, -1, -1 },
    { "ADDRESSED", "LComStSt25sdkNFCTag_TagAddressingMode;", .constantValue.asLong = 0, 0x4019, -1, 3, -1, -1 },
    { "SELECT", "LComStSt25sdkNFCTag_TagAddressingMode;", .constantValue.asLong = 0, 0x4019, -1, 4, -1, -1 },
  };
  static const void *ptrTable[] = { "valueOf", "LNSString;", &JreEnum(ComStSt25sdkNFCTag_TagAddressingMode, NON_ADDRESSED), &JreEnum(ComStSt25sdkNFCTag_TagAddressingMode, ADDRESSED), &JreEnum(ComStSt25sdkNFCTag_TagAddressingMode, SELECT), "LComStSt25sdkNFCTag;", "Ljava/lang/Enum<Lcom/st/st25sdk/NFCTag$TagAddressingMode;>;" };
  static const J2ObjcClassInfo _ComStSt25sdkNFCTag_TagAddressingMode = { "TagAddressingMode", "com.st.st25sdk", ptrTable, methods, fields, 7, 0x4019, 2, 3, 5, -1, -1, 6, -1 };
  return &_ComStSt25sdkNFCTag_TagAddressingMode;
}

+ (void)initialize {
  if (self == [ComStSt25sdkNFCTag_TagAddressingMode class]) {
    JreEnum(ComStSt25sdkNFCTag_TagAddressingMode, NON_ADDRESSED) = new_ComStSt25sdkNFCTag_TagAddressingMode_initWithNSString_withInt_(JreEnumConstantName(ComStSt25sdkNFCTag_TagAddressingMode_class_(), 0), 0);
    JreEnum(ComStSt25sdkNFCTag_TagAddressingMode, ADDRESSED) = new_ComStSt25sdkNFCTag_TagAddressingMode_initWithNSString_withInt_(JreEnumConstantName(ComStSt25sdkNFCTag_TagAddressingMode_class_(), 1), 1);
    JreEnum(ComStSt25sdkNFCTag_TagAddressingMode, SELECT) = new_ComStSt25sdkNFCTag_TagAddressingMode_initWithNSString_withInt_(JreEnumConstantName(ComStSt25sdkNFCTag_TagAddressingMode_class_(), 2), 2);
    J2OBJC_SET_INITIALIZED(ComStSt25sdkNFCTag_TagAddressingMode)
  }
}

@end

void ComStSt25sdkNFCTag_TagAddressingMode_initWithNSString_withInt_(ComStSt25sdkNFCTag_TagAddressingMode *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

ComStSt25sdkNFCTag_TagAddressingMode *new_ComStSt25sdkNFCTag_TagAddressingMode_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  J2OBJC_NEW_IMPL(ComStSt25sdkNFCTag_TagAddressingMode, initWithNSString_withInt_, __name, __ordinal)
}

IOSObjectArray *ComStSt25sdkNFCTag_TagAddressingMode_values() {
  ComStSt25sdkNFCTag_TagAddressingMode_initialize();
  return [IOSObjectArray arrayWithObjects:ComStSt25sdkNFCTag_TagAddressingMode_values_ count:3 type:ComStSt25sdkNFCTag_TagAddressingMode_class_()];
}

ComStSt25sdkNFCTag_TagAddressingMode *ComStSt25sdkNFCTag_TagAddressingMode_valueOfWithNSString_(NSString *name) {
  ComStSt25sdkNFCTag_TagAddressingMode_initialize();
  for (int i = 0; i < 3; i++) {
    ComStSt25sdkNFCTag_TagAddressingMode *e = ComStSt25sdkNFCTag_TagAddressingMode_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

ComStSt25sdkNFCTag_TagAddressingMode *ComStSt25sdkNFCTag_TagAddressingMode_fromOrdinal(NSUInteger ordinal) {
  ComStSt25sdkNFCTag_TagAddressingMode_initialize();
  if (ordinal >= 3) {
    return nil;
  }
  return ComStSt25sdkNFCTag_TagAddressingMode_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComStSt25sdkNFCTag_TagAddressingMode)

J2OBJC_INITIALIZED_DEFN(ComStSt25sdkNFCTag_NfcTagTypes)

ComStSt25sdkNFCTag_NfcTagTypes *ComStSt25sdkNFCTag_NfcTagTypes_values_[14];

@implementation ComStSt25sdkNFCTag_NfcTagTypes

+ (ComStSt25sdkNFCTag_NfcTagTypes *)NFC_TAG_TYPE_UNKNOWN {
  return JreEnum(ComStSt25sdkNFCTag_NfcTagTypes, NFC_TAG_TYPE_UNKNOWN);
}

+ (ComStSt25sdkNFCTag_NfcTagTypes *)NFC_TAG_TYPE_1 {
  return JreEnum(ComStSt25sdkNFCTag_NfcTagTypes, NFC_TAG_TYPE_1);
}

+ (ComStSt25sdkNFCTag_NfcTagTypes *)NFC_TAG_TYPE_2 {
  return JreEnum(ComStSt25sdkNFCTag_NfcTagTypes, NFC_TAG_TYPE_2);
}

+ (ComStSt25sdkNFCTag_NfcTagTypes *)NFC_TAG_TYPE_3 {
  return JreEnum(ComStSt25sdkNFCTag_NfcTagTypes, NFC_TAG_TYPE_3);
}

+ (ComStSt25sdkNFCTag_NfcTagTypes *)NFC_TAG_TYPE_4A {
  return JreEnum(ComStSt25sdkNFCTag_NfcTagTypes, NFC_TAG_TYPE_4A);
}

+ (ComStSt25sdkNFCTag_NfcTagTypes *)NFC_TAG_ISO14443A_TYPE2_TYPE4A {
  return JreEnum(ComStSt25sdkNFCTag_NfcTagTypes, NFC_TAG_ISO14443A_TYPE2_TYPE4A);
}

+ (ComStSt25sdkNFCTag_NfcTagTypes *)NFC_TAG_ISO18092 {
  return JreEnum(ComStSt25sdkNFCTag_NfcTagTypes, NFC_TAG_ISO18092);
}

+ (ComStSt25sdkNFCTag_NfcTagTypes *)NFC_TAG_TYPE_4B {
  return JreEnum(ComStSt25sdkNFCTag_NfcTagTypes, NFC_TAG_TYPE_4B);
}

+ (ComStSt25sdkNFCTag_NfcTagTypes *)NFC_TAG_ISO14443SR {
  return JreEnum(ComStSt25sdkNFCTag_NfcTagTypes, NFC_TAG_ISO14443SR);
}

+ (ComStSt25sdkNFCTag_NfcTagTypes *)NFC_TAG_TYPE_A {
  return JreEnum(ComStSt25sdkNFCTag_NfcTagTypes, NFC_TAG_TYPE_A);
}

+ (ComStSt25sdkNFCTag_NfcTagTypes *)NFC_TAG_TYPE_B {
  return JreEnum(ComStSt25sdkNFCTag_NfcTagTypes, NFC_TAG_TYPE_B);
}

+ (ComStSt25sdkNFCTag_NfcTagTypes *)NFC_TAG_TYPE_F {
  return JreEnum(ComStSt25sdkNFCTag_NfcTagTypes, NFC_TAG_TYPE_F);
}

+ (ComStSt25sdkNFCTag_NfcTagTypes *)NFC_TAG_TYPE_V {
  return JreEnum(ComStSt25sdkNFCTag_NfcTagTypes, NFC_TAG_TYPE_V);
}

+ (ComStSt25sdkNFCTag_NfcTagTypes *)NFC_TAG_PICOPASS {
  return JreEnum(ComStSt25sdkNFCTag_NfcTagTypes, NFC_TAG_PICOPASS);
}

+ (IOSObjectArray *)values {
  return ComStSt25sdkNFCTag_NfcTagTypes_values();
}

+ (ComStSt25sdkNFCTag_NfcTagTypes *)valueOfWithNSString:(NSString *)name {
  return ComStSt25sdkNFCTag_NfcTagTypes_valueOfWithNSString_(name);
}

- (ComStSt25sdkNFCTag_NfcTagTypes_Enum)toNSEnum {
  return (ComStSt25sdkNFCTag_NfcTagTypes_Enum)[self ordinal];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "[LComStSt25sdkNFCTag_NfcTagTypes;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComStSt25sdkNFCTag_NfcTagTypes;", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(values);
  methods[1].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "NFC_TAG_TYPE_UNKNOWN", "LComStSt25sdkNFCTag_NfcTagTypes;", .constantValue.asLong = 0, 0x4019, -1, 2, -1, -1 },
    { "NFC_TAG_TYPE_1", "LComStSt25sdkNFCTag_NfcTagTypes;", .constantValue.asLong = 0, 0x4019, -1, 3, -1, -1 },
    { "NFC_TAG_TYPE_2", "LComStSt25sdkNFCTag_NfcTagTypes;", .constantValue.asLong = 0, 0x4019, -1, 4, -1, -1 },
    { "NFC_TAG_TYPE_3", "LComStSt25sdkNFCTag_NfcTagTypes;", .constantValue.asLong = 0, 0x4019, -1, 5, -1, -1 },
    { "NFC_TAG_TYPE_4A", "LComStSt25sdkNFCTag_NfcTagTypes;", .constantValue.asLong = 0, 0x4019, -1, 6, -1, -1 },
    { "NFC_TAG_ISO14443A_TYPE2_TYPE4A", "LComStSt25sdkNFCTag_NfcTagTypes;", .constantValue.asLong = 0, 0x4019, -1, 7, -1, -1 },
    { "NFC_TAG_ISO18092", "LComStSt25sdkNFCTag_NfcTagTypes;", .constantValue.asLong = 0, 0x4019, -1, 8, -1, -1 },
    { "NFC_TAG_TYPE_4B", "LComStSt25sdkNFCTag_NfcTagTypes;", .constantValue.asLong = 0, 0x4019, -1, 9, -1, -1 },
    { "NFC_TAG_ISO14443SR", "LComStSt25sdkNFCTag_NfcTagTypes;", .constantValue.asLong = 0, 0x4019, -1, 10, -1, -1 },
    { "NFC_TAG_TYPE_A", "LComStSt25sdkNFCTag_NfcTagTypes;", .constantValue.asLong = 0, 0x4019, -1, 11, -1, -1 },
    { "NFC_TAG_TYPE_B", "LComStSt25sdkNFCTag_NfcTagTypes;", .constantValue.asLong = 0, 0x4019, -1, 12, -1, -1 },
    { "NFC_TAG_TYPE_F", "LComStSt25sdkNFCTag_NfcTagTypes;", .constantValue.asLong = 0, 0x4019, -1, 13, -1, -1 },
    { "NFC_TAG_TYPE_V", "LComStSt25sdkNFCTag_NfcTagTypes;", .constantValue.asLong = 0, 0x4019, -1, 14, -1, -1 },
    { "NFC_TAG_PICOPASS", "LComStSt25sdkNFCTag_NfcTagTypes;", .constantValue.asLong = 0, 0x4019, -1, 15, -1, -1 },
  };
  static const void *ptrTable[] = { "valueOf", "LNSString;", &JreEnum(ComStSt25sdkNFCTag_NfcTagTypes, NFC_TAG_TYPE_UNKNOWN), &JreEnum(ComStSt25sdkNFCTag_NfcTagTypes, NFC_TAG_TYPE_1), &JreEnum(ComStSt25sdkNFCTag_NfcTagTypes, NFC_TAG_TYPE_2), &JreEnum(ComStSt25sdkNFCTag_NfcTagTypes, NFC_TAG_TYPE_3), &JreEnum(ComStSt25sdkNFCTag_NfcTagTypes, NFC_TAG_TYPE_4A), &JreEnum(ComStSt25sdkNFCTag_NfcTagTypes, NFC_TAG_ISO14443A_TYPE2_TYPE4A), &JreEnum(ComStSt25sdkNFCTag_NfcTagTypes, NFC_TAG_ISO18092), &JreEnum(ComStSt25sdkNFCTag_NfcTagTypes, NFC_TAG_TYPE_4B), &JreEnum(ComStSt25sdkNFCTag_NfcTagTypes, NFC_TAG_ISO14443SR), &JreEnum(ComStSt25sdkNFCTag_NfcTagTypes, NFC_TAG_TYPE_A), &JreEnum(ComStSt25sdkNFCTag_NfcTagTypes, NFC_TAG_TYPE_B), &JreEnum(ComStSt25sdkNFCTag_NfcTagTypes, NFC_TAG_TYPE_F), &JreEnum(ComStSt25sdkNFCTag_NfcTagTypes, NFC_TAG_TYPE_V), &JreEnum(ComStSt25sdkNFCTag_NfcTagTypes, NFC_TAG_PICOPASS), "LComStSt25sdkNFCTag;", "Ljava/lang/Enum<Lcom/st/st25sdk/NFCTag$NfcTagTypes;>;" };
  static const J2ObjcClassInfo _ComStSt25sdkNFCTag_NfcTagTypes = { "NfcTagTypes", "com.st.st25sdk", ptrTable, methods, fields, 7, 0x4019, 2, 14, 16, -1, -1, 17, -1 };
  return &_ComStSt25sdkNFCTag_NfcTagTypes;
}

+ (void)initialize {
  if (self == [ComStSt25sdkNFCTag_NfcTagTypes class]) {
    JreEnum(ComStSt25sdkNFCTag_NfcTagTypes, NFC_TAG_TYPE_UNKNOWN) = new_ComStSt25sdkNFCTag_NfcTagTypes_initWithNSString_withInt_(JreEnumConstantName(ComStSt25sdkNFCTag_NfcTagTypes_class_(), 0), 0);
    JreEnum(ComStSt25sdkNFCTag_NfcTagTypes, NFC_TAG_TYPE_1) = new_ComStSt25sdkNFCTag_NfcTagTypes_initWithNSString_withInt_(JreEnumConstantName(ComStSt25sdkNFCTag_NfcTagTypes_class_(), 1), 1);
    JreEnum(ComStSt25sdkNFCTag_NfcTagTypes, NFC_TAG_TYPE_2) = new_ComStSt25sdkNFCTag_NfcTagTypes_initWithNSString_withInt_(JreEnumConstantName(ComStSt25sdkNFCTag_NfcTagTypes_class_(), 2), 2);
    JreEnum(ComStSt25sdkNFCTag_NfcTagTypes, NFC_TAG_TYPE_3) = new_ComStSt25sdkNFCTag_NfcTagTypes_initWithNSString_withInt_(JreEnumConstantName(ComStSt25sdkNFCTag_NfcTagTypes_class_(), 3), 3);
    JreEnum(ComStSt25sdkNFCTag_NfcTagTypes, NFC_TAG_TYPE_4A) = new_ComStSt25sdkNFCTag_NfcTagTypes_initWithNSString_withInt_(JreEnumConstantName(ComStSt25sdkNFCTag_NfcTagTypes_class_(), 4), 4);
    JreEnum(ComStSt25sdkNFCTag_NfcTagTypes, NFC_TAG_ISO14443A_TYPE2_TYPE4A) = new_ComStSt25sdkNFCTag_NfcTagTypes_initWithNSString_withInt_(JreEnumConstantName(ComStSt25sdkNFCTag_NfcTagTypes_class_(), 5), 5);
    JreEnum(ComStSt25sdkNFCTag_NfcTagTypes, NFC_TAG_ISO18092) = new_ComStSt25sdkNFCTag_NfcTagTypes_initWithNSString_withInt_(JreEnumConstantName(ComStSt25sdkNFCTag_NfcTagTypes_class_(), 6), 6);
    JreEnum(ComStSt25sdkNFCTag_NfcTagTypes, NFC_TAG_TYPE_4B) = new_ComStSt25sdkNFCTag_NfcTagTypes_initWithNSString_withInt_(JreEnumConstantName(ComStSt25sdkNFCTag_NfcTagTypes_class_(), 7), 7);
    JreEnum(ComStSt25sdkNFCTag_NfcTagTypes, NFC_TAG_ISO14443SR) = new_ComStSt25sdkNFCTag_NfcTagTypes_initWithNSString_withInt_(JreEnumConstantName(ComStSt25sdkNFCTag_NfcTagTypes_class_(), 8), 8);
    JreEnum(ComStSt25sdkNFCTag_NfcTagTypes, NFC_TAG_TYPE_A) = new_ComStSt25sdkNFCTag_NfcTagTypes_initWithNSString_withInt_(JreEnumConstantName(ComStSt25sdkNFCTag_NfcTagTypes_class_(), 9), 9);
    JreEnum(ComStSt25sdkNFCTag_NfcTagTypes, NFC_TAG_TYPE_B) = new_ComStSt25sdkNFCTag_NfcTagTypes_initWithNSString_withInt_(JreEnumConstantName(ComStSt25sdkNFCTag_NfcTagTypes_class_(), 10), 10);
    JreEnum(ComStSt25sdkNFCTag_NfcTagTypes, NFC_TAG_TYPE_F) = new_ComStSt25sdkNFCTag_NfcTagTypes_initWithNSString_withInt_(JreEnumConstantName(ComStSt25sdkNFCTag_NfcTagTypes_class_(), 11), 11);
    JreEnum(ComStSt25sdkNFCTag_NfcTagTypes, NFC_TAG_TYPE_V) = new_ComStSt25sdkNFCTag_NfcTagTypes_initWithNSString_withInt_(JreEnumConstantName(ComStSt25sdkNFCTag_NfcTagTypes_class_(), 12), 12);
    JreEnum(ComStSt25sdkNFCTag_NfcTagTypes, NFC_TAG_PICOPASS) = new_ComStSt25sdkNFCTag_NfcTagTypes_initWithNSString_withInt_(JreEnumConstantName(ComStSt25sdkNFCTag_NfcTagTypes_class_(), 13), 13);
    J2OBJC_SET_INITIALIZED(ComStSt25sdkNFCTag_NfcTagTypes)
  }
}

@end

void ComStSt25sdkNFCTag_NfcTagTypes_initWithNSString_withInt_(ComStSt25sdkNFCTag_NfcTagTypes *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

ComStSt25sdkNFCTag_NfcTagTypes *new_ComStSt25sdkNFCTag_NfcTagTypes_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  J2OBJC_NEW_IMPL(ComStSt25sdkNFCTag_NfcTagTypes, initWithNSString_withInt_, __name, __ordinal)
}

IOSObjectArray *ComStSt25sdkNFCTag_NfcTagTypes_values() {
  ComStSt25sdkNFCTag_NfcTagTypes_initialize();
  return [IOSObjectArray arrayWithObjects:ComStSt25sdkNFCTag_NfcTagTypes_values_ count:14 type:ComStSt25sdkNFCTag_NfcTagTypes_class_()];
}

ComStSt25sdkNFCTag_NfcTagTypes *ComStSt25sdkNFCTag_NfcTagTypes_valueOfWithNSString_(NSString *name) {
  ComStSt25sdkNFCTag_NfcTagTypes_initialize();
  for (int i = 0; i < 14; i++) {
    ComStSt25sdkNFCTag_NfcTagTypes *e = ComStSt25sdkNFCTag_NfcTagTypes_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

ComStSt25sdkNFCTag_NfcTagTypes *ComStSt25sdkNFCTag_NfcTagTypes_fromOrdinal(NSUInteger ordinal) {
  ComStSt25sdkNFCTag_NfcTagTypes_initialize();
  if (ordinal >= 14) {
    return nil;
  }
  return ComStSt25sdkNFCTag_NfcTagTypes_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComStSt25sdkNFCTag_NfcTagTypes)

@implementation ComStSt25sdkNFCTag_1

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComStSt25sdkNFCTag_1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComStSt25sdkNFCTag;", "Ljava/util/Hashtable<Lcom/st/st25sdk/NFCTag$NfcTagTypes;Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _ComStSt25sdkNFCTag_1 = { "", "com.st.st25sdk", ptrTable, methods, NULL, 7, 0x8018, 1, 0, 0, -1, -1, 1, -1 };
  return &_ComStSt25sdkNFCTag_1;
}

@end

void ComStSt25sdkNFCTag_1_init(ComStSt25sdkNFCTag_1 *self) {
  JavaUtilHashtable_init(self);
  {
    (void) [self putWithId:JreLoadEnum(ComStSt25sdkNFCTag_NfcTagTypes, NFC_TAG_TYPE_UNKNOWN) withId:@"Unknown tag type"];
    (void) [self putWithId:JreLoadEnum(ComStSt25sdkNFCTag_NfcTagTypes, NFC_TAG_TYPE_1) withId:@"NFC Forum Type 1 tag"];
    (void) [self putWithId:JreLoadEnum(ComStSt25sdkNFCTag_NfcTagTypes, NFC_TAG_TYPE_2) withId:@"NFC Forum Type 2 tag"];
    (void) [self putWithId:JreLoadEnum(ComStSt25sdkNFCTag_NfcTagTypes, NFC_TAG_TYPE_3) withId:@"NFC Forum Type 3 tag"];
    (void) [self putWithId:JreLoadEnum(ComStSt25sdkNFCTag_NfcTagTypes, NFC_TAG_ISO18092) withId:@"ISO/IEC 18092 tag"];
    (void) [self putWithId:JreLoadEnum(ComStSt25sdkNFCTag_NfcTagTypes, NFC_TAG_ISO14443A_TYPE2_TYPE4A) withId:@"ISO14443A or NFC Forum Type 2 or Type 4A tag"];
    (void) [self putWithId:JreLoadEnum(ComStSt25sdkNFCTag_NfcTagTypes, NFC_TAG_TYPE_4A) withId:@"NFC Forum Type 4A tag"];
    (void) [self putWithId:JreLoadEnum(ComStSt25sdkNFCTag_NfcTagTypes, NFC_TAG_TYPE_4B) withId:@"NFC Forum Type 4B tag"];
    (void) [self putWithId:JreLoadEnum(ComStSt25sdkNFCTag_NfcTagTypes, NFC_TAG_TYPE_A) withId:@"ISO/IEC 14443A"];
    (void) [self putWithId:JreLoadEnum(ComStSt25sdkNFCTag_NfcTagTypes, NFC_TAG_TYPE_B) withId:@"ISO/IEC 14443B tag"];
    (void) [self putWithId:JreLoadEnum(ComStSt25sdkNFCTag_NfcTagTypes, NFC_TAG_TYPE_F) withId:@"FeliCa tag (JIS X6319-4)"];
    (void) [self putWithId:JreLoadEnum(ComStSt25sdkNFCTag_NfcTagTypes, NFC_TAG_TYPE_V) withId:@"NFC Forum type V - ISO/IEC 15693 tag"];
    (void) [self putWithId:JreLoadEnum(ComStSt25sdkNFCTag_NfcTagTypes, NFC_TAG_PICOPASS) withId:@"PICOPASS tag"];
  }
}

ComStSt25sdkNFCTag_1 *new_ComStSt25sdkNFCTag_1_init() {
  J2OBJC_NEW_IMPL(ComStSt25sdkNFCTag_1, init)
}

ComStSt25sdkNFCTag_1 *create_ComStSt25sdkNFCTag_1_init() {
  J2OBJC_CREATE_IMPL(ComStSt25sdkNFCTag_1, init)
}
