//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: st25sdk_ios/type4a/FileType4.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/st/st25sdk/STException.h"
#include "com/st/st25sdk/command/Type4Command.h"
#include "com/st/st25sdk/type4a/FileType4.h"

@implementation ComStSt25sdkType4aFileType4

- (instancetype)initWithComStSt25sdkCommandType4Command:(ComStSt25sdkCommandType4Command *)type4Command
                                                withInt:(jint)fileId {
  ComStSt25sdkType4aFileType4_initWithComStSt25sdkCommandType4Command_withInt_(self, type4Command, fileId);
  return self;
}

- (instancetype)initWithComStSt25sdkCommandType4Command:(ComStSt25sdkCommandType4Command *)type4Command
                                                withInt:(jint)fileId
                                                withInt:(jint)size
                                               withByte:(jbyte)readAccess
                                               withByte:(jbyte)writeAccess {
  ComStSt25sdkType4aFileType4_initWithComStSt25sdkCommandType4Command_withInt_withInt_withByte_withByte_(self, type4Command, fileId, size, readAccess, writeAccess);
  return self;
}

- (jint)getFileId {
  return mFileId_;
}

- (jbyte)getReadAccess {
  return mReadAccess_;
}

- (jbyte)getWriteAccess {
  return mWriteAccess_;
}

- (jint)getSize {
  return mFileSize_;
}

- (void)writeWithInt:(jint)offsetInBytes
       withByteArray:(IOSByteArray *)data {
  @synchronized(JreLoadStatic(ComStSt25sdkCommandType4Command, mLock)) {
    (void) [((ComStSt25sdkCommandType4Command *) nil_chk(mType4Command_)) selectFileWithInt:mFileId_];
    [((ComStSt25sdkCommandType4Command *) nil_chk(mType4Command_)) writeDataWithInt:offsetInBytes withByteArray:data];
  }
}

- (IOSByteArray *)readWithInt:(jint)fileOffset
                      withInt:(jint)sizeInBytes {
  IOSByteArray *response;
  @synchronized(JreLoadStatic(ComStSt25sdkCommandType4Command, mLock)) {
    (void) [((ComStSt25sdkCommandType4Command *) nil_chk(mType4Command_)) selectFileWithInt:mFileId_];
    response = [((ComStSt25sdkCommandType4Command *) nil_chk(mType4Command_)) readDataWithInt:fileOffset withInt:sizeInBytes];
  }
  return response;
}

- (IOSByteArray *)select {
  @synchronized(JreLoadStatic(ComStSt25sdkCommandType4Command, mLock)) {
    @try {
      (void) [((ComStSt25sdkCommandType4Command *) nil_chk(mType4Command_)) selectNdefTagApplicationSequence];
    }
    @catch (ComStSt25sdkSTException *e) {
      if (![((ComStSt25sdkSTException_STExceptionCode *) nil_chk([e getError])) isEqual:JreLoadEnum(ComStSt25sdkSTException_STExceptionCode, FILE_APPLICATION_NOT_SUPPORTED)]) @throw e;
    }
  }
  return [((ComStSt25sdkCommandType4Command *) nil_chk(mType4Command_)) selectFileWithInt:mFileId_];
}

- (IOSByteArray *)selectFile {
  return [((ComStSt25sdkCommandType4Command *) nil_chk(mType4Command_)) selectFileWithInt:mFileId_];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, 4, -1, -1, -1 },
    { NULL, "[B", 0x1, 5, 6, 4, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, 4, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, 4, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComStSt25sdkCommandType4Command:withInt:);
  methods[1].selector = @selector(initWithComStSt25sdkCommandType4Command:withInt:withInt:withByte:withByte:);
  methods[2].selector = @selector(getFileId);
  methods[3].selector = @selector(getReadAccess);
  methods[4].selector = @selector(getWriteAccess);
  methods[5].selector = @selector(getSize);
  methods[6].selector = @selector(writeWithInt:withByteArray:);
  methods[7].selector = @selector(readWithInt:withInt:);
  methods[8].selector = @selector(select);
  methods[9].selector = @selector(selectFile);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "mFileId_", "I", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "mFileSize_", "I", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "mReadAccess_", "B", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "mWriteAccess_", "B", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "mType4Command_", "LComStSt25sdkCommandType4Command;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComStSt25sdkCommandType4Command;I", "LComStSt25sdkCommandType4Command;IIBB", "write", "I[B", "LComStSt25sdkSTException;", "read", "II" };
  static const J2ObjcClassInfo _ComStSt25sdkType4aFileType4 = { "FileType4", "com.st.st25sdk.type4a", ptrTable, methods, fields, 7, 0x1, 10, 5, -1, -1, -1, -1, -1 };
  return &_ComStSt25sdkType4aFileType4;
}

@end

void ComStSt25sdkType4aFileType4_initWithComStSt25sdkCommandType4Command_withInt_(ComStSt25sdkType4aFileType4 *self, ComStSt25sdkCommandType4Command *type4Command, jint fileId) {
  NSObject_init(self);
  self->mType4Command_ = type4Command;
  self->mFileId_ = fileId;
}

ComStSt25sdkType4aFileType4 *new_ComStSt25sdkType4aFileType4_initWithComStSt25sdkCommandType4Command_withInt_(ComStSt25sdkCommandType4Command *type4Command, jint fileId) {
  J2OBJC_NEW_IMPL(ComStSt25sdkType4aFileType4, initWithComStSt25sdkCommandType4Command_withInt_, type4Command, fileId)
}

ComStSt25sdkType4aFileType4 *create_ComStSt25sdkType4aFileType4_initWithComStSt25sdkCommandType4Command_withInt_(ComStSt25sdkCommandType4Command *type4Command, jint fileId) {
  J2OBJC_CREATE_IMPL(ComStSt25sdkType4aFileType4, initWithComStSt25sdkCommandType4Command_withInt_, type4Command, fileId)
}

void ComStSt25sdkType4aFileType4_initWithComStSt25sdkCommandType4Command_withInt_withInt_withByte_withByte_(ComStSt25sdkType4aFileType4 *self, ComStSt25sdkCommandType4Command *type4Command, jint fileId, jint size, jbyte readAccess, jbyte writeAccess) {
  NSObject_init(self);
  self->mType4Command_ = type4Command;
  self->mFileId_ = fileId;
  self->mFileSize_ = size;
  self->mReadAccess_ = readAccess;
  self->mWriteAccess_ = writeAccess;
}

ComStSt25sdkType4aFileType4 *new_ComStSt25sdkType4aFileType4_initWithComStSt25sdkCommandType4Command_withInt_withInt_withByte_withByte_(ComStSt25sdkCommandType4Command *type4Command, jint fileId, jint size, jbyte readAccess, jbyte writeAccess) {
  J2OBJC_NEW_IMPL(ComStSt25sdkType4aFileType4, initWithComStSt25sdkCommandType4Command_withInt_withInt_withByte_withByte_, type4Command, fileId, size, readAccess, writeAccess)
}

ComStSt25sdkType4aFileType4 *create_ComStSt25sdkType4aFileType4_initWithComStSt25sdkCommandType4Command_withInt_withInt_withByte_withByte_(ComStSt25sdkCommandType4Command *type4Command, jint fileId, jint size, jbyte readAccess, jbyte writeAccess) {
  J2OBJC_CREATE_IMPL(ComStSt25sdkType4aFileType4, initWithComStSt25sdkCommandType4Command_withInt_withInt_withByte_withByte_, type4Command, fileId, size, readAccess, writeAccess)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComStSt25sdkType4aFileType4)
