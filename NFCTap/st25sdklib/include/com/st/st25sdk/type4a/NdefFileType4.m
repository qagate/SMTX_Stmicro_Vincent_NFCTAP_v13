//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: st25sdk_ios/type4a/NdefFileType4.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/st/st25sdk/RFReaderInterface.h"
#include "com/st/st25sdk/command/Iso7816Command.h"
#include "com/st/st25sdk/command/NdefType4Command.h"
#include "com/st/st25sdk/command/Type4Command.h"
#include "com/st/st25sdk/ndef/NDEFMsg.h"
#include "com/st/st25sdk/type4a/FileType4.h"
#include "com/st/st25sdk/type4a/NdefFileType4.h"
#include "com/st/st25sdk/type4a/Type4Tag.h"

@interface ComStSt25sdkType4aNdefFileType4 () {
 @public
  ComStSt25sdkNdefNDEFMsg *mNdefMsg_;
}

@end

J2OBJC_FIELD_SETTER(ComStSt25sdkType4aNdefFileType4, mNdefMsg_, ComStSt25sdkNdefNDEFMsg *)

@implementation ComStSt25sdkType4aNdefFileType4

- (instancetype)initWithComStSt25sdkType4aType4Tag:(ComStSt25sdkType4aType4Tag *)tag
                                           withInt:(jint)fileId {
  ComStSt25sdkType4aNdefFileType4_initWithComStSt25sdkType4aType4Tag_withInt_(self, tag, fileId);
  return self;
}

- (void)writeNdefMsgWithComStSt25sdkNdefNDEFMsg:(ComStSt25sdkNdefNDEFMsg *)msg {
  [((ComStSt25sdkCommandNdefType4Command *) nil_chk(mNdefType4Cmd_)) writeNdefMessageWithComStSt25sdkNdefNDEFMsg:msg];
  mNdefMsg_ = [((ComStSt25sdkNdefNDEFMsg *) nil_chk(msg)) copy__];
  [self validateCache];
}

- (void)selectAndWriteNdefMsgWithComStSt25sdkNdefNDEFMsg:(ComStSt25sdkNdefNDEFMsg *)msg {
  [self selectAndWriteNdefMsgWithComStSt25sdkNdefNDEFMsg:msg withByteArray:nil];
}

- (void)selectAndWriteNdefMsgWithComStSt25sdkNdefNDEFMsg:(ComStSt25sdkNdefNDEFMsg *)msg
                                           withByteArray:(IOSByteArray *)writePassword {
  @synchronized(JreLoadStatic(ComStSt25sdkCommandType4Command, mLock)) {
    (void) [self select];
    if (writePassword != nil) (void) [((ComStSt25sdkCommandIso7816Command *) nil_chk(mIso7816Cmd_)) verifyWithByte:(jbyte) (jint) 0x00 withByte:(jbyte) (jint) 0x00 withByte:(jbyte) (jint) 0x02 withByteArray:writePassword];
    [self writeNdefMsgWithComStSt25sdkNdefNDEFMsg:msg];
  }
}

- (ComStSt25sdkNdefNDEFMsg *)readNdefMsg {
  if ([self isCacheActivated] && [self isCacheValid]) {
    return [((ComStSt25sdkNdefNDEFMsg *) nil_chk(mNdefMsg_)) copy__];
  }
  mNdefMsg_ = [((ComStSt25sdkCommandNdefType4Command *) nil_chk(mNdefType4Cmd_)) readNdefMessage];
  [self validateCache];
  return [((ComStSt25sdkNdefNDEFMsg *) nil_chk(mNdefMsg_)) copy__];
}

- (ComStSt25sdkNdefNDEFMsg *)selectAndReadNdefMsg {
  return [self selectAndReadNdefMsgWithByteArray:nil];
}

- (ComStSt25sdkNdefNDEFMsg *)selectAndReadNdefMsgWithByteArray:(IOSByteArray *)readPassword {
  if ([self isCacheActivated] && [self isCacheValid]) {
    return [((ComStSt25sdkNdefNDEFMsg *) nil_chk(mNdefMsg_)) copy__];
  }
  @synchronized(JreLoadStatic(ComStSt25sdkCommandType4Command, mLock)) {
    (void) [self select];
    if (readPassword != nil) (void) [((ComStSt25sdkCommandIso7816Command *) nil_chk(mIso7816Cmd_)) verifyWithByte:(jbyte) (jint) 0x00 withByte:(jbyte) (jint) 0x00 withByte:(jbyte) (jint) 0x01 withByteArray:readPassword];
    mNdefMsg_ = [((ComStSt25sdkCommandNdefType4Command *) nil_chk(mNdefType4Cmd_)) readNdefMessage];
    [self validateCache];
    return [((ComStSt25sdkNdefNDEFMsg *) nil_chk(mNdefMsg_)) copy__];
  }
}

- (void)invalidateCache {
  mCacheInvalidated_ = true;
}

- (void)validateCache {
  mCacheInvalidated_ = false;
}

- (void)activateCache {
  mCacheActivated_ = true;
  mCacheInvalidated_ = true;
}

- (void)deactivateCache {
  mCacheActivated_ = false;
}

- (void)updateCache {
  if ([self isCacheActivated]) {
    [self invalidateCache];
    (void) [self selectAndReadNdefMsg];
  }
}

- (jboolean)isCacheValid {
  return !mCacheInvalidated_;
}

- (jboolean)isCacheActivated {
  return mCacheActivated_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, 1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, 1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 3, 1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, 1, -1, -1, -1 },
    { NULL, "LComStSt25sdkNdefNDEFMsg;", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "LComStSt25sdkNdefNDEFMsg;", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "LComStSt25sdkNdefNDEFMsg;", 0x1, 6, 7, 1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComStSt25sdkType4aType4Tag:withInt:);
  methods[1].selector = @selector(writeNdefMsgWithComStSt25sdkNdefNDEFMsg:);
  methods[2].selector = @selector(selectAndWriteNdefMsgWithComStSt25sdkNdefNDEFMsg:);
  methods[3].selector = @selector(selectAndWriteNdefMsgWithComStSt25sdkNdefNDEFMsg:withByteArray:);
  methods[4].selector = @selector(readNdefMsg);
  methods[5].selector = @selector(selectAndReadNdefMsg);
  methods[6].selector = @selector(selectAndReadNdefMsgWithByteArray:);
  methods[7].selector = @selector(invalidateCache);
  methods[8].selector = @selector(validateCache);
  methods[9].selector = @selector(activateCache);
  methods[10].selector = @selector(deactivateCache);
  methods[11].selector = @selector(updateCache);
  methods[12].selector = @selector(isCacheValid);
  methods[13].selector = @selector(isCacheActivated);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "mNdefMsg_", "LComStSt25sdkNdefNDEFMsg;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mIso7816Cmd_", "LComStSt25sdkCommandIso7816Command;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "mNdefType4Cmd_", "LComStSt25sdkCommandNdefType4Command;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "mCacheActivated_", "Z", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "mCacheInvalidated_", "Z", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComStSt25sdkType4aType4Tag;I", "LComStSt25sdkSTException;", "writeNdefMsg", "LComStSt25sdkNdefNDEFMsg;", "selectAndWriteNdefMsg", "LComStSt25sdkNdefNDEFMsg;[B", "selectAndReadNdefMsg", "[B" };
  static const J2ObjcClassInfo _ComStSt25sdkType4aNdefFileType4 = { "NdefFileType4", "com.st.st25sdk.type4a", ptrTable, methods, fields, 7, 0x1, 14, 5, -1, -1, -1, -1, -1 };
  return &_ComStSt25sdkType4aNdefFileType4;
}

@end

void ComStSt25sdkType4aNdefFileType4_initWithComStSt25sdkType4aType4Tag_withInt_(ComStSt25sdkType4aNdefFileType4 *self, ComStSt25sdkType4aType4Tag *tag, jint fileId) {
  ComStSt25sdkType4aFileType4_initWithComStSt25sdkCommandType4Command_withInt_(self, [((ComStSt25sdkType4aType4Tag *) nil_chk(tag)) getType4Command], fileId);
  self->mIso7816Cmd_ = new_ComStSt25sdkCommandIso7816Command_initWithComStSt25sdkRFReaderInterface_([tag getReaderInterface]);
  self->mNdefType4Cmd_ = new_ComStSt25sdkCommandNdefType4Command_initWithComStSt25sdkRFReaderInterface_withInt_withInt_([tag getReaderInterface], [tag getApduMaxReadSize], [tag getApduMaxWriteSize]);
  self->mCacheActivated_ = true;
  self->mCacheInvalidated_ = true;
}

ComStSt25sdkType4aNdefFileType4 *new_ComStSt25sdkType4aNdefFileType4_initWithComStSt25sdkType4aType4Tag_withInt_(ComStSt25sdkType4aType4Tag *tag, jint fileId) {
  J2OBJC_NEW_IMPL(ComStSt25sdkType4aNdefFileType4, initWithComStSt25sdkType4aType4Tag_withInt_, tag, fileId)
}

ComStSt25sdkType4aNdefFileType4 *create_ComStSt25sdkType4aNdefFileType4_initWithComStSt25sdkType4aType4Tag_withInt_(ComStSt25sdkType4aType4Tag *tag, jint fileId) {
  J2OBJC_CREATE_IMPL(ComStSt25sdkType4aNdefFileType4, initWithComStSt25sdkType4aType4Tag_withInt_, tag, fileId)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComStSt25sdkType4aNdefFileType4)
