//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: st25sdk_ios/type4a/STType4PasswordInterface.java
//

#include "J2ObjC_source.h"
#include "com/st/st25sdk/type4a/STType4PasswordInterface.h"

@interface ComStSt25sdkType4aSTType4PasswordInterface : NSObject

@end

@implementation ComStSt25sdkType4aSTType4PasswordInterface

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x401, 0, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x401, 3, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x401, 4, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x401, 5, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x401, 6, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x401, 7, 1, 2, -1, -1, -1 },
    { NULL, "Z", 0x401, 8, 9, 2, -1, -1, -1 },
    { NULL, "Z", 0x401, 10, 9, 2, -1, -1, -1 },
    { NULL, "V", 0x401, 11, 12, 2, -1, -1, -1 },
    { NULL, "V", 0x401, 11, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x401, 13, 12, 2, -1, -1, -1 },
    { NULL, "V", 0x401, 13, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x401, 14, 12, 2, -1, -1, -1 },
    { NULL, "V", 0x401, 14, 15, 2, -1, -1, -1 },
    { NULL, "V", 0x401, 16, 12, 2, -1, -1, -1 },
    { NULL, "V", 0x401, 16, 15, 2, -1, -1, -1 },
    { NULL, "I", 0x401, 17, 9, 2, -1, -1, -1 },
    { NULL, "I", 0x401, 18, 9, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(lockReadWithInt:withByteArray:);
  methods[1].selector = @selector(lockReadPermanentlyWithInt:withByteArray:);
  methods[2].selector = @selector(lockWriteWithInt:withByteArray:);
  methods[3].selector = @selector(lockWritePermanentlyWithInt:withByteArray:);
  methods[4].selector = @selector(unlockReadWithInt:withByteArray:);
  methods[5].selector = @selector(unlockWriteWithInt:withByteArray:);
  methods[6].selector = @selector(isReadPasswordRequestedWithInt:);
  methods[7].selector = @selector(isWritePasswordRequestedWithInt:);
  methods[8].selector = @selector(verifyReadPasswordWithByteArray:);
  methods[9].selector = @selector(verifyReadPasswordWithInt:withByteArray:);
  methods[10].selector = @selector(verifyWritePasswordWithByteArray:);
  methods[11].selector = @selector(verifyWritePasswordWithInt:withByteArray:);
  methods[12].selector = @selector(changeReadPasswordWithByteArray:);
  methods[13].selector = @selector(changeReadPasswordWithInt:withByteArray:withByteArray:);
  methods[14].selector = @selector(changeWritePasswordWithByteArray:);
  methods[15].selector = @selector(changeWritePasswordWithInt:withByteArray:withByteArray:);
  methods[16].selector = @selector(getReadPasswordLengthInBytesWithInt:);
  methods[17].selector = @selector(getWritePasswordLengthInBytesWithInt:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "lockRead", "I[B", "LComStSt25sdkSTException;", "lockReadPermanently", "lockWrite", "lockWritePermanently", "unlockRead", "unlockWrite", "isReadPasswordRequested", "I", "isWritePasswordRequested", "verifyReadPassword", "[B", "verifyWritePassword", "changeReadPassword", "I[B[B", "changeWritePassword", "getReadPasswordLengthInBytes", "getWritePasswordLengthInBytes" };
  static const J2ObjcClassInfo _ComStSt25sdkType4aSTType4PasswordInterface = { "STType4PasswordInterface", "com.st.st25sdk.type4a", ptrTable, methods, NULL, 7, 0x609, 18, 0, -1, -1, -1, -1, -1 };
  return &_ComStSt25sdkType4aSTType4PasswordInterface;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(ComStSt25sdkType4aSTType4PasswordInterface)
