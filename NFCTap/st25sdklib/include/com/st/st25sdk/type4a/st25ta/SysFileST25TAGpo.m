//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: st25sdk_ios/type4a/st25ta/SysFileST25TAGpo.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/st/st25sdk/STException.h"
#include "com/st/st25sdk/command/Type4Command.h"
#include "com/st/st25sdk/command/Type4CustomCommand.h"
#include "com/st/st25sdk/type4a/STType4GpoInterface.h"
#include "com/st/st25sdk/type4a/st25ta/SysFileST25TA.h"
#include "com/st/st25sdk/type4a/st25ta/SysFileST25TAGpo.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"

inline jbyte ComStSt25sdkType4aSt25taSysFileST25TAGpo_get_GPO_LOCKED_BIT(void);
#define ComStSt25sdkType4aSt25taSysFileST25TAGpo_GPO_LOCKED_BIT -128
J2OBJC_STATIC_FIELD_CONSTANT(ComStSt25sdkType4aSt25taSysFileST25TAGpo, GPO_LOCKED_BIT, jbyte)

@implementation ComStSt25sdkType4aSt25taSysFileST25TAGpo

- (instancetype)initWithComStSt25sdkCommandType4CustomCommand:(ComStSt25sdkCommandType4CustomCommand *)type4CustomCommand {
  ComStSt25sdkType4aSt25taSysFileST25TAGpo_initWithComStSt25sdkCommandType4CustomCommand_(self, type4CustomCommand);
  return self;
}

- (id<JavaUtilList>)getSupportedGpoModes {
  return mSupportedGpoModes_;
}

- (ComStSt25sdkType4aSTType4GpoInterface_GpoMode *)getGpoModeWithByte:(jbyte)gpoConfig {
  jbyte gpo = (jbyte) (gpoConfig & (jbyte) (jint) 0x70);
  ComStSt25sdkType4aSTType4GpoInterface_GpoMode *mode;
  switch (gpo) {
    case (jint) 0x00:
    mode = JreLoadEnum(ComStSt25sdkType4aSTType4GpoInterface_GpoMode, GPO_NOT_USED);
    break;
    case (jint) 0x10:
    mode = JreLoadEnum(ComStSt25sdkType4aSTType4GpoInterface_GpoMode, GPO_SESSION_OPENED);
    break;
    case (jint) 0x20:
    mode = JreLoadEnum(ComStSt25sdkType4aSTType4GpoInterface_GpoMode, GPO_WIP);
    break;
    case (jint) 0x30:
    mode = JreLoadEnum(ComStSt25sdkType4aSTType4GpoInterface_GpoMode, GPO_MIP);
    break;
    case (jint) 0x40:
    mode = JreLoadEnum(ComStSt25sdkType4aSTType4GpoInterface_GpoMode, GPO_INTERRUPT);
    break;
    case (jint) 0x50:
    mode = JreLoadEnum(ComStSt25sdkType4aSTType4GpoInterface_GpoMode, GPO_STATE_CONTROL);
    break;
    case (jint) 0x60:
    mode = JreLoadEnum(ComStSt25sdkType4aSTType4GpoInterface_GpoMode, GPO_RF_BUSY);
    break;
    case (jint) 0x70:
    mode = JreLoadEnum(ComStSt25sdkType4aSTType4GpoInterface_GpoMode, GPO_FIELD_DETECT);
    break;
    default:
    @throw new_ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_(JreLoadEnum(ComStSt25sdkSTException_STExceptionCode, BAD_PARAMETER));
  }
  return mode;
}

- (void)setGpoModeWithComStSt25sdkType4aSTType4GpoInterface_GpoMode:(ComStSt25sdkType4aSTType4GpoInterface_GpoMode *)mode {
  jbyte gpo = [self getGpo];
  switch ([mode ordinal]) {
    case ComStSt25sdkType4aSTType4GpoInterface_GpoMode_Enum_GPO_NOT_USED:
    gpo = (jbyte) (gpo & (jbyte) (jint) 0x80);
    break;
    case ComStSt25sdkType4aSTType4GpoInterface_GpoMode_Enum_GPO_SESSION_OPENED:
    gpo = (jbyte) ((jbyte) (gpo | (jbyte) (jint) 0x10) & (jbyte) (jint) 0x90);
    break;
    case ComStSt25sdkType4aSTType4GpoInterface_GpoMode_Enum_GPO_WIP:
    gpo = (jbyte) ((jbyte) (gpo | (jbyte) (jint) 0x20) & (jbyte) (jint) 0xA0);
    break;
    case ComStSt25sdkType4aSTType4GpoInterface_GpoMode_Enum_GPO_MIP:
    gpo = (jbyte) ((jbyte) (gpo | (jbyte) (jint) 0x30) & (jbyte) (jint) 0xB0);
    break;
    case ComStSt25sdkType4aSTType4GpoInterface_GpoMode_Enum_GPO_INTERRUPT:
    gpo = (jbyte) ((jbyte) (gpo | (jbyte) (jint) 0x40) & (jbyte) (jint) 0xC0);
    break;
    case ComStSt25sdkType4aSTType4GpoInterface_GpoMode_Enum_GPO_STATE_CONTROL:
    gpo = (jbyte) ((jbyte) (gpo | (jbyte) (jint) 0x50) & (jbyte) (jint) 0xD0);
    break;
    case ComStSt25sdkType4aSTType4GpoInterface_GpoMode_Enum_GPO_RF_BUSY:
    gpo = (jbyte) ((jbyte) (gpo | (jbyte) (jint) 0x60) & (jbyte) (jint) 0xE0);
    break;
    case ComStSt25sdkType4aSTType4GpoInterface_GpoMode_Enum_GPO_FIELD_DETECT:
    gpo = (jbyte) ((jbyte) (gpo | (jbyte) (jint) 0x70) & (jbyte) (jint) 0xF0);
    break;
    default:
    @throw new_ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_(JreLoadEnum(ComStSt25sdkSTException_STExceptionCode, BAD_PARAMETER));
  }
  [self setGpoWithByte:gpo];
}

- (jbyte)getGpo {
  [self checkCache];
  return mGpo_;
}

- (void)setGpoWithByte:(jbyte)value {
  @synchronized(JreLoadStatic(ComStSt25sdkCommandType4Command, mLock)) {
    (void) [self select];
    (void) [((ComStSt25sdkCommandType4CustomCommand *) nil_chk(((ComStSt25sdkCommandType4CustomCommand *) cast_chk(mType4Command_, [ComStSt25sdkCommandType4CustomCommand class])))) setGpoWithByte:value];
    mGpo_ = value;
  }
}

- (void)lockGpoWithByte:(jbyte)value {
  @synchronized(JreLoadStatic(ComStSt25sdkCommandType4Command, mLock)) {
    value |= (jbyte) (jint) 0x80;
    (void) [self select];
    (void) [((ComStSt25sdkCommandType4CustomCommand *) nil_chk(((ComStSt25sdkCommandType4CustomCommand *) cast_chk(mType4Command_, [ComStSt25sdkCommandType4CustomCommand class])))) setGpoWithByte:value];
    mGpo_ = value;
  }
}

- (void)lockGpo {
  @synchronized(JreLoadStatic(ComStSt25sdkCommandType4Command, mLock)) {
    jbyte value = (jbyte) ([self getGpo] | (jbyte) (jint) 0x80);
    (void) [self select];
    (void) [((ComStSt25sdkCommandType4CustomCommand *) nil_chk(((ComStSt25sdkCommandType4CustomCommand *) cast_chk(mType4Command_, [ComStSt25sdkCommandType4CustomCommand class])))) setGpoWithByte:value];
    mGpo_ = value;
  }
}

- (jboolean)isGpoLocked {
  jbyte lc = [self getGpo];
  return (lc & ComStSt25sdkType4aSt25taSysFileST25TAGpo_GPO_LOCKED_BIT) == ComStSt25sdkType4aSt25taSysFileST25TAGpo_GPO_LOCKED_BIT;
}

- (jboolean)isGpoConfigurableByRf {
  @try {
    return (![self isGpoLocked]);
  }
  @catch (ComStSt25sdkSTException *e) {
    return false;
  }
}

- (jboolean)isGpoInInterruptedMode {
  jbyte gpo = [self getGpo];
  return [self getGpoModeWithByte:gpo] == JreLoadEnum(ComStSt25sdkType4aSTType4GpoInterface_GpoMode, GPO_INTERRUPT);
}

- (jboolean)isGpoInStateControlMode {
  jbyte gpo = [self getGpo];
  return [self getGpoModeWithByte:gpo] == JreLoadEnum(ComStSt25sdkType4aSTType4GpoInterface_GpoMode, GPO_STATE_CONTROL);
}

- (void)sendInterruptCommand {
  @synchronized(JreLoadStatic(ComStSt25sdkCommandType4Command, mLock)) {
    (void) [self select];
    (void) [((ComStSt25sdkCommandType4CustomCommand *) nil_chk(((ComStSt25sdkCommandType4CustomCommand *) cast_chk(mType4Command_, [ComStSt25sdkCommandType4CustomCommand class])))) sendInterrupt];
  }
}

- (void)setStateControlCommandWithInt:(jint)value {
  @synchronized(JreLoadStatic(ComStSt25sdkCommandType4Command, mLock)) {
    (void) [self select];
    (void) [((ComStSt25sdkCommandType4CustomCommand *) nil_chk(((ComStSt25sdkCommandType4CustomCommand *) cast_chk(mType4Command_, [ComStSt25sdkCommandType4CustomCommand class])))) setStateControlWithByte:(jbyte) value];
  }
}

- (void)parseSysFileWithByteArray:(IOSByteArray *)buffer {
  [super parseSysFileWithByteArray:buffer];
  if (((IOSByteArray *) nil_chk(buffer))->size_ > 2) {
    mGpo_ = (jbyte) (IOSByteArray_Get(buffer, 2) & (jbyte) (jint) 0xFF);
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, -1, -1, 1, 2, -1, -1 },
    { NULL, "LComStSt25sdkType4aSTType4GpoInterface_GpoMode;", 0x1, 3, 4, 1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 6, 1, -1, -1, -1 },
    { NULL, "B", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "V", 0x1, 7, 4, 1, -1, -1, -1 },
    { NULL, "V", 0x1, 8, 4, 1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "V", 0x1, 9, 10, 1, -1, -1, -1 },
    { NULL, "V", 0x4, 11, 12, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComStSt25sdkCommandType4CustomCommand:);
  methods[1].selector = @selector(getSupportedGpoModes);
  methods[2].selector = @selector(getGpoModeWithByte:);
  methods[3].selector = @selector(setGpoModeWithComStSt25sdkType4aSTType4GpoInterface_GpoMode:);
  methods[4].selector = @selector(getGpo);
  methods[5].selector = @selector(setGpoWithByte:);
  methods[6].selector = @selector(lockGpoWithByte:);
  methods[7].selector = @selector(lockGpo);
  methods[8].selector = @selector(isGpoLocked);
  methods[9].selector = @selector(isGpoConfigurableByRf);
  methods[10].selector = @selector(isGpoInInterruptedMode);
  methods[11].selector = @selector(isGpoInStateControlMode);
  methods[12].selector = @selector(sendInterruptCommand);
  methods[13].selector = @selector(setStateControlCommandWithInt:);
  methods[14].selector = @selector(parseSysFileWithByteArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "mType4CustomCommand_", "LComStSt25sdkCommandType4CustomCommand;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "mGpo_", "B", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "GPO_LOCKED_BIT", "B", .constantValue.asChar = ComStSt25sdkType4aSt25taSysFileST25TAGpo_GPO_LOCKED_BIT, 0x1a, -1, -1, -1, -1 },
    { "mSupportedGpoModes_", "LJavaUtilList;", .constantValue.asLong = 0, 0x4, -1, -1, 13, -1 },
  };
  static const void *ptrTable[] = { "LComStSt25sdkCommandType4CustomCommand;", "LComStSt25sdkSTException;", "()Ljava/util/List<Lcom/st/st25sdk/type4a/STType4GpoInterface$GpoMode;>;", "getGpoMode", "B", "setGpoMode", "LComStSt25sdkType4aSTType4GpoInterface_GpoMode;", "setGpo", "lockGpo", "setStateControlCommand", "I", "parseSysFile", "[B", "Ljava/util/List<Lcom/st/st25sdk/type4a/STType4GpoInterface$GpoMode;>;" };
  static const J2ObjcClassInfo _ComStSt25sdkType4aSt25taSysFileST25TAGpo = { "SysFileST25TAGpo", "com.st.st25sdk.type4a.st25ta", ptrTable, methods, fields, 7, 0x1, 15, 4, -1, -1, -1, -1, -1 };
  return &_ComStSt25sdkType4aSt25taSysFileST25TAGpo;
}

@end

void ComStSt25sdkType4aSt25taSysFileST25TAGpo_initWithComStSt25sdkCommandType4CustomCommand_(ComStSt25sdkType4aSt25taSysFileST25TAGpo *self, ComStSt25sdkCommandType4CustomCommand *type4CustomCommand) {
  ComStSt25sdkType4aSt25taSysFileST25TA_initWithComStSt25sdkCommandType4CustomCommand_(self, type4CustomCommand);
  self->mSupportedGpoModes_ = new_JavaUtilArrayList_init();
  [self->mSupportedGpoModes_ addWithId:JreLoadEnum(ComStSt25sdkType4aSTType4GpoInterface_GpoMode, GPO_NOT_USED)];
  [((id<JavaUtilList>) nil_chk(self->mSupportedGpoModes_)) addWithId:JreLoadEnum(ComStSt25sdkType4aSTType4GpoInterface_GpoMode, GPO_SESSION_OPENED)];
  [((id<JavaUtilList>) nil_chk(self->mSupportedGpoModes_)) addWithId:JreLoadEnum(ComStSt25sdkType4aSTType4GpoInterface_GpoMode, GPO_WIP)];
  [((id<JavaUtilList>) nil_chk(self->mSupportedGpoModes_)) addWithId:JreLoadEnum(ComStSt25sdkType4aSTType4GpoInterface_GpoMode, GPO_MIP)];
  [((id<JavaUtilList>) nil_chk(self->mSupportedGpoModes_)) addWithId:JreLoadEnum(ComStSt25sdkType4aSTType4GpoInterface_GpoMode, GPO_INTERRUPT)];
  [((id<JavaUtilList>) nil_chk(self->mSupportedGpoModes_)) addWithId:JreLoadEnum(ComStSt25sdkType4aSTType4GpoInterface_GpoMode, GPO_STATE_CONTROL)];
  [((id<JavaUtilList>) nil_chk(self->mSupportedGpoModes_)) addWithId:JreLoadEnum(ComStSt25sdkType4aSTType4GpoInterface_GpoMode, GPO_RF_BUSY)];
  [((id<JavaUtilList>) nil_chk(self->mSupportedGpoModes_)) addWithId:JreLoadEnum(ComStSt25sdkType4aSTType4GpoInterface_GpoMode, GPO_FIELD_DETECT)];
}

ComStSt25sdkType4aSt25taSysFileST25TAGpo *new_ComStSt25sdkType4aSt25taSysFileST25TAGpo_initWithComStSt25sdkCommandType4CustomCommand_(ComStSt25sdkCommandType4CustomCommand *type4CustomCommand) {
  J2OBJC_NEW_IMPL(ComStSt25sdkType4aSt25taSysFileST25TAGpo, initWithComStSt25sdkCommandType4CustomCommand_, type4CustomCommand)
}

ComStSt25sdkType4aSt25taSysFileST25TAGpo *create_ComStSt25sdkType4aSt25taSysFileST25TAGpo_initWithComStSt25sdkCommandType4CustomCommand_(ComStSt25sdkCommandType4CustomCommand *type4CustomCommand) {
  J2OBJC_CREATE_IMPL(ComStSt25sdkType4aSt25taSysFileST25TAGpo, initWithComStSt25sdkCommandType4CustomCommand_, type4CustomCommand)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComStSt25sdkType4aSt25taSysFileST25TAGpo)
