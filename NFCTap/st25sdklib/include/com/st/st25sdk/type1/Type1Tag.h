//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: st25sdk_ios/type1/Type1Tag.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComStSt25sdkType1Type1Tag")
#ifdef RESTRICT_ComStSt25sdkType1Type1Tag
#define INCLUDE_ALL_ComStSt25sdkType1Type1Tag 0
#else
#define INCLUDE_ALL_ComStSt25sdkType1Type1Tag 1
#endif
#undef RESTRICT_ComStSt25sdkType1Type1Tag

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComStSt25sdkType1Type1Tag_) && (INCLUDE_ALL_ComStSt25sdkType1Type1Tag || defined(INCLUDE_ComStSt25sdkType1Type1Tag))
#define ComStSt25sdkType1Type1Tag_

#define RESTRICT_ComStSt25sdkNFCTag 1
#define INCLUDE_ComStSt25sdkNFCTag 1
#include "com/st/st25sdk/NFCTag.h"

@class ComStSt25sdkCommandType1Command;
@class ComStSt25sdkNdefNDEFMsg;
@class IOSByteArray;
@protocol ComStSt25sdkRFReaderInterface;

@interface ComStSt25sdkType1Type1Tag : ComStSt25sdkNFCTag {
 @public
  ComStSt25sdkCommandType1Command *mType1Cmd_;
  IOSByteArray *mTagUidLSB_;
  jbyte mHR0_;
  jbyte mHR1_;
}

#pragma mark Public

- (instancetype __nonnull)initWithComStSt25sdkRFReaderInterface:(id<ComStSt25sdkRFReaderInterface>)readerInterface
                                                  withByteArray:(IOSByteArray *)uid;

- (jboolean)checkType1TagPresence;

- (jint)getCCFileLength;

- (jbyte)getCCMagicNumber;

- (jbyte)getCCMappingVersion;

- (jint)getCCMemorySize;

- (jbyte)getCCReadAccess;

- (jbyte)getCCWriteAccess;

- (jbyte)getHR0;

- (jbyte)getHR1;

- (jbyte)getICRef;

- (IOSByteArray *)getLsbUID;

- (jint)getMemSizeInBytes;

- (jint)getSysFileLength;

- (void)initEmptyCCFile OBJC_METHOD_FAMILY_NONE;

- (jboolean)isStaticMemoryMap;

- (IOSByteArray *)read8BytesWithByte:(jbyte)add8;

- (IOSByteArray *)readAll;

- (IOSByteArray *)readByteWithByte:(jbyte)blockAddress;

- (IOSByteArray *)readBytesWithInt:(jint)byteAddress
                           withInt:(jint)sizeInBytes;

- (IOSByteArray *)readCCFile;

- (IOSByteArray *)readHR0HR1bytes;

- (ComStSt25sdkNdefNDEFMsg *)readNdefMessage;

- (IOSByteArray *)readSegmentWithByte:(jbyte)adds;

- (IOSByteArray *)readSysFile;

- (void)writeBytesWithInt:(jint)byteAddress
            withByteArray:(IOSByteArray *)data;

- (void)writeCCFile;

- (void)writeCCFileWithByteArray:(IOSByteArray *)buffer;

- (void)writeErase8BytesWithByte:(jbyte)add8
                   withByteArray:(IOSByteArray *)data;

- (void)writeEraseByteWithByte:(jbyte)blockAddress
                      withByte:(jbyte)data;

- (void)writeNdefMessageWithComStSt25sdkNdefNDEFMsg:(ComStSt25sdkNdefNDEFMsg *)msg;

- (void)writeNoErase8BytesWithByte:(jbyte)add8
                     withByteArray:(IOSByteArray *)data;

- (void)writeNoEraseByteWithByte:(jbyte)blockAddress
                        withByte:(jbyte)data;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

- (instancetype __nonnull)initWithComStSt25sdkRFReaderInterface:(id<ComStSt25sdkRFReaderInterface>)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComStSt25sdkType1Type1Tag)

J2OBJC_FIELD_SETTER(ComStSt25sdkType1Type1Tag, mType1Cmd_, ComStSt25sdkCommandType1Command *)
J2OBJC_FIELD_SETTER(ComStSt25sdkType1Type1Tag, mTagUidLSB_, IOSByteArray *)

FOUNDATION_EXPORT void ComStSt25sdkType1Type1Tag_initWithComStSt25sdkRFReaderInterface_withByteArray_(ComStSt25sdkType1Type1Tag *self, id<ComStSt25sdkRFReaderInterface> readerInterface, IOSByteArray *uid);

FOUNDATION_EXPORT ComStSt25sdkType1Type1Tag *new_ComStSt25sdkType1Type1Tag_initWithComStSt25sdkRFReaderInterface_withByteArray_(id<ComStSt25sdkRFReaderInterface> readerInterface, IOSByteArray *uid) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComStSt25sdkType1Type1Tag *create_ComStSt25sdkType1Type1Tag_initWithComStSt25sdkRFReaderInterface_withByteArray_(id<ComStSt25sdkRFReaderInterface> readerInterface, IOSByteArray *uid);

J2OBJC_TYPE_LITERAL_HEADER(ComStSt25sdkType1Type1Tag)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComStSt25sdkType1Type1Tag")
