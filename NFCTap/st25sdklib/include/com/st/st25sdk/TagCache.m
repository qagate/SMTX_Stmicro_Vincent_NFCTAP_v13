//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: st25sdk_ios/TagCache.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "com/st/st25sdk/CacheInterface.h"
#include "com/st/st25sdk/STLog.h"
#include "com/st/st25sdk/TagCache.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"

@interface ComStSt25sdkTagCache () {
 @public
  jboolean mCacheActivated_;
  id<JavaUtilList> mCacheInterface_;
  id<JavaUtilList> mCachableObjects_;
}

- (void)show_cache_content;

@end

J2OBJC_FIELD_SETTER(ComStSt25sdkTagCache, mCacheInterface_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(ComStSt25sdkTagCache, mCachableObjects_, id<JavaUtilList>)

__attribute__((unused)) static void ComStSt25sdkTagCache_show_cache_content(ComStSt25sdkTagCache *self);

@interface ComStSt25sdkTagCache_CachableObject : NSObject {
 @public
  id mObj_;
  NSString *mObjecName_;
  jboolean mCacheActivated_;
  jboolean mCacheInvalidated_;
}

- (instancetype)initWithComStSt25sdkTagCache:(ComStSt25sdkTagCache *)outer$
                                      withId:(id)obj
                                withNSString:(NSString *)objecName;

- (NSString *)getObjecName;

@end

J2OBJC_EMPTY_STATIC_INIT(ComStSt25sdkTagCache_CachableObject)

J2OBJC_FIELD_SETTER(ComStSt25sdkTagCache_CachableObject, mObj_, id)
J2OBJC_FIELD_SETTER(ComStSt25sdkTagCache_CachableObject, mObjecName_, NSString *)

__attribute__((unused)) static void ComStSt25sdkTagCache_CachableObject_initWithComStSt25sdkTagCache_withId_withNSString_(ComStSt25sdkTagCache_CachableObject *self, ComStSt25sdkTagCache *outer$, id obj, NSString *objecName);

__attribute__((unused)) static ComStSt25sdkTagCache_CachableObject *new_ComStSt25sdkTagCache_CachableObject_initWithComStSt25sdkTagCache_withId_withNSString_(ComStSt25sdkTagCache *outer$, id obj, NSString *objecName) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComStSt25sdkTagCache_CachableObject *create_ComStSt25sdkTagCache_CachableObject_initWithComStSt25sdkTagCache_withId_withNSString_(ComStSt25sdkTagCache *outer$, id obj, NSString *objecName);

J2OBJC_TYPE_LITERAL_HEADER(ComStSt25sdkTagCache_CachableObject)

jboolean ComStSt25sdkTagCache_DBG_CACHE_MANAGER = false;

@implementation ComStSt25sdkTagCache

+ (jboolean)DBG_CACHE_MANAGER {
  return ComStSt25sdkTagCache_DBG_CACHE_MANAGER;
}

+ (void)setDBG_CACHE_MANAGER:(jboolean)value {
  ComStSt25sdkTagCache_DBG_CACHE_MANAGER = value;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComStSt25sdkTagCache_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)addWithId:(id)obj {
  if (obj == nil) return;
  if ([self containsWithId:obj]) return;
  if ([ComStSt25sdkCacheInterface_class_() isInstance:obj]) {
    [((id<JavaUtilList>) nil_chk(mCacheInterface_)) addWithId:(id<ComStSt25sdkCacheInterface>) cast_check(obj, ComStSt25sdkCacheInterface_class_())];
  }
  else {
    NSString *objectName = [obj description];
    [((id<JavaUtilList>) nil_chk(mCachableObjects_)) addWithId:new_ComStSt25sdkTagCache_CachableObject_initWithComStSt25sdkTagCache_withId_withNSString_(self, obj, objectName)];
  }
  if (ComStSt25sdkTagCache_DBG_CACHE_MANAGER) {
    ComStSt25sdkTagCache_show_cache_content(self);
  }
}

- (void)removeWithId:(id)obj {
  if (obj == nil) return;
  if ([ComStSt25sdkCacheInterface_class_() isInstance:obj]) {
    for (id<ComStSt25sdkCacheInterface> __strong it in nil_chk(mCacheInterface_)) {
      if (it == obj) {
        [mCacheInterface_ removeWithId:it];
        if (ComStSt25sdkTagCache_DBG_CACHE_MANAGER) {
          ComStSt25sdkTagCache_show_cache_content(self);
        }
        return;
      }
    }
  }
  else {
    for (ComStSt25sdkTagCache_CachableObject * __strong it in nil_chk(mCachableObjects_)) {
      if (((ComStSt25sdkTagCache_CachableObject *) nil_chk(it))->mObj_ == obj) {
        [mCachableObjects_ removeWithId:it];
        if (ComStSt25sdkTagCache_DBG_CACHE_MANAGER) {
          ComStSt25sdkTagCache_show_cache_content(self);
        }
        return;
      }
    }
  }
  if (ComStSt25sdkTagCache_DBG_CACHE_MANAGER) {
    ComStSt25sdkTagCache_show_cache_content(self);
  }
}

- (jboolean)containsWithId:(id)obj {
  if (obj == nil) return false;
  for (ComStSt25sdkTagCache_CachableObject * __strong it in nil_chk(mCachableObjects_)) {
    if (((ComStSt25sdkTagCache_CachableObject *) nil_chk(it))->mObj_ == obj) {
      return true;
    }
  }
  for (id<ComStSt25sdkCacheInterface> __strong it in nil_chk(mCacheInterface_)) {
    if (it == obj) {
      return true;
    }
  }
  return false;
}

- (void)invalidateCacheWithId:(id)obj {
  if (obj == nil) return;
  for (ComStSt25sdkTagCache_CachableObject * __strong it in nil_chk(mCachableObjects_)) {
    if (((ComStSt25sdkTagCache_CachableObject *) nil_chk(it))->mObj_ == obj) {
      it->mCacheInvalidated_ = true;
      return;
    }
  }
  for (id<ComStSt25sdkCacheInterface> __strong it in nil_chk(mCacheInterface_)) {
    if (it == obj) {
      [((id<ComStSt25sdkCacheInterface>) nil_chk(it)) invalidateCache];
      return;
    }
  }
}

- (void)invalidateCache {
  for (id<ComStSt25sdkCacheInterface> __strong it in nil_chk(mCacheInterface_)) {
    [((id<ComStSt25sdkCacheInterface>) nil_chk(it)) invalidateCache];
  }
  for (ComStSt25sdkTagCache_CachableObject * __strong it in nil_chk(mCachableObjects_)) {
    ((ComStSt25sdkTagCache_CachableObject *) nil_chk(it))->mCacheInvalidated_ = true;
  }
}

- (void)validateCacheWithId:(id)obj {
  if (obj == nil) return;
  for (ComStSt25sdkTagCache_CachableObject * __strong it in nil_chk(mCachableObjects_)) {
    if (((ComStSt25sdkTagCache_CachableObject *) nil_chk(it))->mObj_ == obj) {
      it->mCacheInvalidated_ = false;
      return;
    }
  }
  for (id<ComStSt25sdkCacheInterface> __strong it in nil_chk(mCacheInterface_)) {
    if (it == obj) {
      [((id<ComStSt25sdkCacheInterface>) nil_chk(it)) validateCache];
      return;
    }
  }
}

- (void)validateCache {
  for (id<ComStSt25sdkCacheInterface> __strong it in nil_chk(mCacheInterface_)) {
    [((id<ComStSt25sdkCacheInterface>) nil_chk(it)) validateCache];
  }
  for (ComStSt25sdkTagCache_CachableObject * __strong it in nil_chk(mCachableObjects_)) {
    ((ComStSt25sdkTagCache_CachableObject *) nil_chk(it))->mCacheInvalidated_ = false;
  }
}

- (void)activateCache {
  for (ComStSt25sdkTagCache_CachableObject * __strong it in nil_chk(mCachableObjects_)) {
    ((ComStSt25sdkTagCache_CachableObject *) nil_chk(it))->mCacheActivated_ = true;
  }
  for (id<ComStSt25sdkCacheInterface> __strong it in nil_chk(mCacheInterface_)) {
    [((id<ComStSt25sdkCacheInterface>) nil_chk(it)) activateCache];
  }
  mCacheActivated_ = true;
}

- (void)activateCacheWithId:(id)obj {
  if (obj == nil) return;
  for (ComStSt25sdkTagCache_CachableObject * __strong it in nil_chk(mCachableObjects_)) {
    if (((ComStSt25sdkTagCache_CachableObject *) nil_chk(it))->mObj_ == obj) {
      it->mCacheActivated_ = true;
      return;
    }
  }
  for (id<ComStSt25sdkCacheInterface> __strong it in nil_chk(mCacheInterface_)) {
    if (it == obj) {
      [((id<ComStSt25sdkCacheInterface>) nil_chk(it)) activateCache];
      return;
    }
  }
}

- (void)deactivateCache {
  for (ComStSt25sdkTagCache_CachableObject * __strong it in nil_chk(mCachableObjects_)) {
    ((ComStSt25sdkTagCache_CachableObject *) nil_chk(it))->mCacheActivated_ = false;
  }
  for (id<ComStSt25sdkCacheInterface> __strong it in nil_chk(mCacheInterface_)) {
    [((id<ComStSt25sdkCacheInterface>) nil_chk(it)) deactivateCache];
  }
  mCacheActivated_ = false;
}

- (void)deactivateCacheWithId:(id)obj {
  if (obj == nil) return;
  for (ComStSt25sdkTagCache_CachableObject * __strong it in nil_chk(mCachableObjects_)) {
    if (((ComStSt25sdkTagCache_CachableObject *) nil_chk(it))->mObj_ == obj) {
      it->mCacheActivated_ = false;
      return;
    }
  }
  for (id<ComStSt25sdkCacheInterface> __strong it in nil_chk(mCacheInterface_)) {
    if (it == obj) {
      [((id<ComStSt25sdkCacheInterface>) nil_chk(it)) deactivateCache];
      return;
    }
  }
}

- (void)updateCache {
  for (id<ComStSt25sdkCacheInterface> __strong it in nil_chk(mCacheInterface_)) {
    [((id<ComStSt25sdkCacheInterface>) nil_chk(it)) updateCache];
  }
  for (ComStSt25sdkTagCache_CachableObject * __strong it in nil_chk(mCachableObjects_)) {
    ((ComStSt25sdkTagCache_CachableObject *) nil_chk(it))->mCacheInvalidated_ = true;
  }
}

- (void)show_cache_content {
  ComStSt25sdkTagCache_show_cache_content(self);
}

- (jboolean)isCacheValidWithId:(id)obj {
  if (obj == nil) return false;
  for (ComStSt25sdkTagCache_CachableObject * __strong it in nil_chk(mCachableObjects_)) {
    if (((ComStSt25sdkTagCache_CachableObject *) nil_chk(it))->mObj_ == obj) {
      return !it->mCacheInvalidated_;
    }
  }
  for (id<ComStSt25sdkCacheInterface> __strong it in nil_chk(mCacheInterface_)) {
    if (it == obj) {
      return [((id<ComStSt25sdkCacheInterface>) nil_chk(it)) isCacheValid];
    }
  }
  return false;
}

- (jboolean)isCacheValid {
  for (ComStSt25sdkTagCache_CachableObject * __strong it in nil_chk(mCachableObjects_)) {
    if (((ComStSt25sdkTagCache_CachableObject *) nil_chk(it))->mCacheInvalidated_) return false;
  }
  for (id<ComStSt25sdkCacheInterface> __strong it in nil_chk(mCacheInterface_)) {
    if (![((id<ComStSt25sdkCacheInterface>) nil_chk(it)) isCacheValid]) return false;
  }
  return true;
}

- (jboolean)isCacheActivatedWithId:(id)obj {
  if (obj == nil) return false;
  for (ComStSt25sdkTagCache_CachableObject * __strong it in nil_chk(mCachableObjects_)) {
    if (((ComStSt25sdkTagCache_CachableObject *) nil_chk(it))->mObj_ == obj) {
      return it->mCacheActivated_;
    }
  }
  for (id<ComStSt25sdkCacheInterface> __strong it in nil_chk(mCacheInterface_)) {
    if (it == obj) {
      return [((id<ComStSt25sdkCacheInterface>) nil_chk(it)) isCacheActivated];
    }
  }
  return false;
}

- (jboolean)isCacheActivated {
  return mCacheActivated_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 3, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 7, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 8, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 9, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 10, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(addWithId:);
  methods[2].selector = @selector(removeWithId:);
  methods[3].selector = @selector(containsWithId:);
  methods[4].selector = @selector(invalidateCacheWithId:);
  methods[5].selector = @selector(invalidateCache);
  methods[6].selector = @selector(validateCacheWithId:);
  methods[7].selector = @selector(validateCache);
  methods[8].selector = @selector(activateCache);
  methods[9].selector = @selector(activateCacheWithId:);
  methods[10].selector = @selector(deactivateCache);
  methods[11].selector = @selector(deactivateCacheWithId:);
  methods[12].selector = @selector(updateCache);
  methods[13].selector = @selector(show_cache_content);
  methods[14].selector = @selector(isCacheValidWithId:);
  methods[15].selector = @selector(isCacheValid);
  methods[16].selector = @selector(isCacheActivatedWithId:);
  methods[17].selector = @selector(isCacheActivated);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "mCacheActivated_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "DBG_CACHE_MANAGER", "Z", .constantValue.asLong = 0, 0x9, -1, 11, -1, -1 },
    { "mCacheInterface_", "LJavaUtilList;", .constantValue.asLong = 0, 0x2, -1, -1, 12, -1 },
    { "mCachableObjects_", "LJavaUtilList;", .constantValue.asLong = 0, 0x2, -1, -1, 13, -1 },
  };
  static const void *ptrTable[] = { "add", "LNSObject;", "remove", "contains", "invalidateCache", "validateCache", "activateCache", "deactivateCache", "LComStSt25sdkSTException;", "isCacheValid", "isCacheActivated", &ComStSt25sdkTagCache_DBG_CACHE_MANAGER, "Ljava/util/List<Lcom/st/st25sdk/CacheInterface;>;", "Ljava/util/List<Lcom/st/st25sdk/TagCache$CachableObject;>;", "LComStSt25sdkTagCache_CachableObject;" };
  static const J2ObjcClassInfo _ComStSt25sdkTagCache = { "TagCache", "com.st.st25sdk", ptrTable, methods, fields, 7, 0x1, 18, 4, -1, 14, -1, -1, -1 };
  return &_ComStSt25sdkTagCache;
}

@end

void ComStSt25sdkTagCache_init(ComStSt25sdkTagCache *self) {
  NSObject_init(self);
  self->mCacheActivated_ = true;
  self->mCacheInterface_ = new_JavaUtilArrayList_init();
  self->mCachableObjects_ = new_JavaUtilArrayList_init();
}

ComStSt25sdkTagCache *new_ComStSt25sdkTagCache_init() {
  J2OBJC_NEW_IMPL(ComStSt25sdkTagCache, init)
}

ComStSt25sdkTagCache *create_ComStSt25sdkTagCache_init() {
  J2OBJC_CREATE_IMPL(ComStSt25sdkTagCache, init)
}

void ComStSt25sdkTagCache_show_cache_content(ComStSt25sdkTagCache *self) {
  ComStSt25sdkSTLog_wWithNSString_(@" ");
  ComStSt25sdkSTLog_wWithNSString_(@"\n\nCachableObjects:");
  for (ComStSt25sdkTagCache_CachableObject * __strong obj in nil_chk(self->mCachableObjects_)) {
    ComStSt25sdkSTLog_wWithNSString_([((ComStSt25sdkTagCache_CachableObject *) nil_chk(obj)) getObjecName]);
  }
  ComStSt25sdkSTLog_wWithNSString_(@"CacheInterface:");
  for (id<ComStSt25sdkCacheInterface> __strong obj in nil_chk(self->mCacheInterface_)) {
    ComStSt25sdkSTLog_wWithNSString_([((id<ComStSt25sdkCacheInterface>) nil_chk(obj)) description]);
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComStSt25sdkTagCache)

@implementation ComStSt25sdkTagCache_CachableObject

- (instancetype)initWithComStSt25sdkTagCache:(ComStSt25sdkTagCache *)outer$
                                      withId:(id)obj
                                withNSString:(NSString *)objecName {
  ComStSt25sdkTagCache_CachableObject_initWithComStSt25sdkTagCache_withId_withNSString_(self, outer$, obj, objecName);
  return self;
}

- (NSString *)getObjecName {
  return mObjecName_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComStSt25sdkTagCache:withId:withNSString:);
  methods[1].selector = @selector(getObjecName);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "mObj_", "LNSObject;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mObjecName_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mCacheActivated_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mCacheInvalidated_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSObject;LNSString;", "LComStSt25sdkTagCache;" };
  static const J2ObjcClassInfo _ComStSt25sdkTagCache_CachableObject = { "CachableObject", "com.st.st25sdk", ptrTable, methods, fields, 7, 0x2, 2, 4, 1, -1, -1, -1, -1 };
  return &_ComStSt25sdkTagCache_CachableObject;
}

@end

void ComStSt25sdkTagCache_CachableObject_initWithComStSt25sdkTagCache_withId_withNSString_(ComStSt25sdkTagCache_CachableObject *self, ComStSt25sdkTagCache *outer$, id obj, NSString *objecName) {
  NSObject_init(self);
  self->mObj_ = obj;
  self->mObjecName_ = objecName;
  self->mCacheActivated_ = true;
  self->mCacheInvalidated_ = false;
}

ComStSt25sdkTagCache_CachableObject *new_ComStSt25sdkTagCache_CachableObject_initWithComStSt25sdkTagCache_withId_withNSString_(ComStSt25sdkTagCache *outer$, id obj, NSString *objecName) {
  J2OBJC_NEW_IMPL(ComStSt25sdkTagCache_CachableObject, initWithComStSt25sdkTagCache_withId_withNSString_, outer$, obj, objecName)
}

ComStSt25sdkTagCache_CachableObject *create_ComStSt25sdkTagCache_CachableObject_initWithComStSt25sdkTagCache_withId_withNSString_(ComStSt25sdkTagCache *outer$, id obj, NSString *objecName) {
  J2OBJC_CREATE_IMPL(ComStSt25sdkTagCache_CachableObject, initWithComStSt25sdkTagCache_withId_withNSString_, outer$, obj, objecName)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComStSt25sdkTagCache_CachableObject)
