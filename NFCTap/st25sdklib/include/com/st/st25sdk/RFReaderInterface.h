//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: st25sdk_ios/RFReaderInterface.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComStSt25sdkRFReaderInterface")
#ifdef RESTRICT_ComStSt25sdkRFReaderInterface
#define INCLUDE_ALL_ComStSt25sdkRFReaderInterface 0
#else
#define INCLUDE_ALL_ComStSt25sdkRFReaderInterface 1
#endif
#undef RESTRICT_ComStSt25sdkRFReaderInterface

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComStSt25sdkRFReaderInterface_) && (INCLUDE_ALL_ComStSt25sdkRFReaderInterface || defined(INCLUDE_ComStSt25sdkRFReaderInterface))
#define ComStSt25sdkRFReaderInterface_

@class ComStSt25sdkNFCTag_NfcTagTypes;
@class ComStSt25sdkRFReaderInterface_InventoryMode;
@class ComStSt25sdkRFReaderInterface_TransceiveMode;
@class IOSByteArray;
@class IOSObjectArray;
@protocol JavaUtilList;

@protocol ComStSt25sdkRFReaderInterface < JavaObject >

- (IOSByteArray *)transceiveWithId:(id)obj
                      withNSString:(NSString *)commandName
                     withByteArray:(IOSByteArray *)data;

- (void)setTransceiveModeWithComStSt25sdkRFReaderInterface_TransceiveMode:(ComStSt25sdkRFReaderInterface_TransceiveMode *)mode;

- (id<JavaUtilList>)getTransceivedData;

- (IOSByteArray *)getLastTransceivedData;

- (ComStSt25sdkRFReaderInterface_TransceiveMode *)getTransceiveMode;

- (ComStSt25sdkNFCTag_NfcTagTypes *)decodeTagTypeWithByteArray:(IOSByteArray *)uid;

- (IOSObjectArray *)getTechListWithByteArray:(IOSByteArray *)uid;

- (jint)getMaxTransmitLengthInBytes;

- (jint)getMaxReceiveLengthInBytes;

- (void)setTagResponseLengthInBytesWithInt:(jint)responseDataLengthInBytes;

- (id<JavaUtilList>)inventoryWithComStSt25sdkRFReaderInterface_InventoryMode:(ComStSt25sdkRFReaderInterface_InventoryMode *)mode;

- (jbyte)iso14443aSelectTagWithByteArray:(IOSByteArray *)uid;

- (jbyte)iso14443aDeSelectTagWithByteArray:(IOSByteArray *)uid;

- (jbyte)iso14443bSelectTagWithByteArray:(IOSByteArray *)pupi;

- (jbyte)iso14443bDeSelectTagWithByteArray:(IOSByteArray *)pupi;

@end

J2OBJC_EMPTY_STATIC_INIT(ComStSt25sdkRFReaderInterface)

J2OBJC_TYPE_LITERAL_HEADER(ComStSt25sdkRFReaderInterface)

#endif

#if !defined (ComStSt25sdkRFReaderInterface_InventoryMode_) && (INCLUDE_ALL_ComStSt25sdkRFReaderInterface || defined(INCLUDE_ComStSt25sdkRFReaderInterface_InventoryMode))
#define ComStSt25sdkRFReaderInterface_InventoryMode_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

@class IOSObjectArray;

typedef NS_ENUM(NSUInteger, ComStSt25sdkRFReaderInterface_InventoryMode_Enum) {
  ComStSt25sdkRFReaderInterface_InventoryMode_Enum_NFC_ISO14443A_TYPE2_TYPE4A = 0,
  ComStSt25sdkRFReaderInterface_InventoryMode_Enum_NFC_TYPE_2 = 1,
  ComStSt25sdkRFReaderInterface_InventoryMode_Enum_NFC_TYPE_4A = 2,
  ComStSt25sdkRFReaderInterface_InventoryMode_Enum_NFC_TYPE_4B = 3,
  ComStSt25sdkRFReaderInterface_InventoryMode_Enum_NFC_ISO14443SR = 4,
  ComStSt25sdkRFReaderInterface_InventoryMode_Enum_NFC_TYPE_5 = 5,
  ComStSt25sdkRFReaderInterface_InventoryMode_Enum_NFC_TYPE1 = 6,
  ComStSt25sdkRFReaderInterface_InventoryMode_Enum_NFC_TYPE3 = 7,
  ComStSt25sdkRFReaderInterface_InventoryMode_Enum_NFC_PICOPASS = 8,
};

@interface ComStSt25sdkRFReaderInterface_InventoryMode : JavaLangEnum

@property (readonly, class, nonnull) ComStSt25sdkRFReaderInterface_InventoryMode *NFC_ISO14443A_TYPE2_TYPE4A NS_SWIFT_NAME(NFC_ISO14443A_TYPE2_TYPE4A);
@property (readonly, class, nonnull) ComStSt25sdkRFReaderInterface_InventoryMode *NFC_TYPE_2 NS_SWIFT_NAME(NFC_TYPE_2);
@property (readonly, class, nonnull) ComStSt25sdkRFReaderInterface_InventoryMode *NFC_TYPE_4A NS_SWIFT_NAME(NFC_TYPE_4A);
@property (readonly, class, nonnull) ComStSt25sdkRFReaderInterface_InventoryMode *NFC_TYPE_4B NS_SWIFT_NAME(NFC_TYPE_4B);
@property (readonly, class, nonnull) ComStSt25sdkRFReaderInterface_InventoryMode *NFC_ISO14443SR NS_SWIFT_NAME(NFC_ISO14443SR);
@property (readonly, class, nonnull) ComStSt25sdkRFReaderInterface_InventoryMode *NFC_TYPE_5 NS_SWIFT_NAME(NFC_TYPE_5);
@property (readonly, class, nonnull) ComStSt25sdkRFReaderInterface_InventoryMode *NFC_TYPE1 NS_SWIFT_NAME(NFC_TYPE1);
@property (readonly, class, nonnull) ComStSt25sdkRFReaderInterface_InventoryMode *NFC_TYPE3 NS_SWIFT_NAME(NFC_TYPE3);
@property (readonly, class, nonnull) ComStSt25sdkRFReaderInterface_InventoryMode *NFC_PICOPASS NS_SWIFT_NAME(NFC_PICOPASS);
+ (ComStSt25sdkRFReaderInterface_InventoryMode * __nonnull)NFC_ISO14443A_TYPE2_TYPE4A;

+ (ComStSt25sdkRFReaderInterface_InventoryMode * __nonnull)NFC_TYPE_2;

+ (ComStSt25sdkRFReaderInterface_InventoryMode * __nonnull)NFC_TYPE_4A;

+ (ComStSt25sdkRFReaderInterface_InventoryMode * __nonnull)NFC_TYPE_4B;

+ (ComStSt25sdkRFReaderInterface_InventoryMode * __nonnull)NFC_ISO14443SR;

+ (ComStSt25sdkRFReaderInterface_InventoryMode * __nonnull)NFC_TYPE_5;

+ (ComStSt25sdkRFReaderInterface_InventoryMode * __nonnull)NFC_TYPE1;

+ (ComStSt25sdkRFReaderInterface_InventoryMode * __nonnull)NFC_TYPE3;

+ (ComStSt25sdkRFReaderInterface_InventoryMode * __nonnull)NFC_PICOPASS;

#pragma mark Public

+ (ComStSt25sdkRFReaderInterface_InventoryMode *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (ComStSt25sdkRFReaderInterface_InventoryMode_Enum)toNSEnum;

@end

J2OBJC_STATIC_INIT(ComStSt25sdkRFReaderInterface_InventoryMode)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT ComStSt25sdkRFReaderInterface_InventoryMode *ComStSt25sdkRFReaderInterface_InventoryMode_values_[];

inline ComStSt25sdkRFReaderInterface_InventoryMode *ComStSt25sdkRFReaderInterface_InventoryMode_get_NFC_ISO14443A_TYPE2_TYPE4A(void);
J2OBJC_ENUM_CONSTANT(ComStSt25sdkRFReaderInterface_InventoryMode, NFC_ISO14443A_TYPE2_TYPE4A)

inline ComStSt25sdkRFReaderInterface_InventoryMode *ComStSt25sdkRFReaderInterface_InventoryMode_get_NFC_TYPE_2(void);
J2OBJC_ENUM_CONSTANT(ComStSt25sdkRFReaderInterface_InventoryMode, NFC_TYPE_2)

inline ComStSt25sdkRFReaderInterface_InventoryMode *ComStSt25sdkRFReaderInterface_InventoryMode_get_NFC_TYPE_4A(void);
J2OBJC_ENUM_CONSTANT(ComStSt25sdkRFReaderInterface_InventoryMode, NFC_TYPE_4A)

inline ComStSt25sdkRFReaderInterface_InventoryMode *ComStSt25sdkRFReaderInterface_InventoryMode_get_NFC_TYPE_4B(void);
J2OBJC_ENUM_CONSTANT(ComStSt25sdkRFReaderInterface_InventoryMode, NFC_TYPE_4B)

inline ComStSt25sdkRFReaderInterface_InventoryMode *ComStSt25sdkRFReaderInterface_InventoryMode_get_NFC_ISO14443SR(void);
J2OBJC_ENUM_CONSTANT(ComStSt25sdkRFReaderInterface_InventoryMode, NFC_ISO14443SR)

inline ComStSt25sdkRFReaderInterface_InventoryMode *ComStSt25sdkRFReaderInterface_InventoryMode_get_NFC_TYPE_5(void);
J2OBJC_ENUM_CONSTANT(ComStSt25sdkRFReaderInterface_InventoryMode, NFC_TYPE_5)

inline ComStSt25sdkRFReaderInterface_InventoryMode *ComStSt25sdkRFReaderInterface_InventoryMode_get_NFC_TYPE1(void);
J2OBJC_ENUM_CONSTANT(ComStSt25sdkRFReaderInterface_InventoryMode, NFC_TYPE1)

inline ComStSt25sdkRFReaderInterface_InventoryMode *ComStSt25sdkRFReaderInterface_InventoryMode_get_NFC_TYPE3(void);
J2OBJC_ENUM_CONSTANT(ComStSt25sdkRFReaderInterface_InventoryMode, NFC_TYPE3)

inline ComStSt25sdkRFReaderInterface_InventoryMode *ComStSt25sdkRFReaderInterface_InventoryMode_get_NFC_PICOPASS(void);
J2OBJC_ENUM_CONSTANT(ComStSt25sdkRFReaderInterface_InventoryMode, NFC_PICOPASS)

FOUNDATION_EXPORT IOSObjectArray *ComStSt25sdkRFReaderInterface_InventoryMode_values(void);

FOUNDATION_EXPORT ComStSt25sdkRFReaderInterface_InventoryMode *ComStSt25sdkRFReaderInterface_InventoryMode_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT ComStSt25sdkRFReaderInterface_InventoryMode *ComStSt25sdkRFReaderInterface_InventoryMode_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(ComStSt25sdkRFReaderInterface_InventoryMode)

#endif

#if !defined (ComStSt25sdkRFReaderInterface_TransceiveMode_) && (INCLUDE_ALL_ComStSt25sdkRFReaderInterface || defined(INCLUDE_ComStSt25sdkRFReaderInterface_TransceiveMode))
#define ComStSt25sdkRFReaderInterface_TransceiveMode_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

@class IOSObjectArray;

typedef NS_ENUM(NSUInteger, ComStSt25sdkRFReaderInterface_TransceiveMode_Enum) {
  ComStSt25sdkRFReaderInterface_TransceiveMode_Enum_NORMAL = 0,
  ComStSt25sdkRFReaderInterface_TransceiveMode_Enum_SILENT = 1,
  ComStSt25sdkRFReaderInterface_TransceiveMode_Enum_EVAL = 2,
  ComStSt25sdkRFReaderInterface_TransceiveMode_Enum_EVAL_RECORD = 3,
  ComStSt25sdkRFReaderInterface_TransceiveMode_Enum_RECORD = 4,
  ComStSt25sdkRFReaderInterface_TransceiveMode_Enum_ISO14443A_TRANSPARENT = 5,
  ComStSt25sdkRFReaderInterface_TransceiveMode_Enum_ISO14443B_TRANSPARENT = 6,
};

@interface ComStSt25sdkRFReaderInterface_TransceiveMode : JavaLangEnum

@property (readonly, class, nonnull) ComStSt25sdkRFReaderInterface_TransceiveMode *NORMAL NS_SWIFT_NAME(NORMAL);
@property (readonly, class, nonnull) ComStSt25sdkRFReaderInterface_TransceiveMode *SILENT NS_SWIFT_NAME(SILENT);
@property (readonly, class, nonnull) ComStSt25sdkRFReaderInterface_TransceiveMode *EVAL NS_SWIFT_NAME(EVAL);
@property (readonly, class, nonnull) ComStSt25sdkRFReaderInterface_TransceiveMode *EVAL_RECORD NS_SWIFT_NAME(EVAL_RECORD);
@property (readonly, class, nonnull) ComStSt25sdkRFReaderInterface_TransceiveMode *RECORD NS_SWIFT_NAME(RECORD);
@property (readonly, class, nonnull) ComStSt25sdkRFReaderInterface_TransceiveMode *ISO14443A_TRANSPARENT NS_SWIFT_NAME(ISO14443A_TRANSPARENT);
@property (readonly, class, nonnull) ComStSt25sdkRFReaderInterface_TransceiveMode *ISO14443B_TRANSPARENT NS_SWIFT_NAME(ISO14443B_TRANSPARENT);
+ (ComStSt25sdkRFReaderInterface_TransceiveMode * __nonnull)NORMAL;

+ (ComStSt25sdkRFReaderInterface_TransceiveMode * __nonnull)SILENT;

+ (ComStSt25sdkRFReaderInterface_TransceiveMode * __nonnull)EVAL;

+ (ComStSt25sdkRFReaderInterface_TransceiveMode * __nonnull)EVAL_RECORD;

+ (ComStSt25sdkRFReaderInterface_TransceiveMode * __nonnull)RECORD;

+ (ComStSt25sdkRFReaderInterface_TransceiveMode * __nonnull)ISO14443A_TRANSPARENT;

+ (ComStSt25sdkRFReaderInterface_TransceiveMode * __nonnull)ISO14443B_TRANSPARENT;

#pragma mark Public

+ (ComStSt25sdkRFReaderInterface_TransceiveMode *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (ComStSt25sdkRFReaderInterface_TransceiveMode_Enum)toNSEnum;

@end

J2OBJC_STATIC_INIT(ComStSt25sdkRFReaderInterface_TransceiveMode)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT ComStSt25sdkRFReaderInterface_TransceiveMode *ComStSt25sdkRFReaderInterface_TransceiveMode_values_[];

inline ComStSt25sdkRFReaderInterface_TransceiveMode *ComStSt25sdkRFReaderInterface_TransceiveMode_get_NORMAL(void);
J2OBJC_ENUM_CONSTANT(ComStSt25sdkRFReaderInterface_TransceiveMode, NORMAL)

inline ComStSt25sdkRFReaderInterface_TransceiveMode *ComStSt25sdkRFReaderInterface_TransceiveMode_get_SILENT(void);
J2OBJC_ENUM_CONSTANT(ComStSt25sdkRFReaderInterface_TransceiveMode, SILENT)

inline ComStSt25sdkRFReaderInterface_TransceiveMode *ComStSt25sdkRFReaderInterface_TransceiveMode_get_EVAL(void);
J2OBJC_ENUM_CONSTANT(ComStSt25sdkRFReaderInterface_TransceiveMode, EVAL)

inline ComStSt25sdkRFReaderInterface_TransceiveMode *ComStSt25sdkRFReaderInterface_TransceiveMode_get_EVAL_RECORD(void);
J2OBJC_ENUM_CONSTANT(ComStSt25sdkRFReaderInterface_TransceiveMode, EVAL_RECORD)

inline ComStSt25sdkRFReaderInterface_TransceiveMode *ComStSt25sdkRFReaderInterface_TransceiveMode_get_RECORD(void);
J2OBJC_ENUM_CONSTANT(ComStSt25sdkRFReaderInterface_TransceiveMode, RECORD)

inline ComStSt25sdkRFReaderInterface_TransceiveMode *ComStSt25sdkRFReaderInterface_TransceiveMode_get_ISO14443A_TRANSPARENT(void);
J2OBJC_ENUM_CONSTANT(ComStSt25sdkRFReaderInterface_TransceiveMode, ISO14443A_TRANSPARENT)

inline ComStSt25sdkRFReaderInterface_TransceiveMode *ComStSt25sdkRFReaderInterface_TransceiveMode_get_ISO14443B_TRANSPARENT(void);
J2OBJC_ENUM_CONSTANT(ComStSt25sdkRFReaderInterface_TransceiveMode, ISO14443B_TRANSPARENT)

FOUNDATION_EXPORT IOSObjectArray *ComStSt25sdkRFReaderInterface_TransceiveMode_values(void);

FOUNDATION_EXPORT ComStSt25sdkRFReaderInterface_TransceiveMode *ComStSt25sdkRFReaderInterface_TransceiveMode_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT ComStSt25sdkRFReaderInterface_TransceiveMode *ComStSt25sdkRFReaderInterface_TransceiveMode_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(ComStSt25sdkRFReaderInterface_TransceiveMode)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComStSt25sdkRFReaderInterface")
