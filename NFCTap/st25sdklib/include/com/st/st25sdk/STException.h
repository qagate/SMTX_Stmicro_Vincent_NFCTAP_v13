//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: st25sdk_ios/STException.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComStSt25sdkSTException")
#ifdef RESTRICT_ComStSt25sdkSTException
#define INCLUDE_ALL_ComStSt25sdkSTException 0
#else
#define INCLUDE_ALL_ComStSt25sdkSTException 1
#endif
#undef RESTRICT_ComStSt25sdkSTException

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComStSt25sdkSTException_) && (INCLUDE_ALL_ComStSt25sdkSTException || defined(INCLUDE_ComStSt25sdkSTException))
#define ComStSt25sdkSTException_

#define RESTRICT_JavaLangThrowable 1
#define INCLUDE_JavaLangThrowable 1
#include "java/lang/Throwable.h"

@class ComStSt25sdkSTException_STExceptionCode;
@class IOSByteArray;
@class JavaLangException;

@interface ComStSt25sdkSTException : JavaLangThrowable {
 @public
  JavaLangException *mException_;
}

#pragma mark Public

- (instancetype __nonnull)initWithJavaLangException:(JavaLangException *)e;

- (instancetype __nonnull)initWithComStSt25sdkSTException_STExceptionCode:(ComStSt25sdkSTException_STExceptionCode *)errorCode;

- (instancetype __nonnull)initWithComStSt25sdkSTException_STExceptionCode:(ComStSt25sdkSTException_STExceptionCode *)errorCode
                                                            withByteArray:(IOSByteArray *)errorData;

- (instancetype __nonnull)initWithNSString:(NSString *)msg;

- (ComStSt25sdkSTException_STExceptionCode *)getError;

- (IOSByteArray *)getErrorData;

- (NSString *)getMessage;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

- (instancetype __nonnull)initWithJavaLangThrowable:(JavaLangThrowable *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithNSString:(NSString *)arg0
                     withJavaLangThrowable:(JavaLangThrowable *)arg1 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithNSString:(NSString *)arg0
                     withJavaLangThrowable:(JavaLangThrowable *)arg1
                               withBoolean:(jboolean)arg2
                               withBoolean:(jboolean)arg3 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComStSt25sdkSTException)

J2OBJC_FIELD_SETTER(ComStSt25sdkSTException, mException_, JavaLangException *)

FOUNDATION_EXPORT void ComStSt25sdkSTException_initWithNSString_(ComStSt25sdkSTException *self, NSString *msg);

FOUNDATION_EXPORT ComStSt25sdkSTException *new_ComStSt25sdkSTException_initWithNSString_(NSString *msg) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComStSt25sdkSTException *create_ComStSt25sdkSTException_initWithNSString_(NSString *msg);

FOUNDATION_EXPORT void ComStSt25sdkSTException_initWithJavaLangException_(ComStSt25sdkSTException *self, JavaLangException *e);

FOUNDATION_EXPORT ComStSt25sdkSTException *new_ComStSt25sdkSTException_initWithJavaLangException_(JavaLangException *e) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComStSt25sdkSTException *create_ComStSt25sdkSTException_initWithJavaLangException_(JavaLangException *e);

FOUNDATION_EXPORT void ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_(ComStSt25sdkSTException *self, ComStSt25sdkSTException_STExceptionCode *errorCode);

FOUNDATION_EXPORT ComStSt25sdkSTException *new_ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_(ComStSt25sdkSTException_STExceptionCode *errorCode) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComStSt25sdkSTException *create_ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_(ComStSt25sdkSTException_STExceptionCode *errorCode);

FOUNDATION_EXPORT void ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_withByteArray_(ComStSt25sdkSTException *self, ComStSt25sdkSTException_STExceptionCode *errorCode, IOSByteArray *errorData);

FOUNDATION_EXPORT ComStSt25sdkSTException *new_ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_withByteArray_(ComStSt25sdkSTException_STExceptionCode *errorCode, IOSByteArray *errorData) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComStSt25sdkSTException *create_ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_withByteArray_(ComStSt25sdkSTException_STExceptionCode *errorCode, IOSByteArray *errorData);

J2OBJC_TYPE_LITERAL_HEADER(ComStSt25sdkSTException)

#endif

#if !defined (ComStSt25sdkSTException_STExceptionCode_) && (INCLUDE_ALL_ComStSt25sdkSTException || defined(INCLUDE_ComStSt25sdkSTException_STExceptionCode))
#define ComStSt25sdkSTException_STExceptionCode_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

@class IOSObjectArray;

typedef NS_ENUM(NSUInteger, ComStSt25sdkSTException_STExceptionCode_Enum) {
  ComStSt25sdkSTException_STExceptionCode_Enum_INVALID_ERROR_CODE = 0,
  ComStSt25sdkSTException_STExceptionCode_Enum_INVALID_DATA = 1,
  ComStSt25sdkSTException_STExceptionCode_Enum_INVALID_CCFILE = 2,
  ComStSt25sdkSTException_STExceptionCode_Enum_INVALID_NDEF_DATA = 3,
  ComStSt25sdkSTException_STExceptionCode_Enum_NDEF_MESSAGE_TOO_BIG = 4,
  ComStSt25sdkSTException_STExceptionCode_Enum_BAD_PARAMETER = 5,
  ComStSt25sdkSTException_STExceptionCode_Enum_TAG_CMD_CALLED_FROM_UI_THREAD = 6,
  ComStSt25sdkSTException_STExceptionCode_Enum_TAG_NOT_IN_THE_FIELD = 7,
  ComStSt25sdkSTException_STExceptionCode_Enum_CONFIG_PASSWORD_NEEDED = 8,
  ComStSt25sdkSTException_STExceptionCode_Enum_INVALID_BLOCK_ADDRESS = 9,
  ComStSt25sdkSTException_STExceptionCode_Enum_MEMORY_ALLOCATION_FAILURE = 10,
  ComStSt25sdkSTException_STExceptionCode_Enum_CMD_FAILED = 11,
  ComStSt25sdkSTException_STExceptionCode_Enum_FILE_EMPTY = 12,
  ComStSt25sdkSTException_STExceptionCode_Enum_CONNECTION_ERROR = 13,
  ComStSt25sdkSTException_STExceptionCode_Enum_NOT_IMPLEMENTED = 14,
  ComStSt25sdkSTException_STExceptionCode_Enum_NOT_SUPPORTED = 15,
  ComStSt25sdkSTException_STExceptionCode_Enum_CRC_ERROR = 16,
  ComStSt25sdkSTException_STExceptionCode_Enum_RFREADER_FAILURE = 17,
  ComStSt25sdkSTException_STExceptionCode_Enum_BLOCK_LOCKED = 18,
  ComStSt25sdkSTException_STExceptionCode_Enum_ISO15693_CMD_NOT_SUPPORTED = 19,
  ComStSt25sdkSTException_STExceptionCode_Enum_ISO15693_CMD_NOT_RECOGNIZED = 20,
  ComStSt25sdkSTException_STExceptionCode_Enum_ISO15693_CMD_OPTION_NOT_SUPPORTED = 21,
  ComStSt25sdkSTException_STExceptionCode_Enum_ISO15693_ERROR_WITH_NO_INFORMATION = 22,
  ComStSt25sdkSTException_STExceptionCode_Enum_ISO15693_BLOCK_NOT_AVAILABLE = 23,
  ComStSt25sdkSTException_STExceptionCode_Enum_ISO15693_BLOCK_ALREADY_LOCKED = 24,
  ComStSt25sdkSTException_STExceptionCode_Enum_ISO15693_BLOCK_IS_LOCKED = 25,
  ComStSt25sdkSTException_STExceptionCode_Enum_ISO15693_BLOCK_PROGRAMMING_FAILED = 26,
  ComStSt25sdkSTException_STExceptionCode_Enum_ISO15693_BLOCK_LOCKING_FAILED = 27,
  ComStSt25sdkSTException_STExceptionCode_Enum_ISO15693_BLOCK_PROTECTED = 28,
  ComStSt25sdkSTException_STExceptionCode_Enum_ISO15693_GENERIC_CRYPTOGRAPHIC_ERROR = 29,
  ComStSt25sdkSTException_STExceptionCode_Enum_RFREADER_NO_RESPONSE = 30,
  ComStSt25sdkSTException_STExceptionCode_Enum_INS_FIELD_NOT_SUPPORTED = 31,
  ComStSt25sdkSTException_STExceptionCode_Enum_CLASS_NOT_SUPPORTED = 32,
  ComStSt25sdkSTException_STExceptionCode_Enum_INVALID_P1_P2 = 33,
  ComStSt25sdkSTException_STExceptionCode_Enum_FILE_APPLICATION_NOT_SUPPORTED = 34,
  ComStSt25sdkSTException_STExceptionCode_Enum_INVALID_CMD_PARAM = 35,
  ComStSt25sdkSTException_STExceptionCode_Enum_INVALID_DATA_PARAM = 36,
  ComStSt25sdkSTException_STExceptionCode_Enum_DATA_NOT_USABLE = 37,
  ComStSt25sdkSTException_STExceptionCode_Enum_WRONG_SECURITY_STATUS = 38,
  ComStSt25sdkSTException_STExceptionCode_Enum_INVALID_CMD_FOR_FILE = 39,
  ComStSt25sdkSTException_STExceptionCode_Enum_INVALID_USE_CONTEXT = 40,
  ComStSt25sdkSTException_STExceptionCode_Enum_WRONG_LENGTH = 41,
  ComStSt25sdkSTException_STExceptionCode_Enum_UPDATE_ERROR = 42,
  ComStSt25sdkSTException_STExceptionCode_Enum_WRONG_PASSWORD = 43,
  ComStSt25sdkSTException_STExceptionCode_Enum_PASSWORD_NEEDED = 44,
  ComStSt25sdkSTException_STExceptionCode_Enum_EOF = 45,
  ComStSt25sdkSTException_STExceptionCode_Enum_FILE_OVERFLOW = 46,
  ComStSt25sdkSTException_STExceptionCode_Enum_UNKNOWN_ANSWER = 47,
  ComStSt25sdkSTException_STExceptionCode_Enum_NFC_TYPE2_NACK = 48,
  ComStSt25sdkSTException_STExceptionCode_Enum_NFC_TYPE2_WRONG_ACK_NACK = 49,
  ComStSt25sdkSTException_STExceptionCode_Enum_NFC_TYPE2_STATIC_LOCK_INVALID_VALUES = 50,
  ComStSt25sdkSTException_STExceptionCode_Enum_NFC_TYPE2_STATIC_LOCK_LOCKED = 51,
  ComStSt25sdkSTException_STExceptionCode_Enum_NFC_TYPE3_ERROR_OUT_OF_SCOPE = 52,
  ComStSt25sdkSTException_STExceptionCode_Enum_NFC_TYPE3_ERROR_RFU = 53,
  ComStSt25sdkSTException_STExceptionCode_Enum_NFC_TYPE3_ERROR_MEMORY_ERROR = 54,
  ComStSt25sdkSTException_STExceptionCode_Enum_NFC_TYPE3_ERROR_EXCESSIVE_WRITES = 55,
  ComStSt25sdkSTException_STExceptionCode_Enum_NFC_TYPE3_ERROR_PROPRIETARY_ERROR_CONDITIONS = 56,
  ComStSt25sdkSTException_STExceptionCode_Enum_NFC_TYPE3_NDEF_WRITE_NOT_FINISHED = 57,
  ComStSt25sdkSTException_STExceptionCode_Enum_PERMANENTLY_LOCKED = 58,
  ComStSt25sdkSTException_STExceptionCode_Enum_TRANSCEIVE_EVAL_MODE = 59,
  ComStSt25sdkSTException_STExceptionCode_Enum_IMPLEMENTED_IN_NDA_VERSION = 60,
  ComStSt25sdkSTException_STExceptionCode_Enum_MISSING_LIBRARY = 61,
  ComStSt25sdkSTException_STExceptionCode_Enum_OTP_MEMORY = 62,
};

@interface ComStSt25sdkSTException_STExceptionCode : JavaLangEnum

@property (readonly, class, nonnull) ComStSt25sdkSTException_STExceptionCode *INVALID_ERROR_CODE NS_SWIFT_NAME(INVALID_ERROR_CODE);
@property (readonly, class, nonnull) ComStSt25sdkSTException_STExceptionCode *INVALID_DATA NS_SWIFT_NAME(INVALID_DATA);
@property (readonly, class, nonnull) ComStSt25sdkSTException_STExceptionCode *INVALID_CCFILE NS_SWIFT_NAME(INVALID_CCFILE);
@property (readonly, class, nonnull) ComStSt25sdkSTException_STExceptionCode *INVALID_NDEF_DATA NS_SWIFT_NAME(INVALID_NDEF_DATA);
@property (readonly, class, nonnull) ComStSt25sdkSTException_STExceptionCode *NDEF_MESSAGE_TOO_BIG NS_SWIFT_NAME(NDEF_MESSAGE_TOO_BIG);
@property (readonly, class, nonnull) ComStSt25sdkSTException_STExceptionCode *BAD_PARAMETER NS_SWIFT_NAME(BAD_PARAMETER);
@property (readonly, class, nonnull) ComStSt25sdkSTException_STExceptionCode *TAG_CMD_CALLED_FROM_UI_THREAD NS_SWIFT_NAME(TAG_CMD_CALLED_FROM_UI_THREAD);
@property (readonly, class, nonnull) ComStSt25sdkSTException_STExceptionCode *TAG_NOT_IN_THE_FIELD NS_SWIFT_NAME(TAG_NOT_IN_THE_FIELD);
@property (readonly, class, nonnull) ComStSt25sdkSTException_STExceptionCode *CONFIG_PASSWORD_NEEDED NS_SWIFT_NAME(CONFIG_PASSWORD_NEEDED);
@property (readonly, class, nonnull) ComStSt25sdkSTException_STExceptionCode *INVALID_BLOCK_ADDRESS NS_SWIFT_NAME(INVALID_BLOCK_ADDRESS);
@property (readonly, class, nonnull) ComStSt25sdkSTException_STExceptionCode *MEMORY_ALLOCATION_FAILURE NS_SWIFT_NAME(MEMORY_ALLOCATION_FAILURE);
@property (readonly, class, nonnull) ComStSt25sdkSTException_STExceptionCode *CMD_FAILED NS_SWIFT_NAME(CMD_FAILED);
@property (readonly, class, nonnull) ComStSt25sdkSTException_STExceptionCode *FILE_EMPTY NS_SWIFT_NAME(FILE_EMPTY);
@property (readonly, class, nonnull) ComStSt25sdkSTException_STExceptionCode *CONNECTION_ERROR NS_SWIFT_NAME(CONNECTION_ERROR);
@property (readonly, class, nonnull) ComStSt25sdkSTException_STExceptionCode *NOT_IMPLEMENTED NS_SWIFT_NAME(NOT_IMPLEMENTED);
@property (readonly, class, nonnull) ComStSt25sdkSTException_STExceptionCode *NOT_SUPPORTED NS_SWIFT_NAME(NOT_SUPPORTED);
@property (readonly, class, nonnull) ComStSt25sdkSTException_STExceptionCode *CRC_ERROR NS_SWIFT_NAME(CRC_ERROR);
@property (readonly, class, nonnull) ComStSt25sdkSTException_STExceptionCode *RFREADER_FAILURE NS_SWIFT_NAME(RFREADER_FAILURE);
@property (readonly, class, nonnull) ComStSt25sdkSTException_STExceptionCode *BLOCK_LOCKED NS_SWIFT_NAME(BLOCK_LOCKED);
@property (readonly, class, nonnull) ComStSt25sdkSTException_STExceptionCode *ISO15693_CMD_NOT_SUPPORTED NS_SWIFT_NAME(ISO15693_CMD_NOT_SUPPORTED);
@property (readonly, class, nonnull) ComStSt25sdkSTException_STExceptionCode *ISO15693_CMD_NOT_RECOGNIZED NS_SWIFT_NAME(ISO15693_CMD_NOT_RECOGNIZED);
@property (readonly, class, nonnull) ComStSt25sdkSTException_STExceptionCode *ISO15693_CMD_OPTION_NOT_SUPPORTED NS_SWIFT_NAME(ISO15693_CMD_OPTION_NOT_SUPPORTED);
@property (readonly, class, nonnull) ComStSt25sdkSTException_STExceptionCode *ISO15693_ERROR_WITH_NO_INFORMATION NS_SWIFT_NAME(ISO15693_ERROR_WITH_NO_INFORMATION);
@property (readonly, class, nonnull) ComStSt25sdkSTException_STExceptionCode *ISO15693_BLOCK_NOT_AVAILABLE NS_SWIFT_NAME(ISO15693_BLOCK_NOT_AVAILABLE);
@property (readonly, class, nonnull) ComStSt25sdkSTException_STExceptionCode *ISO15693_BLOCK_ALREADY_LOCKED NS_SWIFT_NAME(ISO15693_BLOCK_ALREADY_LOCKED);
@property (readonly, class, nonnull) ComStSt25sdkSTException_STExceptionCode *ISO15693_BLOCK_IS_LOCKED NS_SWIFT_NAME(ISO15693_BLOCK_IS_LOCKED);
@property (readonly, class, nonnull) ComStSt25sdkSTException_STExceptionCode *ISO15693_BLOCK_PROGRAMMING_FAILED NS_SWIFT_NAME(ISO15693_BLOCK_PROGRAMMING_FAILED);
@property (readonly, class, nonnull) ComStSt25sdkSTException_STExceptionCode *ISO15693_BLOCK_LOCKING_FAILED NS_SWIFT_NAME(ISO15693_BLOCK_LOCKING_FAILED);
@property (readonly, class, nonnull) ComStSt25sdkSTException_STExceptionCode *ISO15693_BLOCK_PROTECTED NS_SWIFT_NAME(ISO15693_BLOCK_PROTECTED);
@property (readonly, class, nonnull) ComStSt25sdkSTException_STExceptionCode *ISO15693_GENERIC_CRYPTOGRAPHIC_ERROR NS_SWIFT_NAME(ISO15693_GENERIC_CRYPTOGRAPHIC_ERROR);
@property (readonly, class, nonnull) ComStSt25sdkSTException_STExceptionCode *RFREADER_NO_RESPONSE NS_SWIFT_NAME(RFREADER_NO_RESPONSE);
@property (readonly, class, nonnull) ComStSt25sdkSTException_STExceptionCode *INS_FIELD_NOT_SUPPORTED NS_SWIFT_NAME(INS_FIELD_NOT_SUPPORTED);
@property (readonly, class, nonnull) ComStSt25sdkSTException_STExceptionCode *CLASS_NOT_SUPPORTED NS_SWIFT_NAME(CLASS_NOT_SUPPORTED);
@property (readonly, class, nonnull) ComStSt25sdkSTException_STExceptionCode *INVALID_P1_P2 NS_SWIFT_NAME(INVALID_P1_P2);
@property (readonly, class, nonnull) ComStSt25sdkSTException_STExceptionCode *FILE_APPLICATION_NOT_SUPPORTED NS_SWIFT_NAME(FILE_APPLICATION_NOT_SUPPORTED);
@property (readonly, class, nonnull) ComStSt25sdkSTException_STExceptionCode *INVALID_CMD_PARAM NS_SWIFT_NAME(INVALID_CMD_PARAM);
@property (readonly, class, nonnull) ComStSt25sdkSTException_STExceptionCode *INVALID_DATA_PARAM NS_SWIFT_NAME(INVALID_DATA_PARAM);
@property (readonly, class, nonnull) ComStSt25sdkSTException_STExceptionCode *DATA_NOT_USABLE NS_SWIFT_NAME(DATA_NOT_USABLE);
@property (readonly, class, nonnull) ComStSt25sdkSTException_STExceptionCode *WRONG_SECURITY_STATUS NS_SWIFT_NAME(WRONG_SECURITY_STATUS);
@property (readonly, class, nonnull) ComStSt25sdkSTException_STExceptionCode *INVALID_CMD_FOR_FILE NS_SWIFT_NAME(INVALID_CMD_FOR_FILE);
@property (readonly, class, nonnull) ComStSt25sdkSTException_STExceptionCode *INVALID_USE_CONTEXT NS_SWIFT_NAME(INVALID_USE_CONTEXT);
@property (readonly, class, nonnull) ComStSt25sdkSTException_STExceptionCode *WRONG_LENGTH NS_SWIFT_NAME(WRONG_LENGTH);
@property (readonly, class, nonnull) ComStSt25sdkSTException_STExceptionCode *UPDATE_ERROR NS_SWIFT_NAME(UPDATE_ERROR);
@property (readonly, class, nonnull) ComStSt25sdkSTException_STExceptionCode *WRONG_PASSWORD NS_SWIFT_NAME(WRONG_PASSWORD);
@property (readonly, class, nonnull) ComStSt25sdkSTException_STExceptionCode *PASSWORD_NEEDED NS_SWIFT_NAME(PASSWORD_NEEDED);
@property (readonly, class, nonnull) ComStSt25sdkSTException_STExceptionCode *EOF_ NS_SWIFT_NAME(EOF_);
@property (readonly, class, nonnull) ComStSt25sdkSTException_STExceptionCode *FILE_OVERFLOW NS_SWIFT_NAME(FILE_OVERFLOW);
@property (readonly, class, nonnull) ComStSt25sdkSTException_STExceptionCode *UNKNOWN_ANSWER NS_SWIFT_NAME(UNKNOWN_ANSWER);
@property (readonly, class, nonnull) ComStSt25sdkSTException_STExceptionCode *NFC_TYPE2_NACK NS_SWIFT_NAME(NFC_TYPE2_NACK);
@property (readonly, class, nonnull) ComStSt25sdkSTException_STExceptionCode *NFC_TYPE2_WRONG_ACK_NACK NS_SWIFT_NAME(NFC_TYPE2_WRONG_ACK_NACK);
@property (readonly, class, nonnull) ComStSt25sdkSTException_STExceptionCode *NFC_TYPE2_STATIC_LOCK_INVALID_VALUES NS_SWIFT_NAME(NFC_TYPE2_STATIC_LOCK_INVALID_VALUES);
@property (readonly, class, nonnull) ComStSt25sdkSTException_STExceptionCode *NFC_TYPE2_STATIC_LOCK_LOCKED NS_SWIFT_NAME(NFC_TYPE2_STATIC_LOCK_LOCKED);
@property (readonly, class, nonnull) ComStSt25sdkSTException_STExceptionCode *NFC_TYPE3_ERROR_OUT_OF_SCOPE NS_SWIFT_NAME(NFC_TYPE3_ERROR_OUT_OF_SCOPE);
@property (readonly, class, nonnull) ComStSt25sdkSTException_STExceptionCode *NFC_TYPE3_ERROR_RFU NS_SWIFT_NAME(NFC_TYPE3_ERROR_RFU);
@property (readonly, class, nonnull) ComStSt25sdkSTException_STExceptionCode *NFC_TYPE3_ERROR_MEMORY_ERROR NS_SWIFT_NAME(NFC_TYPE3_ERROR_MEMORY_ERROR);
@property (readonly, class, nonnull) ComStSt25sdkSTException_STExceptionCode *NFC_TYPE3_ERROR_EXCESSIVE_WRITES NS_SWIFT_NAME(NFC_TYPE3_ERROR_EXCESSIVE_WRITES);
@property (readonly, class, nonnull) ComStSt25sdkSTException_STExceptionCode *NFC_TYPE3_ERROR_PROPRIETARY_ERROR_CONDITIONS NS_SWIFT_NAME(NFC_TYPE3_ERROR_PROPRIETARY_ERROR_CONDITIONS);
@property (readonly, class, nonnull) ComStSt25sdkSTException_STExceptionCode *NFC_TYPE3_NDEF_WRITE_NOT_FINISHED NS_SWIFT_NAME(NFC_TYPE3_NDEF_WRITE_NOT_FINISHED);
@property (readonly, class, nonnull) ComStSt25sdkSTException_STExceptionCode *PERMANENTLY_LOCKED NS_SWIFT_NAME(PERMANENTLY_LOCKED);
@property (readonly, class, nonnull) ComStSt25sdkSTException_STExceptionCode *TRANSCEIVE_EVAL_MODE NS_SWIFT_NAME(TRANSCEIVE_EVAL_MODE);
@property (readonly, class, nonnull) ComStSt25sdkSTException_STExceptionCode *IMPLEMENTED_IN_NDA_VERSION NS_SWIFT_NAME(IMPLEMENTED_IN_NDA_VERSION);
@property (readonly, class, nonnull) ComStSt25sdkSTException_STExceptionCode *MISSING_LIBRARY NS_SWIFT_NAME(MISSING_LIBRARY);
@property (readonly, class, nonnull) ComStSt25sdkSTException_STExceptionCode *OTP_MEMORY NS_SWIFT_NAME(OTP_MEMORY);
+ (ComStSt25sdkSTException_STExceptionCode * __nonnull)INVALID_ERROR_CODE;

+ (ComStSt25sdkSTException_STExceptionCode * __nonnull)INVALID_DATA;

+ (ComStSt25sdkSTException_STExceptionCode * __nonnull)INVALID_CCFILE;

+ (ComStSt25sdkSTException_STExceptionCode * __nonnull)INVALID_NDEF_DATA;

+ (ComStSt25sdkSTException_STExceptionCode * __nonnull)NDEF_MESSAGE_TOO_BIG;

+ (ComStSt25sdkSTException_STExceptionCode * __nonnull)BAD_PARAMETER;

+ (ComStSt25sdkSTException_STExceptionCode * __nonnull)TAG_CMD_CALLED_FROM_UI_THREAD;

+ (ComStSt25sdkSTException_STExceptionCode * __nonnull)TAG_NOT_IN_THE_FIELD;

+ (ComStSt25sdkSTException_STExceptionCode * __nonnull)CONFIG_PASSWORD_NEEDED;

+ (ComStSt25sdkSTException_STExceptionCode * __nonnull)INVALID_BLOCK_ADDRESS;

+ (ComStSt25sdkSTException_STExceptionCode * __nonnull)MEMORY_ALLOCATION_FAILURE;

+ (ComStSt25sdkSTException_STExceptionCode * __nonnull)CMD_FAILED;

+ (ComStSt25sdkSTException_STExceptionCode * __nonnull)FILE_EMPTY;

+ (ComStSt25sdkSTException_STExceptionCode * __nonnull)CONNECTION_ERROR;

+ (ComStSt25sdkSTException_STExceptionCode * __nonnull)NOT_IMPLEMENTED;

+ (ComStSt25sdkSTException_STExceptionCode * __nonnull)NOT_SUPPORTED;

+ (ComStSt25sdkSTException_STExceptionCode * __nonnull)CRC_ERROR;

+ (ComStSt25sdkSTException_STExceptionCode * __nonnull)RFREADER_FAILURE;

+ (ComStSt25sdkSTException_STExceptionCode * __nonnull)BLOCK_LOCKED;

+ (ComStSt25sdkSTException_STExceptionCode * __nonnull)ISO15693_CMD_NOT_SUPPORTED;

+ (ComStSt25sdkSTException_STExceptionCode * __nonnull)ISO15693_CMD_NOT_RECOGNIZED;

+ (ComStSt25sdkSTException_STExceptionCode * __nonnull)ISO15693_CMD_OPTION_NOT_SUPPORTED;

+ (ComStSt25sdkSTException_STExceptionCode * __nonnull)ISO15693_ERROR_WITH_NO_INFORMATION;

+ (ComStSt25sdkSTException_STExceptionCode * __nonnull)ISO15693_BLOCK_NOT_AVAILABLE;

+ (ComStSt25sdkSTException_STExceptionCode * __nonnull)ISO15693_BLOCK_ALREADY_LOCKED;

+ (ComStSt25sdkSTException_STExceptionCode * __nonnull)ISO15693_BLOCK_IS_LOCKED;

+ (ComStSt25sdkSTException_STExceptionCode * __nonnull)ISO15693_BLOCK_PROGRAMMING_FAILED;

+ (ComStSt25sdkSTException_STExceptionCode * __nonnull)ISO15693_BLOCK_LOCKING_FAILED;

+ (ComStSt25sdkSTException_STExceptionCode * __nonnull)ISO15693_BLOCK_PROTECTED;

+ (ComStSt25sdkSTException_STExceptionCode * __nonnull)ISO15693_GENERIC_CRYPTOGRAPHIC_ERROR;

+ (ComStSt25sdkSTException_STExceptionCode * __nonnull)RFREADER_NO_RESPONSE;

+ (ComStSt25sdkSTException_STExceptionCode * __nonnull)INS_FIELD_NOT_SUPPORTED;

+ (ComStSt25sdkSTException_STExceptionCode * __nonnull)CLASS_NOT_SUPPORTED;

+ (ComStSt25sdkSTException_STExceptionCode * __nonnull)INVALID_P1_P2;

+ (ComStSt25sdkSTException_STExceptionCode * __nonnull)FILE_APPLICATION_NOT_SUPPORTED;

+ (ComStSt25sdkSTException_STExceptionCode * __nonnull)INVALID_CMD_PARAM;

+ (ComStSt25sdkSTException_STExceptionCode * __nonnull)INVALID_DATA_PARAM;

+ (ComStSt25sdkSTException_STExceptionCode * __nonnull)DATA_NOT_USABLE;

+ (ComStSt25sdkSTException_STExceptionCode * __nonnull)WRONG_SECURITY_STATUS;

+ (ComStSt25sdkSTException_STExceptionCode * __nonnull)INVALID_CMD_FOR_FILE;

+ (ComStSt25sdkSTException_STExceptionCode * __nonnull)INVALID_USE_CONTEXT;

+ (ComStSt25sdkSTException_STExceptionCode * __nonnull)WRONG_LENGTH;

+ (ComStSt25sdkSTException_STExceptionCode * __nonnull)UPDATE_ERROR;

+ (ComStSt25sdkSTException_STExceptionCode * __nonnull)WRONG_PASSWORD;

+ (ComStSt25sdkSTException_STExceptionCode * __nonnull)PASSWORD_NEEDED;

+ (ComStSt25sdkSTException_STExceptionCode * __nonnull)EOF_;

+ (ComStSt25sdkSTException_STExceptionCode * __nonnull)FILE_OVERFLOW;

+ (ComStSt25sdkSTException_STExceptionCode * __nonnull)UNKNOWN_ANSWER;

+ (ComStSt25sdkSTException_STExceptionCode * __nonnull)NFC_TYPE2_NACK;

+ (ComStSt25sdkSTException_STExceptionCode * __nonnull)NFC_TYPE2_WRONG_ACK_NACK;

+ (ComStSt25sdkSTException_STExceptionCode * __nonnull)NFC_TYPE2_STATIC_LOCK_INVALID_VALUES;

+ (ComStSt25sdkSTException_STExceptionCode * __nonnull)NFC_TYPE2_STATIC_LOCK_LOCKED;

+ (ComStSt25sdkSTException_STExceptionCode * __nonnull)NFC_TYPE3_ERROR_OUT_OF_SCOPE;

+ (ComStSt25sdkSTException_STExceptionCode * __nonnull)NFC_TYPE3_ERROR_RFU;

+ (ComStSt25sdkSTException_STExceptionCode * __nonnull)NFC_TYPE3_ERROR_MEMORY_ERROR;

+ (ComStSt25sdkSTException_STExceptionCode * __nonnull)NFC_TYPE3_ERROR_EXCESSIVE_WRITES;

+ (ComStSt25sdkSTException_STExceptionCode * __nonnull)NFC_TYPE3_ERROR_PROPRIETARY_ERROR_CONDITIONS;

+ (ComStSt25sdkSTException_STExceptionCode * __nonnull)NFC_TYPE3_NDEF_WRITE_NOT_FINISHED;

+ (ComStSt25sdkSTException_STExceptionCode * __nonnull)PERMANENTLY_LOCKED;

+ (ComStSt25sdkSTException_STExceptionCode * __nonnull)TRANSCEIVE_EVAL_MODE;

+ (ComStSt25sdkSTException_STExceptionCode * __nonnull)IMPLEMENTED_IN_NDA_VERSION;

+ (ComStSt25sdkSTException_STExceptionCode * __nonnull)MISSING_LIBRARY;

+ (ComStSt25sdkSTException_STExceptionCode * __nonnull)OTP_MEMORY;

#pragma mark Public

+ (ComStSt25sdkSTException_STExceptionCode *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (ComStSt25sdkSTException_STExceptionCode_Enum)toNSEnum;

@end

J2OBJC_STATIC_INIT(ComStSt25sdkSTException_STExceptionCode)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT ComStSt25sdkSTException_STExceptionCode *ComStSt25sdkSTException_STExceptionCode_values_[];

inline ComStSt25sdkSTException_STExceptionCode *ComStSt25sdkSTException_STExceptionCode_get_INVALID_ERROR_CODE(void);
J2OBJC_ENUM_CONSTANT(ComStSt25sdkSTException_STExceptionCode, INVALID_ERROR_CODE)

inline ComStSt25sdkSTException_STExceptionCode *ComStSt25sdkSTException_STExceptionCode_get_INVALID_DATA(void);
J2OBJC_ENUM_CONSTANT(ComStSt25sdkSTException_STExceptionCode, INVALID_DATA)

inline ComStSt25sdkSTException_STExceptionCode *ComStSt25sdkSTException_STExceptionCode_get_INVALID_CCFILE(void);
J2OBJC_ENUM_CONSTANT(ComStSt25sdkSTException_STExceptionCode, INVALID_CCFILE)

inline ComStSt25sdkSTException_STExceptionCode *ComStSt25sdkSTException_STExceptionCode_get_INVALID_NDEF_DATA(void);
J2OBJC_ENUM_CONSTANT(ComStSt25sdkSTException_STExceptionCode, INVALID_NDEF_DATA)

inline ComStSt25sdkSTException_STExceptionCode *ComStSt25sdkSTException_STExceptionCode_get_NDEF_MESSAGE_TOO_BIG(void);
J2OBJC_ENUM_CONSTANT(ComStSt25sdkSTException_STExceptionCode, NDEF_MESSAGE_TOO_BIG)

inline ComStSt25sdkSTException_STExceptionCode *ComStSt25sdkSTException_STExceptionCode_get_BAD_PARAMETER(void);
J2OBJC_ENUM_CONSTANT(ComStSt25sdkSTException_STExceptionCode, BAD_PARAMETER)

inline ComStSt25sdkSTException_STExceptionCode *ComStSt25sdkSTException_STExceptionCode_get_TAG_CMD_CALLED_FROM_UI_THREAD(void);
J2OBJC_ENUM_CONSTANT(ComStSt25sdkSTException_STExceptionCode, TAG_CMD_CALLED_FROM_UI_THREAD)

inline ComStSt25sdkSTException_STExceptionCode *ComStSt25sdkSTException_STExceptionCode_get_TAG_NOT_IN_THE_FIELD(void);
J2OBJC_ENUM_CONSTANT(ComStSt25sdkSTException_STExceptionCode, TAG_NOT_IN_THE_FIELD)

inline ComStSt25sdkSTException_STExceptionCode *ComStSt25sdkSTException_STExceptionCode_get_CONFIG_PASSWORD_NEEDED(void);
J2OBJC_ENUM_CONSTANT(ComStSt25sdkSTException_STExceptionCode, CONFIG_PASSWORD_NEEDED)

inline ComStSt25sdkSTException_STExceptionCode *ComStSt25sdkSTException_STExceptionCode_get_INVALID_BLOCK_ADDRESS(void);
J2OBJC_ENUM_CONSTANT(ComStSt25sdkSTException_STExceptionCode, INVALID_BLOCK_ADDRESS)

inline ComStSt25sdkSTException_STExceptionCode *ComStSt25sdkSTException_STExceptionCode_get_MEMORY_ALLOCATION_FAILURE(void);
J2OBJC_ENUM_CONSTANT(ComStSt25sdkSTException_STExceptionCode, MEMORY_ALLOCATION_FAILURE)

inline ComStSt25sdkSTException_STExceptionCode *ComStSt25sdkSTException_STExceptionCode_get_CMD_FAILED(void);
J2OBJC_ENUM_CONSTANT(ComStSt25sdkSTException_STExceptionCode, CMD_FAILED)

inline ComStSt25sdkSTException_STExceptionCode *ComStSt25sdkSTException_STExceptionCode_get_FILE_EMPTY(void);
J2OBJC_ENUM_CONSTANT(ComStSt25sdkSTException_STExceptionCode, FILE_EMPTY)

inline ComStSt25sdkSTException_STExceptionCode *ComStSt25sdkSTException_STExceptionCode_get_CONNECTION_ERROR(void);
J2OBJC_ENUM_CONSTANT(ComStSt25sdkSTException_STExceptionCode, CONNECTION_ERROR)

inline ComStSt25sdkSTException_STExceptionCode *ComStSt25sdkSTException_STExceptionCode_get_NOT_IMPLEMENTED(void);
J2OBJC_ENUM_CONSTANT(ComStSt25sdkSTException_STExceptionCode, NOT_IMPLEMENTED)

inline ComStSt25sdkSTException_STExceptionCode *ComStSt25sdkSTException_STExceptionCode_get_NOT_SUPPORTED(void);
J2OBJC_ENUM_CONSTANT(ComStSt25sdkSTException_STExceptionCode, NOT_SUPPORTED)

inline ComStSt25sdkSTException_STExceptionCode *ComStSt25sdkSTException_STExceptionCode_get_CRC_ERROR(void);
J2OBJC_ENUM_CONSTANT(ComStSt25sdkSTException_STExceptionCode, CRC_ERROR)

inline ComStSt25sdkSTException_STExceptionCode *ComStSt25sdkSTException_STExceptionCode_get_RFREADER_FAILURE(void);
J2OBJC_ENUM_CONSTANT(ComStSt25sdkSTException_STExceptionCode, RFREADER_FAILURE)

inline ComStSt25sdkSTException_STExceptionCode *ComStSt25sdkSTException_STExceptionCode_get_BLOCK_LOCKED(void);
J2OBJC_ENUM_CONSTANT(ComStSt25sdkSTException_STExceptionCode, BLOCK_LOCKED)

inline ComStSt25sdkSTException_STExceptionCode *ComStSt25sdkSTException_STExceptionCode_get_ISO15693_CMD_NOT_SUPPORTED(void);
J2OBJC_ENUM_CONSTANT(ComStSt25sdkSTException_STExceptionCode, ISO15693_CMD_NOT_SUPPORTED)

inline ComStSt25sdkSTException_STExceptionCode *ComStSt25sdkSTException_STExceptionCode_get_ISO15693_CMD_NOT_RECOGNIZED(void);
J2OBJC_ENUM_CONSTANT(ComStSt25sdkSTException_STExceptionCode, ISO15693_CMD_NOT_RECOGNIZED)

inline ComStSt25sdkSTException_STExceptionCode *ComStSt25sdkSTException_STExceptionCode_get_ISO15693_CMD_OPTION_NOT_SUPPORTED(void);
J2OBJC_ENUM_CONSTANT(ComStSt25sdkSTException_STExceptionCode, ISO15693_CMD_OPTION_NOT_SUPPORTED)

inline ComStSt25sdkSTException_STExceptionCode *ComStSt25sdkSTException_STExceptionCode_get_ISO15693_ERROR_WITH_NO_INFORMATION(void);
J2OBJC_ENUM_CONSTANT(ComStSt25sdkSTException_STExceptionCode, ISO15693_ERROR_WITH_NO_INFORMATION)

inline ComStSt25sdkSTException_STExceptionCode *ComStSt25sdkSTException_STExceptionCode_get_ISO15693_BLOCK_NOT_AVAILABLE(void);
J2OBJC_ENUM_CONSTANT(ComStSt25sdkSTException_STExceptionCode, ISO15693_BLOCK_NOT_AVAILABLE)

inline ComStSt25sdkSTException_STExceptionCode *ComStSt25sdkSTException_STExceptionCode_get_ISO15693_BLOCK_ALREADY_LOCKED(void);
J2OBJC_ENUM_CONSTANT(ComStSt25sdkSTException_STExceptionCode, ISO15693_BLOCK_ALREADY_LOCKED)

inline ComStSt25sdkSTException_STExceptionCode *ComStSt25sdkSTException_STExceptionCode_get_ISO15693_BLOCK_IS_LOCKED(void);
J2OBJC_ENUM_CONSTANT(ComStSt25sdkSTException_STExceptionCode, ISO15693_BLOCK_IS_LOCKED)

inline ComStSt25sdkSTException_STExceptionCode *ComStSt25sdkSTException_STExceptionCode_get_ISO15693_BLOCK_PROGRAMMING_FAILED(void);
J2OBJC_ENUM_CONSTANT(ComStSt25sdkSTException_STExceptionCode, ISO15693_BLOCK_PROGRAMMING_FAILED)

inline ComStSt25sdkSTException_STExceptionCode *ComStSt25sdkSTException_STExceptionCode_get_ISO15693_BLOCK_LOCKING_FAILED(void);
J2OBJC_ENUM_CONSTANT(ComStSt25sdkSTException_STExceptionCode, ISO15693_BLOCK_LOCKING_FAILED)

inline ComStSt25sdkSTException_STExceptionCode *ComStSt25sdkSTException_STExceptionCode_get_ISO15693_BLOCK_PROTECTED(void);
J2OBJC_ENUM_CONSTANT(ComStSt25sdkSTException_STExceptionCode, ISO15693_BLOCK_PROTECTED)

inline ComStSt25sdkSTException_STExceptionCode *ComStSt25sdkSTException_STExceptionCode_get_ISO15693_GENERIC_CRYPTOGRAPHIC_ERROR(void);
J2OBJC_ENUM_CONSTANT(ComStSt25sdkSTException_STExceptionCode, ISO15693_GENERIC_CRYPTOGRAPHIC_ERROR)

inline ComStSt25sdkSTException_STExceptionCode *ComStSt25sdkSTException_STExceptionCode_get_RFREADER_NO_RESPONSE(void);
J2OBJC_ENUM_CONSTANT(ComStSt25sdkSTException_STExceptionCode, RFREADER_NO_RESPONSE)

inline ComStSt25sdkSTException_STExceptionCode *ComStSt25sdkSTException_STExceptionCode_get_INS_FIELD_NOT_SUPPORTED(void);
J2OBJC_ENUM_CONSTANT(ComStSt25sdkSTException_STExceptionCode, INS_FIELD_NOT_SUPPORTED)

inline ComStSt25sdkSTException_STExceptionCode *ComStSt25sdkSTException_STExceptionCode_get_CLASS_NOT_SUPPORTED(void);
J2OBJC_ENUM_CONSTANT(ComStSt25sdkSTException_STExceptionCode, CLASS_NOT_SUPPORTED)

inline ComStSt25sdkSTException_STExceptionCode *ComStSt25sdkSTException_STExceptionCode_get_INVALID_P1_P2(void);
J2OBJC_ENUM_CONSTANT(ComStSt25sdkSTException_STExceptionCode, INVALID_P1_P2)

inline ComStSt25sdkSTException_STExceptionCode *ComStSt25sdkSTException_STExceptionCode_get_FILE_APPLICATION_NOT_SUPPORTED(void);
J2OBJC_ENUM_CONSTANT(ComStSt25sdkSTException_STExceptionCode, FILE_APPLICATION_NOT_SUPPORTED)

inline ComStSt25sdkSTException_STExceptionCode *ComStSt25sdkSTException_STExceptionCode_get_INVALID_CMD_PARAM(void);
J2OBJC_ENUM_CONSTANT(ComStSt25sdkSTException_STExceptionCode, INVALID_CMD_PARAM)

inline ComStSt25sdkSTException_STExceptionCode *ComStSt25sdkSTException_STExceptionCode_get_INVALID_DATA_PARAM(void);
J2OBJC_ENUM_CONSTANT(ComStSt25sdkSTException_STExceptionCode, INVALID_DATA_PARAM)

inline ComStSt25sdkSTException_STExceptionCode *ComStSt25sdkSTException_STExceptionCode_get_DATA_NOT_USABLE(void);
J2OBJC_ENUM_CONSTANT(ComStSt25sdkSTException_STExceptionCode, DATA_NOT_USABLE)

inline ComStSt25sdkSTException_STExceptionCode *ComStSt25sdkSTException_STExceptionCode_get_WRONG_SECURITY_STATUS(void);
J2OBJC_ENUM_CONSTANT(ComStSt25sdkSTException_STExceptionCode, WRONG_SECURITY_STATUS)

inline ComStSt25sdkSTException_STExceptionCode *ComStSt25sdkSTException_STExceptionCode_get_INVALID_CMD_FOR_FILE(void);
J2OBJC_ENUM_CONSTANT(ComStSt25sdkSTException_STExceptionCode, INVALID_CMD_FOR_FILE)

inline ComStSt25sdkSTException_STExceptionCode *ComStSt25sdkSTException_STExceptionCode_get_INVALID_USE_CONTEXT(void);
J2OBJC_ENUM_CONSTANT(ComStSt25sdkSTException_STExceptionCode, INVALID_USE_CONTEXT)

inline ComStSt25sdkSTException_STExceptionCode *ComStSt25sdkSTException_STExceptionCode_get_WRONG_LENGTH(void);
J2OBJC_ENUM_CONSTANT(ComStSt25sdkSTException_STExceptionCode, WRONG_LENGTH)

inline ComStSt25sdkSTException_STExceptionCode *ComStSt25sdkSTException_STExceptionCode_get_UPDATE_ERROR(void);
J2OBJC_ENUM_CONSTANT(ComStSt25sdkSTException_STExceptionCode, UPDATE_ERROR)

inline ComStSt25sdkSTException_STExceptionCode *ComStSt25sdkSTException_STExceptionCode_get_WRONG_PASSWORD(void);
J2OBJC_ENUM_CONSTANT(ComStSt25sdkSTException_STExceptionCode, WRONG_PASSWORD)

inline ComStSt25sdkSTException_STExceptionCode *ComStSt25sdkSTException_STExceptionCode_get_PASSWORD_NEEDED(void);
J2OBJC_ENUM_CONSTANT(ComStSt25sdkSTException_STExceptionCode, PASSWORD_NEEDED)

inline ComStSt25sdkSTException_STExceptionCode *ComStSt25sdkSTException_STExceptionCode_get_EOF(void);
J2OBJC_ENUM_CONSTANT(ComStSt25sdkSTException_STExceptionCode, EOF)

inline ComStSt25sdkSTException_STExceptionCode *ComStSt25sdkSTException_STExceptionCode_get_FILE_OVERFLOW(void);
J2OBJC_ENUM_CONSTANT(ComStSt25sdkSTException_STExceptionCode, FILE_OVERFLOW)

inline ComStSt25sdkSTException_STExceptionCode *ComStSt25sdkSTException_STExceptionCode_get_UNKNOWN_ANSWER(void);
J2OBJC_ENUM_CONSTANT(ComStSt25sdkSTException_STExceptionCode, UNKNOWN_ANSWER)

inline ComStSt25sdkSTException_STExceptionCode *ComStSt25sdkSTException_STExceptionCode_get_NFC_TYPE2_NACK(void);
J2OBJC_ENUM_CONSTANT(ComStSt25sdkSTException_STExceptionCode, NFC_TYPE2_NACK)

inline ComStSt25sdkSTException_STExceptionCode *ComStSt25sdkSTException_STExceptionCode_get_NFC_TYPE2_WRONG_ACK_NACK(void);
J2OBJC_ENUM_CONSTANT(ComStSt25sdkSTException_STExceptionCode, NFC_TYPE2_WRONG_ACK_NACK)

inline ComStSt25sdkSTException_STExceptionCode *ComStSt25sdkSTException_STExceptionCode_get_NFC_TYPE2_STATIC_LOCK_INVALID_VALUES(void);
J2OBJC_ENUM_CONSTANT(ComStSt25sdkSTException_STExceptionCode, NFC_TYPE2_STATIC_LOCK_INVALID_VALUES)

inline ComStSt25sdkSTException_STExceptionCode *ComStSt25sdkSTException_STExceptionCode_get_NFC_TYPE2_STATIC_LOCK_LOCKED(void);
J2OBJC_ENUM_CONSTANT(ComStSt25sdkSTException_STExceptionCode, NFC_TYPE2_STATIC_LOCK_LOCKED)

inline ComStSt25sdkSTException_STExceptionCode *ComStSt25sdkSTException_STExceptionCode_get_NFC_TYPE3_ERROR_OUT_OF_SCOPE(void);
J2OBJC_ENUM_CONSTANT(ComStSt25sdkSTException_STExceptionCode, NFC_TYPE3_ERROR_OUT_OF_SCOPE)

inline ComStSt25sdkSTException_STExceptionCode *ComStSt25sdkSTException_STExceptionCode_get_NFC_TYPE3_ERROR_RFU(void);
J2OBJC_ENUM_CONSTANT(ComStSt25sdkSTException_STExceptionCode, NFC_TYPE3_ERROR_RFU)

inline ComStSt25sdkSTException_STExceptionCode *ComStSt25sdkSTException_STExceptionCode_get_NFC_TYPE3_ERROR_MEMORY_ERROR(void);
J2OBJC_ENUM_CONSTANT(ComStSt25sdkSTException_STExceptionCode, NFC_TYPE3_ERROR_MEMORY_ERROR)

inline ComStSt25sdkSTException_STExceptionCode *ComStSt25sdkSTException_STExceptionCode_get_NFC_TYPE3_ERROR_EXCESSIVE_WRITES(void);
J2OBJC_ENUM_CONSTANT(ComStSt25sdkSTException_STExceptionCode, NFC_TYPE3_ERROR_EXCESSIVE_WRITES)

inline ComStSt25sdkSTException_STExceptionCode *ComStSt25sdkSTException_STExceptionCode_get_NFC_TYPE3_ERROR_PROPRIETARY_ERROR_CONDITIONS(void);
J2OBJC_ENUM_CONSTANT(ComStSt25sdkSTException_STExceptionCode, NFC_TYPE3_ERROR_PROPRIETARY_ERROR_CONDITIONS)

inline ComStSt25sdkSTException_STExceptionCode *ComStSt25sdkSTException_STExceptionCode_get_NFC_TYPE3_NDEF_WRITE_NOT_FINISHED(void);
J2OBJC_ENUM_CONSTANT(ComStSt25sdkSTException_STExceptionCode, NFC_TYPE3_NDEF_WRITE_NOT_FINISHED)

inline ComStSt25sdkSTException_STExceptionCode *ComStSt25sdkSTException_STExceptionCode_get_PERMANENTLY_LOCKED(void);
J2OBJC_ENUM_CONSTANT(ComStSt25sdkSTException_STExceptionCode, PERMANENTLY_LOCKED)

inline ComStSt25sdkSTException_STExceptionCode *ComStSt25sdkSTException_STExceptionCode_get_TRANSCEIVE_EVAL_MODE(void);
J2OBJC_ENUM_CONSTANT(ComStSt25sdkSTException_STExceptionCode, TRANSCEIVE_EVAL_MODE)

inline ComStSt25sdkSTException_STExceptionCode *ComStSt25sdkSTException_STExceptionCode_get_IMPLEMENTED_IN_NDA_VERSION(void);
J2OBJC_ENUM_CONSTANT(ComStSt25sdkSTException_STExceptionCode, IMPLEMENTED_IN_NDA_VERSION)

inline ComStSt25sdkSTException_STExceptionCode *ComStSt25sdkSTException_STExceptionCode_get_MISSING_LIBRARY(void);
J2OBJC_ENUM_CONSTANT(ComStSt25sdkSTException_STExceptionCode, MISSING_LIBRARY)

inline ComStSt25sdkSTException_STExceptionCode *ComStSt25sdkSTException_STExceptionCode_get_OTP_MEMORY(void);
J2OBJC_ENUM_CONSTANT(ComStSt25sdkSTException_STExceptionCode, OTP_MEMORY)

FOUNDATION_EXPORT IOSObjectArray *ComStSt25sdkSTException_STExceptionCode_values(void);

FOUNDATION_EXPORT ComStSt25sdkSTException_STExceptionCode *ComStSt25sdkSTException_STExceptionCode_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT ComStSt25sdkSTException_STExceptionCode *ComStSt25sdkSTException_STExceptionCode_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(ComStSt25sdkSTException_STExceptionCode)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComStSt25sdkSTException")
