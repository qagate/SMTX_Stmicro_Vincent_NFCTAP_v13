//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: st25sdk_ios/ControlTlv.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComStSt25sdkControlTlv")
#ifdef RESTRICT_ComStSt25sdkControlTlv
#define INCLUDE_ALL_ComStSt25sdkControlTlv 0
#else
#define INCLUDE_ALL_ComStSt25sdkControlTlv 1
#endif
#undef RESTRICT_ComStSt25sdkControlTlv

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComStSt25sdkControlTlv_) && (INCLUDE_ALL_ComStSt25sdkControlTlv || defined(INCLUDE_ComStSt25sdkControlTlv))
#define ComStSt25sdkControlTlv_

@class IOSByteArray;

@interface ComStSt25sdkControlTlv : NSObject
@property (readonly, class) jbyte NULL_TLV NS_SWIFT_NAME(NULL_TLV);
@property (readonly, class) jbyte LOCK_CONTROL_TLV NS_SWIFT_NAME(LOCK_CONTROL_TLV);
@property (readonly, class) jbyte MEMORY_CONTROL_TLV NS_SWIFT_NAME(MEMORY_CONTROL_TLV);
@property (readonly, class) jbyte NDEF_MESSAGE_TLV NS_SWIFT_NAME(NDEF_MESSAGE_TLV);
@property (readonly, class) jbyte PROPRIETARY_TLV NS_SWIFT_NAME(PROPRIETARY_TLV);
@property (readonly, class) jbyte TERMINATOR_TLV NS_SWIFT_NAME(TERMINATOR_TLV);

+ (jbyte)NULL_TLV;

+ (jbyte)LOCK_CONTROL_TLV;

+ (jbyte)MEMORY_CONTROL_TLV;

+ (jbyte)NDEF_MESSAGE_TLV;

+ (jbyte)PROPRIETARY_TLV;

+ (jbyte)TERMINATOR_TLV;

#pragma mark Public

- (instancetype __nonnull)initWithByteArray:(IOSByteArray *)buffer;

- (instancetype __nonnull)initWithByteArray:(IOSByteArray *)buffer
                                    withInt:(jint)offset;

+ (IOSByteArray *)addLockControlTlvWithByteArray:(IOSByteArray *)buffer
                                   withByteArray:(IOSByteArray *)lockControlBytes;

+ (IOSByteArray *)addLockControlTlvWithByteArray:(IOSByteArray *)buffer
                                         withInt:(jint)firstByteAddress
                                         withInt:(jint)nbrOfBitOfDLA
                                         withInt:(jint)bytesLockedPerLockBit;

+ (IOSByteArray *)addMemoryControlTlvWithByteArray:(IOSByteArray *)buffer
                                     withByteArray:(IOSByteArray *)memoryControlBytes;

+ (IOSByteArray *)addMemoryControlTlvWithByteArray:(IOSByteArray *)buffer
                                           withInt:(jint)firstByteAddress
                                           withInt:(jint)sizeInBytes;

+ (IOSByteArray *)addNdefTlvWithByteArray:(IOSByteArray *)buffer
                            withByteArray:(IOSByteArray *)ndefMsg;

+ (IOSByteArray *)addNullTlvWithByteArray:(IOSByteArray *)buffer;

+ (IOSByteArray *)addProprietaryTlvWithByteArray:(IOSByteArray *)buffer
                                   withByteArray:(IOSByteArray *)proprietaryData;

+ (IOSByteArray *)addTerminatorTlvWithByteArray:(IOSByteArray *)buffer;

+ (IOSByteArray *)buildLockControlTlvWithByteArray:(IOSByteArray *)lockControlBytes;

+ (IOSByteArray *)buildMemoryControlTlvWithByteArray:(IOSByteArray *)memoryControlBytes;

+ (IOSByteArray *)buildNdefTlvWithByteArray:(IOSByteArray *)ndefMsg;

+ (IOSByteArray *)buildNullTlv;

+ (IOSByteArray *)buildProprietaryTlvWithByteArray:(IOSByteArray *)proprietaryData;

+ (IOSByteArray *)buildTerminatorTlv;

- (jint)getLength;

- (jint)getTlvSize;

- (jbyte)getType;

- (IOSByteArray *)getValue;

- (void)parseWithByteArray:(IOSByteArray *)buffer;

- (void)parseWithByteArray:(IOSByteArray *)buffer
                   withInt:(jint)offset;

- (IOSByteArray *)rebuildBufferFromTlv;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComStSt25sdkControlTlv)

inline jbyte ComStSt25sdkControlTlv_get_NULL_TLV(void);
#define ComStSt25sdkControlTlv_NULL_TLV 0
J2OBJC_STATIC_FIELD_CONSTANT(ComStSt25sdkControlTlv, NULL_TLV, jbyte)

inline jbyte ComStSt25sdkControlTlv_get_LOCK_CONTROL_TLV(void);
#define ComStSt25sdkControlTlv_LOCK_CONTROL_TLV 1
J2OBJC_STATIC_FIELD_CONSTANT(ComStSt25sdkControlTlv, LOCK_CONTROL_TLV, jbyte)

inline jbyte ComStSt25sdkControlTlv_get_MEMORY_CONTROL_TLV(void);
#define ComStSt25sdkControlTlv_MEMORY_CONTROL_TLV 2
J2OBJC_STATIC_FIELD_CONSTANT(ComStSt25sdkControlTlv, MEMORY_CONTROL_TLV, jbyte)

inline jbyte ComStSt25sdkControlTlv_get_NDEF_MESSAGE_TLV(void);
#define ComStSt25sdkControlTlv_NDEF_MESSAGE_TLV 3
J2OBJC_STATIC_FIELD_CONSTANT(ComStSt25sdkControlTlv, NDEF_MESSAGE_TLV, jbyte)

inline jbyte ComStSt25sdkControlTlv_get_PROPRIETARY_TLV(void);
#define ComStSt25sdkControlTlv_PROPRIETARY_TLV -3
J2OBJC_STATIC_FIELD_CONSTANT(ComStSt25sdkControlTlv, PROPRIETARY_TLV, jbyte)

inline jbyte ComStSt25sdkControlTlv_get_TERMINATOR_TLV(void);
#define ComStSt25sdkControlTlv_TERMINATOR_TLV -2
J2OBJC_STATIC_FIELD_CONSTANT(ComStSt25sdkControlTlv, TERMINATOR_TLV, jbyte)

FOUNDATION_EXPORT void ComStSt25sdkControlTlv_initWithByteArray_withInt_(ComStSt25sdkControlTlv *self, IOSByteArray *buffer, jint offset);

FOUNDATION_EXPORT ComStSt25sdkControlTlv *new_ComStSt25sdkControlTlv_initWithByteArray_withInt_(IOSByteArray *buffer, jint offset) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComStSt25sdkControlTlv *create_ComStSt25sdkControlTlv_initWithByteArray_withInt_(IOSByteArray *buffer, jint offset);

FOUNDATION_EXPORT void ComStSt25sdkControlTlv_initWithByteArray_(ComStSt25sdkControlTlv *self, IOSByteArray *buffer);

FOUNDATION_EXPORT ComStSt25sdkControlTlv *new_ComStSt25sdkControlTlv_initWithByteArray_(IOSByteArray *buffer) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComStSt25sdkControlTlv *create_ComStSt25sdkControlTlv_initWithByteArray_(IOSByteArray *buffer);

FOUNDATION_EXPORT IOSByteArray *ComStSt25sdkControlTlv_buildNullTlv(void);

FOUNDATION_EXPORT IOSByteArray *ComStSt25sdkControlTlv_buildLockControlTlvWithByteArray_(IOSByteArray *lockControlBytes);

FOUNDATION_EXPORT IOSByteArray *ComStSt25sdkControlTlv_buildMemoryControlTlvWithByteArray_(IOSByteArray *memoryControlBytes);

FOUNDATION_EXPORT IOSByteArray *ComStSt25sdkControlTlv_buildNdefTlvWithByteArray_(IOSByteArray *ndefMsg);

FOUNDATION_EXPORT IOSByteArray *ComStSt25sdkControlTlv_buildProprietaryTlvWithByteArray_(IOSByteArray *proprietaryData);

FOUNDATION_EXPORT IOSByteArray *ComStSt25sdkControlTlv_buildTerminatorTlv(void);

FOUNDATION_EXPORT IOSByteArray *ComStSt25sdkControlTlv_addNullTlvWithByteArray_(IOSByteArray *buffer);

FOUNDATION_EXPORT IOSByteArray *ComStSt25sdkControlTlv_addLockControlTlvWithByteArray_withByteArray_(IOSByteArray *buffer, IOSByteArray *lockControlBytes);

FOUNDATION_EXPORT IOSByteArray *ComStSt25sdkControlTlv_addMemoryControlTlvWithByteArray_withByteArray_(IOSByteArray *buffer, IOSByteArray *memoryControlBytes);

FOUNDATION_EXPORT IOSByteArray *ComStSt25sdkControlTlv_addLockControlTlvWithByteArray_withInt_withInt_withInt_(IOSByteArray *buffer, jint firstByteAddress, jint nbrOfBitOfDLA, jint bytesLockedPerLockBit);

FOUNDATION_EXPORT IOSByteArray *ComStSt25sdkControlTlv_addMemoryControlTlvWithByteArray_withInt_withInt_(IOSByteArray *buffer, jint firstByteAddress, jint sizeInBytes);

FOUNDATION_EXPORT IOSByteArray *ComStSt25sdkControlTlv_addNdefTlvWithByteArray_withByteArray_(IOSByteArray *buffer, IOSByteArray *ndefMsg);

FOUNDATION_EXPORT IOSByteArray *ComStSt25sdkControlTlv_addProprietaryTlvWithByteArray_withByteArray_(IOSByteArray *buffer, IOSByteArray *proprietaryData);

FOUNDATION_EXPORT IOSByteArray *ComStSt25sdkControlTlv_addTerminatorTlvWithByteArray_(IOSByteArray *buffer);

J2OBJC_TYPE_LITERAL_HEADER(ComStSt25sdkControlTlv)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComStSt25sdkControlTlv")
