//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: st25sdk_ios/type2/STType2PasswordInterface.java
//

#include "J2ObjC_source.h"
#include "com/st/st25sdk/type2/STType2PasswordInterface.h"

@interface ComStSt25sdkType2STType2PasswordInterface : NSObject

@end

@implementation ComStSt25sdkType2STType2PasswordInterface

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x401, 0, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x401, 3, 1, 2, -1, -1, -1 },
    { NULL, "I", 0x401, -1, -1, 2, -1, -1, -1 },
    { NULL, "I", 0x401, -1, -1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(presentPasswordWithInt:withByteArray:);
  methods[1].selector = @selector(writePasswordWithInt:withByteArray:);
  methods[2].selector = @selector(getPasswordLength);
  methods[3].selector = @selector(getConfigurationPasswordNumber);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "presentPassword", "I[B", "LComStSt25sdkSTException;", "writePassword" };
  static const J2ObjcClassInfo _ComStSt25sdkType2STType2PasswordInterface = { "STType2PasswordInterface", "com.st.st25sdk.type2", ptrTable, methods, NULL, 7, 0x609, 4, 0, -1, -1, -1, -1, -1 };
  return &_ComStSt25sdkType2STType2PasswordInterface;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(ComStSt25sdkType2STType2PasswordInterface)
