//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: st25sdk_ios/type2/st25tn/ST25TNRegisterSysBlockAndStaticLocks.java
//

#include "J2ObjC_source.h"
#include "com/st/st25sdk/STException.h"
#include "com/st/st25sdk/STRegister.h"
#include "com/st/st25sdk/command/Type2Command.h"
#include "com/st/st25sdk/type2/STType2Register.h"
#include "com/st/st25sdk/type2/st25tn/ST25TNRegisterSysBlockAndStaticLocks.h"
#include "java/util/ArrayList.h"

#pragma clang diagnostic ignored "-Wincomplete-implementation"

@interface ComStSt25sdkType2St25tnST25TNRegisterSysBlockAndStaticLocks_1 : JavaUtilArrayList

- (instancetype)initWithComStSt25sdkType2St25tnST25TNRegisterSysBlockAndStaticLocks:(ComStSt25sdkType2St25tnST25TNRegisterSysBlockAndStaticLocks *)outer$;

- (ComStSt25sdkSTRegister_STRegisterField *)getWithInt:(jint)arg0;

- (ComStSt25sdkSTRegister_STRegisterField *)removeWithInt:(jint)arg0;

- (ComStSt25sdkSTRegister_STRegisterField *)setWithInt:(jint)arg0
                                                withId:(ComStSt25sdkSTRegister_STRegisterField *)arg1;

@end

J2OBJC_EMPTY_STATIC_INIT(ComStSt25sdkType2St25tnST25TNRegisterSysBlockAndStaticLocks_1)

__attribute__((unused)) static void ComStSt25sdkType2St25tnST25TNRegisterSysBlockAndStaticLocks_1_initWithComStSt25sdkType2St25tnST25TNRegisterSysBlockAndStaticLocks_(ComStSt25sdkType2St25tnST25TNRegisterSysBlockAndStaticLocks_1 *self, ComStSt25sdkType2St25tnST25TNRegisterSysBlockAndStaticLocks *outer$);

__attribute__((unused)) static ComStSt25sdkType2St25tnST25TNRegisterSysBlockAndStaticLocks_1 *new_ComStSt25sdkType2St25tnST25TNRegisterSysBlockAndStaticLocks_1_initWithComStSt25sdkType2St25tnST25TNRegisterSysBlockAndStaticLocks_(ComStSt25sdkType2St25tnST25TNRegisterSysBlockAndStaticLocks *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComStSt25sdkType2St25tnST25TNRegisterSysBlockAndStaticLocks_1 *create_ComStSt25sdkType2St25tnST25TNRegisterSysBlockAndStaticLocks_1_initWithComStSt25sdkType2St25tnST25TNRegisterSysBlockAndStaticLocks_(ComStSt25sdkType2St25tnST25TNRegisterSysBlockAndStaticLocks *outer$);

@implementation ComStSt25sdkType2St25tnST25TNRegisterSysBlockAndStaticLocks

+ (ComStSt25sdkType2St25tnST25TNRegisterSysBlockAndStaticLocks *)newInstanceWithComStSt25sdkCommandType2Command:(ComStSt25sdkCommandType2Command *)type2Command
                                                                                                        withInt:(jint)blockNumber {
  return ComStSt25sdkType2St25tnST25TNRegisterSysBlockAndStaticLocks_newInstanceWithComStSt25sdkCommandType2Command_withInt_(type2Command, blockNumber);
}

- (instancetype)initWithComStSt25sdkCommandType2Command:(ComStSt25sdkCommandType2Command *)type2Command
                                                withInt:(jint)blockNumber
                                           withNSString:(NSString *)registerName
                                           withNSString:(NSString *)registerContentDescription
        withComStSt25sdkSTRegister_RegisterAccessRights:(ComStSt25sdkSTRegister_RegisterAccessRights *)registerAccessRights
            withComStSt25sdkSTRegister_RegisterDataSize:(ComStSt25sdkSTRegister_RegisterDataSize *)registerDataSize {
  ComStSt25sdkType2St25tnST25TNRegisterSysBlockAndStaticLocks_initWithComStSt25sdkCommandType2Command_withInt_withNSString_withNSString_withComStSt25sdkSTRegister_RegisterAccessRights_withComStSt25sdkSTRegister_RegisterDataSize_(self, type2Command, blockNumber, registerName, registerContentDescription, registerAccessRights, registerDataSize);
  return self;
}

- (void)setLockBitWithNSString:(NSString *)fieldName
                       withInt:(jint)bit {
  if ((bit < 0) || (bit > 7)) {
    @throw new_ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_(JreLoadEnum(ComStSt25sdkSTException_STExceptionCode, BAD_PARAMETER));
  }
  jint fieldValue = JreLShift32(1, bit);
  [((ComStSt25sdkSTRegister_STRegisterField *) nil_chk([self getRegisterFieldWithNSString:fieldName])) setOtpValueWithInt:fieldValue];
}

- (jboolean)isLockBitSetWithNSString:(NSString *)fieldName
                             withInt:(jint)bit {
  jboolean isLockBitSet;
  if ((bit < 0) || (bit > 7)) {
    @throw new_ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_(JreLoadEnum(ComStSt25sdkSTException_STExceptionCode, BAD_PARAMETER));
  }
  jint fieldValue = [((ComStSt25sdkSTRegister_STRegisterField *) nil_chk([self getRegisterFieldWithNSString:fieldName])) getValue];
  jint bitValue = (JreRShift32(fieldValue, bit)) & (jint) 0x01;
  isLockBitSet = (bitValue == 1);
  return isLockBitSet;
}

- (void)setLockByteWithNSString:(NSString *)fieldName
                       withByte:(jbyte)lockPattern {
  [((ComStSt25sdkSTRegister_STRegisterField *) nil_chk([self getRegisterFieldWithNSString:fieldName])) setOtpValueWithInt:lockPattern];
}

- (jbyte)getSysBlock {
  return (jbyte) ([((ComStSt25sdkSTRegister_STRegisterField *) nil_chk([self getRegisterFieldWithNSString:@"SYSBLOCK"])) getValue] & (jint) 0xFF);
}

- (jbyte)getStatLock0 {
  return (jbyte) ([((ComStSt25sdkSTRegister_STRegisterField *) nil_chk([self getRegisterFieldWithNSString:@"STATLOCK_0"])) getValue] & (jint) 0xFF);
}

- (jbyte)getStatLock1 {
  return (jbyte) ([((ComStSt25sdkSTRegister_STRegisterField *) nil_chk([self getRegisterFieldWithNSString:@"STATLOCK_1"])) getValue] & (jint) 0xFF);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LComStSt25sdkType2St25tnST25TNRegisterSysBlockAndStaticLocks;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, 5, -1, -1, -1 },
    { NULL, "Z", 0x1, 6, 4, 5, -1, -1, -1 },
    { NULL, "V", 0x1, 7, 8, 5, -1, -1, -1 },
    { NULL, "B", 0x1, -1, -1, 5, -1, -1, -1 },
    { NULL, "B", 0x1, -1, -1, 5, -1, -1, -1 },
    { NULL, "B", 0x1, -1, -1, 5, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(newInstanceWithComStSt25sdkCommandType2Command:withInt:);
  methods[1].selector = @selector(initWithComStSt25sdkCommandType2Command:withInt:withNSString:withNSString:withComStSt25sdkSTRegister_RegisterAccessRights:withComStSt25sdkSTRegister_RegisterDataSize:);
  methods[2].selector = @selector(setLockBitWithNSString:withInt:);
  methods[3].selector = @selector(isLockBitSetWithNSString:withInt:);
  methods[4].selector = @selector(setLockByteWithNSString:withByte:);
  methods[5].selector = @selector(getSysBlock);
  methods[6].selector = @selector(getStatLock0);
  methods[7].selector = @selector(getStatLock1);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "newInstance", "LComStSt25sdkCommandType2Command;I", "LComStSt25sdkCommandType2Command;ILNSString;LNSString;LComStSt25sdkSTRegister_RegisterAccessRights;LComStSt25sdkSTRegister_RegisterDataSize;", "setLockBit", "LNSString;I", "LComStSt25sdkSTException;", "isLockBitSet", "setLockByte", "LNSString;B" };
  static const J2ObjcClassInfo _ComStSt25sdkType2St25tnST25TNRegisterSysBlockAndStaticLocks = { "ST25TNRegisterSysBlockAndStaticLocks", "com.st.st25sdk.type2.st25tn", ptrTable, methods, NULL, 7, 0x1, 8, 0, -1, -1, -1, -1, -1 };
  return &_ComStSt25sdkType2St25tnST25TNRegisterSysBlockAndStaticLocks;
}

@end

ComStSt25sdkType2St25tnST25TNRegisterSysBlockAndStaticLocks *ComStSt25sdkType2St25tnST25TNRegisterSysBlockAndStaticLocks_newInstanceWithComStSt25sdkCommandType2Command_withInt_(ComStSt25sdkCommandType2Command *type2Command, jint blockNumber) {
  ComStSt25sdkType2St25tnST25TNRegisterSysBlockAndStaticLocks_initialize();
  NSString *registerName = @"SysBlockAndStaticLocks";
  NSString *registerContentDescription = @"Bits [31:24] : STATLOCK_1\nBits [23:16] : STATLOCK_0\nBits [15:8]  : SYSBLOCK\nBits [7:0]   : BCC\n";
  return new_ComStSt25sdkType2St25tnST25TNRegisterSysBlockAndStaticLocks_initWithComStSt25sdkCommandType2Command_withInt_withNSString_withNSString_withComStSt25sdkSTRegister_RegisterAccessRights_withComStSt25sdkSTRegister_RegisterDataSize_(type2Command, blockNumber, registerName, registerContentDescription, JreLoadEnum(ComStSt25sdkSTRegister_RegisterAccessRights, REGISTER_READ_WRITE_OTP), JreLoadEnum(ComStSt25sdkSTRegister_RegisterDataSize, REGISTER_DATA_ON_32_BITS));
}

void ComStSt25sdkType2St25tnST25TNRegisterSysBlockAndStaticLocks_initWithComStSt25sdkCommandType2Command_withInt_withNSString_withNSString_withComStSt25sdkSTRegister_RegisterAccessRights_withComStSt25sdkSTRegister_RegisterDataSize_(ComStSt25sdkType2St25tnST25TNRegisterSysBlockAndStaticLocks *self, ComStSt25sdkCommandType2Command *type2Command, jint blockNumber, NSString *registerName, NSString *registerContentDescription, ComStSt25sdkSTRegister_RegisterAccessRights *registerAccessRights, ComStSt25sdkSTRegister_RegisterDataSize *registerDataSize) {
  ComStSt25sdkType2STType2Register_initWithComStSt25sdkCommandType2Command_withInt_withNSString_withNSString_withComStSt25sdkSTRegister_RegisterAccessRights_withComStSt25sdkSTRegister_RegisterDataSize_(self, type2Command, blockNumber, registerName, registerContentDescription, registerAccessRights, registerDataSize);
  [self createFieldHashWithJavaUtilList:new_ComStSt25sdkType2St25tnST25TNRegisterSysBlockAndStaticLocks_1_initWithComStSt25sdkType2St25tnST25TNRegisterSysBlockAndStaticLocks_(self)];
}

ComStSt25sdkType2St25tnST25TNRegisterSysBlockAndStaticLocks *new_ComStSt25sdkType2St25tnST25TNRegisterSysBlockAndStaticLocks_initWithComStSt25sdkCommandType2Command_withInt_withNSString_withNSString_withComStSt25sdkSTRegister_RegisterAccessRights_withComStSt25sdkSTRegister_RegisterDataSize_(ComStSt25sdkCommandType2Command *type2Command, jint blockNumber, NSString *registerName, NSString *registerContentDescription, ComStSt25sdkSTRegister_RegisterAccessRights *registerAccessRights, ComStSt25sdkSTRegister_RegisterDataSize *registerDataSize) {
  J2OBJC_NEW_IMPL(ComStSt25sdkType2St25tnST25TNRegisterSysBlockAndStaticLocks, initWithComStSt25sdkCommandType2Command_withInt_withNSString_withNSString_withComStSt25sdkSTRegister_RegisterAccessRights_withComStSt25sdkSTRegister_RegisterDataSize_, type2Command, blockNumber, registerName, registerContentDescription, registerAccessRights, registerDataSize)
}

ComStSt25sdkType2St25tnST25TNRegisterSysBlockAndStaticLocks *create_ComStSt25sdkType2St25tnST25TNRegisterSysBlockAndStaticLocks_initWithComStSt25sdkCommandType2Command_withInt_withNSString_withNSString_withComStSt25sdkSTRegister_RegisterAccessRights_withComStSt25sdkSTRegister_RegisterDataSize_(ComStSt25sdkCommandType2Command *type2Command, jint blockNumber, NSString *registerName, NSString *registerContentDescription, ComStSt25sdkSTRegister_RegisterAccessRights *registerAccessRights, ComStSt25sdkSTRegister_RegisterDataSize *registerDataSize) {
  J2OBJC_CREATE_IMPL(ComStSt25sdkType2St25tnST25TNRegisterSysBlockAndStaticLocks, initWithComStSt25sdkCommandType2Command_withInt_withNSString_withNSString_withComStSt25sdkSTRegister_RegisterAccessRights_withComStSt25sdkSTRegister_RegisterDataSize_, type2Command, blockNumber, registerName, registerContentDescription, registerAccessRights, registerDataSize)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComStSt25sdkType2St25tnST25TNRegisterSysBlockAndStaticLocks)

@implementation ComStSt25sdkType2St25tnST25TNRegisterSysBlockAndStaticLocks_1

- (instancetype)initWithComStSt25sdkType2St25tnST25TNRegisterSysBlockAndStaticLocks:(ComStSt25sdkType2St25tnST25TNRegisterSysBlockAndStaticLocks *)outer$ {
  ComStSt25sdkType2St25tnST25TNRegisterSysBlockAndStaticLocks_1_initWithComStSt25sdkType2St25tnST25TNRegisterSysBlockAndStaticLocks_(self, outer$);
  return self;
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComStSt25sdkType2St25tnST25TNRegisterSysBlockAndStaticLocks:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComStSt25sdkType2St25tnST25TNRegisterSysBlockAndStaticLocks;", "initWithComStSt25sdkCommandType2Command:withInt:withNSString:withNSString:withComStSt25sdkSTRegister_RegisterAccessRights:withComStSt25sdkSTRegister_RegisterDataSize:", "Ljava/util/ArrayList<Lcom/st/st25sdk/STRegister$STRegisterField;>;" };
  static const J2ObjcClassInfo _ComStSt25sdkType2St25tnST25TNRegisterSysBlockAndStaticLocks_1 = { "", "com.st.st25sdk.type2.st25tn", ptrTable, methods, NULL, 7, 0x8010, 1, 0, 0, -1, 1, 2, -1 };
  return &_ComStSt25sdkType2St25tnST25TNRegisterSysBlockAndStaticLocks_1;
}

@end

void ComStSt25sdkType2St25tnST25TNRegisterSysBlockAndStaticLocks_1_initWithComStSt25sdkType2St25tnST25TNRegisterSysBlockAndStaticLocks_(ComStSt25sdkType2St25tnST25TNRegisterSysBlockAndStaticLocks_1 *self, ComStSt25sdkType2St25tnST25TNRegisterSysBlockAndStaticLocks *outer$) {
  JavaUtilArrayList_init(self);
  {
    [self addWithId:new_ComStSt25sdkSTRegister_STRegisterField_initWithComStSt25sdkSTRegister_withNSString_withNSString_withInt_(outer$, @"SYSBLOCK", @"SysBlock\n", (jint) 0x0000FF00)];
    [self addWithId:new_ComStSt25sdkSTRegister_STRegisterField_initWithComStSt25sdkSTRegister_withNSString_withNSString_withInt_(outer$, @"STATLOCK_0", @"StatLock_0\n", (jint) 0x00FF0000)];
    [self addWithId:new_ComStSt25sdkSTRegister_STRegisterField_initWithComStSt25sdkSTRegister_withNSString_withNSString_withInt_(outer$, @"STATLOCK_1", @"StatLock_1\n", (jint) 0xFF000000)];
  }
}

ComStSt25sdkType2St25tnST25TNRegisterSysBlockAndStaticLocks_1 *new_ComStSt25sdkType2St25tnST25TNRegisterSysBlockAndStaticLocks_1_initWithComStSt25sdkType2St25tnST25TNRegisterSysBlockAndStaticLocks_(ComStSt25sdkType2St25tnST25TNRegisterSysBlockAndStaticLocks *outer$) {
  J2OBJC_NEW_IMPL(ComStSt25sdkType2St25tnST25TNRegisterSysBlockAndStaticLocks_1, initWithComStSt25sdkType2St25tnST25TNRegisterSysBlockAndStaticLocks_, outer$)
}

ComStSt25sdkType2St25tnST25TNRegisterSysBlockAndStaticLocks_1 *create_ComStSt25sdkType2St25tnST25TNRegisterSysBlockAndStaticLocks_1_initWithComStSt25sdkType2St25tnST25TNRegisterSysBlockAndStaticLocks_(ComStSt25sdkType2St25tnST25TNRegisterSysBlockAndStaticLocks *outer$) {
  J2OBJC_CREATE_IMPL(ComStSt25sdkType2St25tnST25TNRegisterSysBlockAndStaticLocks_1, initWithComStSt25sdkType2St25tnST25TNRegisterSysBlockAndStaticLocks_, outer$)
}
