//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: st25sdk_ios/type2/DynamicLockType2.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComStSt25sdkType2DynamicLockType2")
#ifdef RESTRICT_ComStSt25sdkType2DynamicLockType2
#define INCLUDE_ALL_ComStSt25sdkType2DynamicLockType2 0
#else
#define INCLUDE_ALL_ComStSt25sdkType2DynamicLockType2 1
#endif
#undef RESTRICT_ComStSt25sdkType2DynamicLockType2

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComStSt25sdkType2DynamicLockType2_) && (INCLUDE_ALL_ComStSt25sdkType2DynamicLockType2 || defined(INCLUDE_ComStSt25sdkType2DynamicLockType2))
#define ComStSt25sdkType2DynamicLockType2_

@class ComStSt25sdkType2DynamicLockType2Configuration;
@class IOSByteArray;

@interface ComStSt25sdkType2DynamicLockType2 : NSObject {
 @public
  ComStSt25sdkType2DynamicLockType2Configuration *mDynamicLockConfig_;
  IOSByteArray *mDlaBuffer_;
}
@property (readonly, class) jbyte STATIC_AREA_MAX_SIZE NS_SWIFT_NAME(STATIC_AREA_MAX_SIZE);
@property (readonly, class) jbyte STATIC_AREA_USER_MEMORY_MAX_SIZE NS_SWIFT_NAME(STATIC_AREA_USER_MEMORY_MAX_SIZE);
@property (readonly, class) jbyte FIRST_MEM_ADD_MANAGED_BY_DYNAMIC_LOCK NS_SWIFT_NAME(FIRST_MEM_ADD_MANAGED_BY_DYNAMIC_LOCK);

+ (jbyte)STATIC_AREA_MAX_SIZE;

+ (jbyte)STATIC_AREA_USER_MEMORY_MAX_SIZE;

+ (jbyte)FIRST_MEM_ADD_MANAGED_BY_DYNAMIC_LOCK;

#pragma mark Public

- (instancetype __nonnull)initWithComStSt25sdkType2DynamicLockType2Configuration:(ComStSt25sdkType2DynamicLockType2Configuration *)dynamicLockConfig
                                                                   withByteArray:(IOSByteArray *)lockAreaBuffer;

- (jboolean)areAllDynamicLockBitsSet;

- (IOSByteArray *)getDlaBuffer;

- (IOSByteArray *)getDynamicLockBitArray;

- (jbyte)getDynamicLockBitForMemoryAddressWithInt:(jint)memoryAddress;

- (jint)getEndAddressRangeForLockBitWithInt:(jint)lockBitNumber;

- (jint)getLockBitNumberForMemoryAddressWithInt:(jint)memoryAddress;

- (jint)getStartAddressRangeForLockBitWithInt:(jint)lockBitNumber;

- (jboolean)isMemoryAddressLockedWithInt:(jint)memoryAddress;

- (IOSByteArray *)setAllDynamicLockBits;

- (void)setDlaBufferWithByteArray:(IOSByteArray *)buffer;

- (IOSByteArray *)setDynamicLockBitWithInt:(jint)memoryAddress;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComStSt25sdkType2DynamicLockType2)

J2OBJC_FIELD_SETTER(ComStSt25sdkType2DynamicLockType2, mDynamicLockConfig_, ComStSt25sdkType2DynamicLockType2Configuration *)
J2OBJC_FIELD_SETTER(ComStSt25sdkType2DynamicLockType2, mDlaBuffer_, IOSByteArray *)

inline jbyte ComStSt25sdkType2DynamicLockType2_get_STATIC_AREA_MAX_SIZE(void);
#define ComStSt25sdkType2DynamicLockType2_STATIC_AREA_MAX_SIZE 52
J2OBJC_STATIC_FIELD_CONSTANT(ComStSt25sdkType2DynamicLockType2, STATIC_AREA_MAX_SIZE, jbyte)

inline jbyte ComStSt25sdkType2DynamicLockType2_get_STATIC_AREA_USER_MEMORY_MAX_SIZE(void);
#define ComStSt25sdkType2DynamicLockType2_STATIC_AREA_USER_MEMORY_MAX_SIZE 48
J2OBJC_STATIC_FIELD_CONSTANT(ComStSt25sdkType2DynamicLockType2, STATIC_AREA_USER_MEMORY_MAX_SIZE, jbyte)

inline jbyte ComStSt25sdkType2DynamicLockType2_get_FIRST_MEM_ADD_MANAGED_BY_DYNAMIC_LOCK(void);
#define ComStSt25sdkType2DynamicLockType2_FIRST_MEM_ADD_MANAGED_BY_DYNAMIC_LOCK 64
J2OBJC_STATIC_FIELD_CONSTANT(ComStSt25sdkType2DynamicLockType2, FIRST_MEM_ADD_MANAGED_BY_DYNAMIC_LOCK, jbyte)

FOUNDATION_EXPORT void ComStSt25sdkType2DynamicLockType2_initWithComStSt25sdkType2DynamicLockType2Configuration_withByteArray_(ComStSt25sdkType2DynamicLockType2 *self, ComStSt25sdkType2DynamicLockType2Configuration *dynamicLockConfig, IOSByteArray *lockAreaBuffer);

FOUNDATION_EXPORT ComStSt25sdkType2DynamicLockType2 *new_ComStSt25sdkType2DynamicLockType2_initWithComStSt25sdkType2DynamicLockType2Configuration_withByteArray_(ComStSt25sdkType2DynamicLockType2Configuration *dynamicLockConfig, IOSByteArray *lockAreaBuffer) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComStSt25sdkType2DynamicLockType2 *create_ComStSt25sdkType2DynamicLockType2_initWithComStSt25sdkType2DynamicLockType2Configuration_withByteArray_(ComStSt25sdkType2DynamicLockType2Configuration *dynamicLockConfig, IOSByteArray *lockAreaBuffer);

J2OBJC_TYPE_LITERAL_HEADER(ComStSt25sdkType2DynamicLockType2)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComStSt25sdkType2DynamicLockType2")
