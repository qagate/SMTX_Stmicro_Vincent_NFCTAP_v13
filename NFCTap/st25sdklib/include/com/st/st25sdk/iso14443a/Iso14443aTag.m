//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: st25sdk_ios/iso14443a/Iso14443aTag.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/st/st25sdk/NFCTag.h"
#include "com/st/st25sdk/RFReaderInterface.h"
#include "com/st/st25sdk/STException.h"
#include "com/st/st25sdk/command/Iso14443aCommand.h"
#include "com/st/st25sdk/iso14443a/Iso14443aTag.h"
#include "com/st/st25sdk/ndef/NDEFMsg.h"
#include "java/util/Arrays.h"

@implementation ComStSt25sdkIso14443aIso14443aTag

+ (jint)DEFAULT_NBR_OF_BYTES_PER_BLOCK {
  return ComStSt25sdkIso14443aIso14443aTag_DEFAULT_NBR_OF_BYTES_PER_BLOCK;
}

- (instancetype)initWithComStSt25sdkRFReaderInterface:(id<ComStSt25sdkRFReaderInterface>)readerInterface
                                        withByteArray:(IOSByteArray *)uid {
  ComStSt25sdkIso14443aIso14443aTag_initWithComStSt25sdkRFReaderInterface_withByteArray_(self, readerInterface, uid);
  return self;
}

- (IOSByteArray *)reqA {
  return [((ComStSt25sdkCommandIso14443aCommand *) nil_chk(mIso14443ACmd_)) reqA];
}

- (IOSByteArray *)wupA {
  return [((ComStSt25sdkCommandIso14443aCommand *) nil_chk(mIso14443ACmd_)) wupA];
}

- (void)hltA {
  [((ComStSt25sdkCommandIso14443aCommand *) nil_chk(mIso14443ACmd_)) hltA];
}

- (IOSByteArray *)anticollision1 {
  return [((ComStSt25sdkCommandIso14443aCommand *) nil_chk(mIso14443ACmd_)) anticollision1];
}

- (IOSByteArray *)anticollision2 {
  return [((ComStSt25sdkCommandIso14443aCommand *) nil_chk(mIso14443ACmd_)) anticollision2];
}

- (IOSByteArray *)anticollision3 {
  return [((ComStSt25sdkCommandIso14443aCommand *) nil_chk(mIso14443ACmd_)) anticollision3];
}

- (IOSByteArray *)select1WithByteArray:(IOSByteArray *)data {
  return [((ComStSt25sdkCommandIso14443aCommand *) nil_chk(mIso14443ACmd_)) select1WithByteArray:data];
}

- (IOSByteArray *)select2WithByteArray:(IOSByteArray *)data {
  return [((ComStSt25sdkCommandIso14443aCommand *) nil_chk(mIso14443ACmd_)) select2WithByteArray:data];
}

- (IOSByteArray *)select3WithByteArray:(IOSByteArray *)data {
  return [((ComStSt25sdkCommandIso14443aCommand *) nil_chk(mIso14443ACmd_)) select3WithByteArray:data];
}

- (IOSByteArray *)ratsWithByte:(jbyte)fsdi
                      withByte:(jbyte)cid {
  return [((ComStSt25sdkCommandIso14443aCommand *) nil_chk(mIso14443ACmd_)) ratsWithByte:fsdi withByte:cid];
}

- (IOSByteArray *)ratsWithByte:(jbyte)param {
  return [((ComStSt25sdkCommandIso14443aCommand *) nil_chk(mIso14443ACmd_)) ratsWithByte:param];
}

- (IOSByteArray *)ppsWithByte:(jbyte)cid
                withByteArray:(IOSByteArray *)ppsParams {
  return [((ComStSt25sdkCommandIso14443aCommand *) nil_chk(mIso14443ACmd_)) ppsWithByte:cid withByteArray:ppsParams];
}

- (IOSByteArray *)iso14443aSelectTagWithByteArray:(IOSByteArray *)uid {
  return [((ComStSt25sdkCommandIso14443aCommand *) nil_chk(mIso14443ACmd_)) iso14443aSelectTagWithByteArray:uid];
}

- (IOSByteArray *)iso14443aSelectTagWithByteArray:(IOSByteArray *)uid
                                         withByte:(jbyte)ratsParam {
  return [((ComStSt25sdkCommandIso14443aCommand *) nil_chk(mIso14443ACmd_)) iso14443aSelectTagWithByteArray:uid withByte:ratsParam];
}

- (IOSByteArray *)iso14443aSelectTagWithByteArray:(IOSByteArray *)uid
                                         withByte:(jbyte)ratsParam
                                         withByte:(jbyte)cidPpsParam
                                    withByteArray:(IOSByteArray *)ppsParams {
  return [((ComStSt25sdkCommandIso14443aCommand *) nil_chk(mIso14443ACmd_)) iso14443aSelectTagWithByteArray:uid withByte:ratsParam withByte:cidPpsParam withByteArray:ppsParams];
}

- (IOSByteArray *)iso14443aDeselectTag {
  return [((ComStSt25sdkCommandIso14443aCommand *) nil_chk(mIso14443ACmd_)) deselect];
}

- (jint)getBlockSizeInBytes {
  return 4;
}

- (jint)getCCFileLength {
  @throw new_ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_(JreLoadEnum(ComStSt25sdkSTException_STExceptionCode, NOT_IMPLEMENTED));
}

- (jbyte)getCCMagicNumber {
  @throw new_ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_(JreLoadEnum(ComStSt25sdkSTException_STExceptionCode, NOT_IMPLEMENTED));
}

- (jbyte)getCCMappingVersion {
  @throw new_ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_(JreLoadEnum(ComStSt25sdkSTException_STExceptionCode, NOT_IMPLEMENTED));
}

- (jbyte)getCCReadAccess {
  @throw new_ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_(JreLoadEnum(ComStSt25sdkSTException_STExceptionCode, NOT_IMPLEMENTED));
}

- (jbyte)getCCWriteAccess {
  @throw new_ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_(JreLoadEnum(ComStSt25sdkSTException_STExceptionCode, NOT_IMPLEMENTED));
}

- (jint)getCCMemorySize {
  @throw new_ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_(JreLoadEnum(ComStSt25sdkSTException_STExceptionCode, NOT_IMPLEMENTED));
}

- (void)writeNdefMessageWithComStSt25sdkNdefNDEFMsg:(ComStSt25sdkNdefNDEFMsg *)msg {
  @throw new_ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_(JreLoadEnum(ComStSt25sdkSTException_STExceptionCode, NOT_IMPLEMENTED));
}

- (ComStSt25sdkNdefNDEFMsg *)readNdefMessage {
  @throw new_ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_(JreLoadEnum(ComStSt25sdkSTException_STExceptionCode, NOT_IMPLEMENTED));
}

- (IOSByteArray *)readCCFile {
  @throw new_ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_(JreLoadEnum(ComStSt25sdkSTException_STExceptionCode, NOT_IMPLEMENTED));
}

- (void)writeCCFile {
  @throw new_ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_(JreLoadEnum(ComStSt25sdkSTException_STExceptionCode, NOT_IMPLEMENTED));
}

- (void)writeCCFileWithByteArray:(IOSByteArray *)buffer {
  @throw new_ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_(JreLoadEnum(ComStSt25sdkSTException_STExceptionCode, NOT_IMPLEMENTED));
}

- (void)selectCCFile {
  @throw new_ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_(JreLoadEnum(ComStSt25sdkSTException_STExceptionCode, NOT_IMPLEMENTED));
}

- (void)initEmptyCCFile {
  @throw new_ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_(JreLoadEnum(ComStSt25sdkSTException_STExceptionCode, NOT_IMPLEMENTED));
}

- (jint)getSysFileLength {
  @throw new_ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_(JreLoadEnum(ComStSt25sdkSTException_STExceptionCode, NOT_IMPLEMENTED));
}

- (jint)getMemSizeInBytes {
  return mMemSize_;
}

- (IOSByteArray *)readBytesWithInt:(jint)byteAddress
                           withInt:(jint)sizeInBytes {
  @throw new_ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_(JreLoadEnum(ComStSt25sdkSTException_STExceptionCode, NOT_IMPLEMENTED));
}

- (void)writeBytesWithInt:(jint)byteAddress
            withByteArray:(IOSByteArray *)data {
  @throw new_ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_(JreLoadEnum(ComStSt25sdkSTException_STExceptionCode, NOT_IMPLEMENTED));
}

- (IOSByteArray *)readSysFile {
  @throw new_ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_(JreLoadEnum(ComStSt25sdkSTException_STExceptionCode, NOT_IMPLEMENTED));
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, 1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "[B", 0x1, 2, 3, 1, -1, -1, -1 },
    { NULL, "[B", 0x1, 4, 3, 1, -1, -1, -1 },
    { NULL, "[B", 0x1, 5, 3, 1, -1, -1, -1 },
    { NULL, "[B", 0x1, 6, 7, 1, -1, -1, -1 },
    { NULL, "[B", 0x1, 6, 8, 1, -1, -1, -1 },
    { NULL, "[B", 0x1, 9, 10, 1, -1, -1, -1 },
    { NULL, "[B", 0x1, 11, 3, 1, -1, -1, -1 },
    { NULL, "[B", 0x1, 11, 12, 1, -1, -1, -1 },
    { NULL, "[B", 0x1, 11, 13, 1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "B", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "B", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "B", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "B", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "V", 0x1, 14, 15, 1, -1, -1, -1 },
    { NULL, "LComStSt25sdkNdefNDEFMsg;", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "V", 0x1, 16, 3, 1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "[B", 0x1, 17, 18, 1, -1, -1, -1 },
    { NULL, "V", 0x1, 19, 20, 1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, 1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComStSt25sdkRFReaderInterface:withByteArray:);
  methods[1].selector = @selector(reqA);
  methods[2].selector = @selector(wupA);
  methods[3].selector = @selector(hltA);
  methods[4].selector = @selector(anticollision1);
  methods[5].selector = @selector(anticollision2);
  methods[6].selector = @selector(anticollision3);
  methods[7].selector = @selector(select1WithByteArray:);
  methods[8].selector = @selector(select2WithByteArray:);
  methods[9].selector = @selector(select3WithByteArray:);
  methods[10].selector = @selector(ratsWithByte:withByte:);
  methods[11].selector = @selector(ratsWithByte:);
  methods[12].selector = @selector(ppsWithByte:withByteArray:);
  methods[13].selector = @selector(iso14443aSelectTagWithByteArray:);
  methods[14].selector = @selector(iso14443aSelectTagWithByteArray:withByte:);
  methods[15].selector = @selector(iso14443aSelectTagWithByteArray:withByte:withByte:withByteArray:);
  methods[16].selector = @selector(iso14443aDeselectTag);
  methods[17].selector = @selector(getBlockSizeInBytes);
  methods[18].selector = @selector(getCCFileLength);
  methods[19].selector = @selector(getCCMagicNumber);
  methods[20].selector = @selector(getCCMappingVersion);
  methods[21].selector = @selector(getCCReadAccess);
  methods[22].selector = @selector(getCCWriteAccess);
  methods[23].selector = @selector(getCCMemorySize);
  methods[24].selector = @selector(writeNdefMessageWithComStSt25sdkNdefNDEFMsg:);
  methods[25].selector = @selector(readNdefMessage);
  methods[26].selector = @selector(readCCFile);
  methods[27].selector = @selector(writeCCFile);
  methods[28].selector = @selector(writeCCFileWithByteArray:);
  methods[29].selector = @selector(selectCCFile);
  methods[30].selector = @selector(initEmptyCCFile);
  methods[31].selector = @selector(getSysFileLength);
  methods[32].selector = @selector(getMemSizeInBytes);
  methods[33].selector = @selector(readBytesWithInt:withInt:);
  methods[34].selector = @selector(writeBytesWithInt:withByteArray:);
  methods[35].selector = @selector(readSysFile);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "mIso14443ACmd_", "LComStSt25sdkCommandIso14443aCommand;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "DEFAULT_NBR_OF_BYTES_PER_BLOCK", "I", .constantValue.asInt = ComStSt25sdkIso14443aIso14443aTag_DEFAULT_NBR_OF_BYTES_PER_BLOCK, 0x19, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComStSt25sdkRFReaderInterface;[B", "LComStSt25sdkSTException;", "select1", "[B", "select2", "select3", "rats", "BB", "B", "pps", "B[B", "iso14443aSelectTag", "[BB", "[BBB[B", "writeNdefMessage", "LComStSt25sdkNdefNDEFMsg;", "writeCCFile", "readBytes", "II", "writeBytes", "I[B" };
  static const J2ObjcClassInfo _ComStSt25sdkIso14443aIso14443aTag = { "Iso14443aTag", "com.st.st25sdk.iso14443a", ptrTable, methods, fields, 7, 0x1, 36, 2, -1, -1, -1, -1, -1 };
  return &_ComStSt25sdkIso14443aIso14443aTag;
}

@end

void ComStSt25sdkIso14443aIso14443aTag_initWithComStSt25sdkRFReaderInterface_withByteArray_(ComStSt25sdkIso14443aIso14443aTag *self, id<ComStSt25sdkRFReaderInterface> readerInterface, IOSByteArray *uid) {
  ComStSt25sdkNFCTag_initWithComStSt25sdkRFReaderInterface_(self, readerInterface);
  self->mName_ = @"ISO14443A tag";
  self->mDescription_ = @"Tag based on ISO/IEC 14443-A";
  self->mUid_ = JavaUtilArrays_copyOfWithByteArray_withInt_(uid, ((IOSByteArray *) nil_chk(uid))->size_);
  self->mIso14443ACmd_ = new_ComStSt25sdkCommandIso14443aCommand_initWithComStSt25sdkRFReaderInterface_(readerInterface);
}

ComStSt25sdkIso14443aIso14443aTag *new_ComStSt25sdkIso14443aIso14443aTag_initWithComStSt25sdkRFReaderInterface_withByteArray_(id<ComStSt25sdkRFReaderInterface> readerInterface, IOSByteArray *uid) {
  J2OBJC_NEW_IMPL(ComStSt25sdkIso14443aIso14443aTag, initWithComStSt25sdkRFReaderInterface_withByteArray_, readerInterface, uid)
}

ComStSt25sdkIso14443aIso14443aTag *create_ComStSt25sdkIso14443aIso14443aTag_initWithComStSt25sdkRFReaderInterface_withByteArray_(id<ComStSt25sdkRFReaderInterface> readerInterface, IOSByteArray *uid) {
  J2OBJC_CREATE_IMPL(ComStSt25sdkIso14443aIso14443aTag, initWithComStSt25sdkRFReaderInterface_withByteArray_, readerInterface, uid)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComStSt25sdkIso14443aIso14443aTag)
