//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: st25sdk_ios/type5/STType5Sector.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/st/st25sdk/Helper.h"
#include "com/st/st25sdk/STException.h"
#include "com/st/st25sdk/command/Iso15693CustomCommand.h"
#include "com/st/st25sdk/command/Iso15693Protocol.h"
#include "com/st/st25sdk/command/VicinityCommand.h"
#include "com/st/st25sdk/type5/STType5Sector.h"
#include "java/nio/Buffer.h"
#include "java/nio/ByteBuffer.h"

@interface ComStSt25sdkType5STType5Sector () {
 @public
  JavaNioByteBuffer *mSectorSecStatus_;
  ComStSt25sdkCommandIso15693Protocol *mIso15693Command_;
  jint mNbOfSectors_;
  jint mNbOfBlocksPerSector_;
}

- (void)checkCache;

@end

J2OBJC_FIELD_SETTER(ComStSt25sdkType5STType5Sector, mSectorSecStatus_, JavaNioByteBuffer *)
J2OBJC_FIELD_SETTER(ComStSt25sdkType5STType5Sector, mIso15693Command_, ComStSt25sdkCommandIso15693Protocol *)

__attribute__((unused)) static void ComStSt25sdkType5STType5Sector_checkCache(ComStSt25sdkType5STType5Sector *self);

@implementation ComStSt25sdkType5STType5Sector

- (instancetype)initWithComStSt25sdkCommandIso15693Protocol:(ComStSt25sdkCommandIso15693Protocol *)protocol
                                                    withInt:(jint)nbOfSectors
                                                    withInt:(jint)nbOfBlocksPerSector {
  ComStSt25sdkType5STType5Sector_initWithComStSt25sdkCommandIso15693Protocol_withInt_withInt_(self, protocol, nbOfSectors, nbOfBlocksPerSector);
  return self;
}

- (void)invalidateCache {
  mCacheInvalidated_ = true;
}

- (void)validateCache {
  mCacheInvalidated_ = false;
}

- (void)activateCache {
  mCacheActivated_ = true;
}

- (void)deactivateCache {
  mCacheActivated_ = false;
}

- (void)updateCache {
  if (mCacheActivated_) {
    [self read];
    mCacheInvalidated_ = false;
  }
}

- (void)read {
  IOSByteArray *buf = nil;
  jint totalNbOfSectorToRead = [self getNumberOfSectors];
  jint nbrOfBlockPerSector = [self getNumberOfBlocksPerSector];
  jint blocksIndex;
  if (mSectorSecStatus_ == nil || [mSectorSecStatus_ capacity] != totalNbOfSectorToRead) mSectorSecStatus_ = JavaNioByteBuffer_allocateWithInt_(totalNbOfSectorToRead);
  (void) [((JavaNioByteBuffer *) nil_chk(mSectorSecStatus_)) positionWithInt:0];
  for (jint indexSector = 0; indexSector < totalNbOfSectorToRead; indexSector++) {
    blocksIndex = indexSector * nbrOfBlockPerSector;
    if ([mIso15693Command_ isKindOfClass:[ComStSt25sdkCommandVicinityCommand class]]) {
      buf = [((ComStSt25sdkCommandVicinityCommand *) nil_chk(((ComStSt25sdkCommandVicinityCommand *) mIso15693Command_))) getMultipleBlockSecStatusWithByteArray:ComStSt25sdkHelper_convertIntTo2BytesHexaFormatWithInt_(blocksIndex) withByteArray:ComStSt25sdkHelper_convertIntTo2BytesHexaFormatWithInt_(0)];
    }
    else if ([mIso15693Command_ isKindOfClass:[ComStSt25sdkCommandIso15693CustomCommand class]]) {
      buf = [((ComStSt25sdkCommandIso15693CustomCommand *) nil_chk(((ComStSt25sdkCommandIso15693CustomCommand *) mIso15693Command_))) getMultipleBlockSecStatusWithByte:(jbyte) blocksIndex withByte:(jbyte) ((jint) 0x00)];
    }
    if (buf != nil && (IOSByteArray_Get(buf, 0) == (jint) 0x00)) {
      (void) [((JavaNioByteBuffer *) nil_chk(mSectorSecStatus_)) putWithByteArray:buf withInt:1 withInt:1];
    }
    else @throw new_ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_withByteArray_(JreLoadEnum(ComStSt25sdkSTException_STExceptionCode, CMD_FAILED), buf);
  }
}

- (jboolean)isCacheValid {
  return !mCacheInvalidated_;
}

- (jboolean)isCacheActivated {
  return mCacheActivated_;
}

- (jint)getNumberOfSectors {
  return mNbOfSectors_;
}

- (jint)getNumberOfBlocksPerSector {
  return mNbOfBlocksPerSector_;
}

- (jbyte)getSecurityStatusWithInt:(jint)sector {
  ComStSt25sdkType5STType5Sector_checkCache(self);
  if ([((JavaNioByteBuffer *) nil_chk(mSectorSecStatus_)) capacity] >= sector) {
    return IOSByteArray_Get(nil_chk([((JavaNioByteBuffer *) nil_chk(mSectorSecStatus_)) array]), sector);
  }
  else {
    @throw new_ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_(JreLoadEnum(ComStSt25sdkSTException_STExceptionCode, BAD_PARAMETER));
  }
}

- (IOSByteArray *)getSecurityStatus {
  ComStSt25sdkType5STType5Sector_checkCache(self);
  return [((JavaNioByteBuffer *) nil_chk(mSectorSecStatus_)) array];
}

- (void)setSecurityStatusWithInt:(jint)sector
                        withByte:(jbyte)value {
  if ([mIso15693Command_ isKindOfClass:[ComStSt25sdkCommandVicinityCommand class]]) {
    [((ComStSt25sdkCommandVicinityCommand *) nil_chk(((ComStSt25sdkCommandVicinityCommand *) mIso15693Command_))) lockSectorWithByteArray:ComStSt25sdkHelper_convertIntTo2BytesHexaFormatWithInt_(sector * mNbOfBlocksPerSector_) withByte:value];
  }
  else if ([mIso15693Command_ isKindOfClass:[ComStSt25sdkCommandIso15693CustomCommand class]]) {
    [((ComStSt25sdkCommandIso15693CustomCommand *) nil_chk(((ComStSt25sdkCommandIso15693CustomCommand *) mIso15693Command_))) lockSectorWithByte:(jbyte) (sector * mNbOfBlocksPerSector_) withByte:value];
  }
  [self invalidateCache];
}

- (void)checkCache {
  ComStSt25sdkType5STType5Sector_checkCache(self);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, 1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "B", 0x1, 2, 3, 1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, 1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, 1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComStSt25sdkCommandIso15693Protocol:withInt:withInt:);
  methods[1].selector = @selector(invalidateCache);
  methods[2].selector = @selector(validateCache);
  methods[3].selector = @selector(activateCache);
  methods[4].selector = @selector(deactivateCache);
  methods[5].selector = @selector(updateCache);
  methods[6].selector = @selector(read);
  methods[7].selector = @selector(isCacheValid);
  methods[8].selector = @selector(isCacheActivated);
  methods[9].selector = @selector(getNumberOfSectors);
  methods[10].selector = @selector(getNumberOfBlocksPerSector);
  methods[11].selector = @selector(getSecurityStatusWithInt:);
  methods[12].selector = @selector(getSecurityStatus);
  methods[13].selector = @selector(setSecurityStatusWithInt:withByte:);
  methods[14].selector = @selector(checkCache);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "mCacheActivated_", "Z", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "mCacheInvalidated_", "Z", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "mSectorSecStatus_", "LJavaNioByteBuffer;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mIso15693Command_", "LComStSt25sdkCommandIso15693Protocol;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mNbOfSectors_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mNbOfBlocksPerSector_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComStSt25sdkCommandIso15693Protocol;II", "LComStSt25sdkSTException;", "getSecurityStatus", "I", "setSecurityStatus", "IB" };
  static const J2ObjcClassInfo _ComStSt25sdkType5STType5Sector = { "STType5Sector", "com.st.st25sdk.type5", ptrTable, methods, fields, 7, 0x1, 15, 6, -1, -1, -1, -1, -1 };
  return &_ComStSt25sdkType5STType5Sector;
}

@end

void ComStSt25sdkType5STType5Sector_initWithComStSt25sdkCommandIso15693Protocol_withInt_withInt_(ComStSt25sdkType5STType5Sector *self, ComStSt25sdkCommandIso15693Protocol *protocol, jint nbOfSectors, jint nbOfBlocksPerSector) {
  NSObject_init(self);
  self->mSectorSecStatus_ = nil;
  self->mCacheActivated_ = true;
  self->mCacheInvalidated_ = true;
  self->mIso15693Command_ = protocol;
  self->mNbOfSectors_ = nbOfSectors;
  self->mNbOfBlocksPerSector_ = nbOfBlocksPerSector;
}

ComStSt25sdkType5STType5Sector *new_ComStSt25sdkType5STType5Sector_initWithComStSt25sdkCommandIso15693Protocol_withInt_withInt_(ComStSt25sdkCommandIso15693Protocol *protocol, jint nbOfSectors, jint nbOfBlocksPerSector) {
  J2OBJC_NEW_IMPL(ComStSt25sdkType5STType5Sector, initWithComStSt25sdkCommandIso15693Protocol_withInt_withInt_, protocol, nbOfSectors, nbOfBlocksPerSector)
}

ComStSt25sdkType5STType5Sector *create_ComStSt25sdkType5STType5Sector_initWithComStSt25sdkCommandIso15693Protocol_withInt_withInt_(ComStSt25sdkCommandIso15693Protocol *protocol, jint nbOfSectors, jint nbOfBlocksPerSector) {
  J2OBJC_CREATE_IMPL(ComStSt25sdkType5STType5Sector, initWithComStSt25sdkCommandIso15693Protocol_withInt_withInt_, protocol, nbOfSectors, nbOfBlocksPerSector)
}

void ComStSt25sdkType5STType5Sector_checkCache(ComStSt25sdkType5STType5Sector *self) {
  if (!self->mCacheActivated_) {
    [self read];
  }
  else if (self->mCacheInvalidated_) [self updateCache];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComStSt25sdkType5STType5Sector)
