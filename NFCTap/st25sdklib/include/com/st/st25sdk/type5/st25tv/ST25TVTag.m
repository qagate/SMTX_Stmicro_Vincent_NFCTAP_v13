//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: st25sdk_ios/type5/st25tv/ST25TVTag.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/st/st25sdk/Helper.h"
#include "com/st/st25sdk/MultiAreaInterface.h"
#include "com/st/st25sdk/NFCTag.h"
#include "com/st/st25sdk/RFReaderInterface.h"
#include "com/st/st25sdk/STException.h"
#include "com/st/st25sdk/STRegister.h"
#include "com/st/st25sdk/TagCache.h"
#include "com/st/st25sdk/TagHelper.h"
#include "com/st/st25sdk/UntraceableModeInterface.h"
#include "com/st/st25sdk/command/Iso15693CustomCommand.h"
#include "com/st/st25sdk/command/Iso15693Protocol.h"
#include "com/st/st25sdk/command/Type5Command.h"
#include "com/st/st25sdk/type5/STType5MultiAreaTag.h"
#include "com/st/st25sdk/type5/st25tv/ST25TVRegisterArea1SecurityAttribute.h"
#include "com/st/st25sdk/type5/st25tv/ST25TVRegisterArea2SecurityAttribute.h"
#include "com/st/st25sdk/type5/st25tv/ST25TVRegisterCounterConfiguration.h"
#include "com/st/st25sdk/type5/st25tv/ST25TVRegisterCounterValue.h"
#include "com/st/st25sdk/type5/st25tv/ST25TVRegisterEasSecurityActivation.h"
#include "com/st/st25sdk/type5/st25tv/ST25TVRegisterKeyId.h"
#include "com/st/st25sdk/type5/st25tv/ST25TVRegisterLockConfiguration.h"
#include "com/st/st25sdk/type5/st25tv/ST25TVRegisterTamperConfiguration.h"
#include "com/st/st25sdk/type5/st25tv/ST25TVTag.h"
#include "java/io/UnsupportedEncodingException.h"
#include "java/lang/Integer.h"
#include "java/util/ArrayList.h"
#include "java/util/Arrays.h"
#include "java/util/Collection.h"
#include "java/util/Collections.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "java/util/Random.h"
#include "java/util/Set.h"
#include "java/util/TreeMap.h"

#pragma clang diagnostic ignored "-Wprotocol"

@interface ComStSt25sdkType5St25tvST25TVTag () {
 @public
  JavaUtilTreeMap *mST25TVRegisterMap_;
  ComStSt25sdkType5St25tvST25TVRegisterArea1SecurityAttribute *mRegisterArea1SecurityAttribute_;
  ComStSt25sdkType5St25tvST25TVRegisterArea2SecurityAttribute *mRegisterArea2SecurityAttribute_;
  ComStSt25sdkType5St25tvST25TVRegisterEasSecurityActivation *mRegisterEasSecurityActivation_;
  ComStSt25sdkType5St25tvST25TVRegisterCounterConfiguration *mRegisterCounterConfiguration_;
  ComStSt25sdkType5St25tvST25TVRegisterCounterValue *mRegisterCounterValue_;
  ComStSt25sdkType5St25tvST25TVRegisterTamperConfiguration *mRegisterTamperConfiguration_;
  ComStSt25sdkType5St25tvST25TVRegisterLockConfiguration *mRegisterLockConfiguration_;
  ComStSt25sdkType5St25tvST25TVRegisterKeyId *mRegisterKeyId_;
  jboolean mIsEasEnabled_;
  jboolean mCheckEasStatus_;
  jboolean mIsTamperDetectSupported_;
  jboolean mIsTamperDetectStatusAvailable_;
}

- (jboolean)isPasswordNumberValidWithInt:(jint)passwordNumber;

- (IOSByteArray *)updatePwdWithByteArray:(IOSByteArray *)a
                                withByte:(jbyte)flag;

- (IOSByteArray *)mWithByteArray:(IOSByteArray *)a
                   withByteArray:(IOSByteArray *)b;

- (IOSByteArray *)alloc__WithInt:(jint)s OBJC_METHOD_FAMILY_NONE;

- (void)readEasState;

- (void)checkTamperDetectStatus;

@end

J2OBJC_FIELD_SETTER(ComStSt25sdkType5St25tvST25TVTag, mST25TVRegisterMap_, JavaUtilTreeMap *)
J2OBJC_FIELD_SETTER(ComStSt25sdkType5St25tvST25TVTag, mRegisterArea1SecurityAttribute_, ComStSt25sdkType5St25tvST25TVRegisterArea1SecurityAttribute *)
J2OBJC_FIELD_SETTER(ComStSt25sdkType5St25tvST25TVTag, mRegisterArea2SecurityAttribute_, ComStSt25sdkType5St25tvST25TVRegisterArea2SecurityAttribute *)
J2OBJC_FIELD_SETTER(ComStSt25sdkType5St25tvST25TVTag, mRegisterEasSecurityActivation_, ComStSt25sdkType5St25tvST25TVRegisterEasSecurityActivation *)
J2OBJC_FIELD_SETTER(ComStSt25sdkType5St25tvST25TVTag, mRegisterCounterConfiguration_, ComStSt25sdkType5St25tvST25TVRegisterCounterConfiguration *)
J2OBJC_FIELD_SETTER(ComStSt25sdkType5St25tvST25TVTag, mRegisterCounterValue_, ComStSt25sdkType5St25tvST25TVRegisterCounterValue *)
J2OBJC_FIELD_SETTER(ComStSt25sdkType5St25tvST25TVTag, mRegisterTamperConfiguration_, ComStSt25sdkType5St25tvST25TVRegisterTamperConfiguration *)
J2OBJC_FIELD_SETTER(ComStSt25sdkType5St25tvST25TVTag, mRegisterLockConfiguration_, ComStSt25sdkType5St25tvST25TVRegisterLockConfiguration *)
J2OBJC_FIELD_SETTER(ComStSt25sdkType5St25tvST25TVTag, mRegisterKeyId_, ComStSt25sdkType5St25tvST25TVRegisterKeyId *)

__attribute__((unused)) static jboolean ComStSt25sdkType5St25tvST25TVTag_isPasswordNumberValidWithInt_(ComStSt25sdkType5St25tvST25TVTag *self, jint passwordNumber);

__attribute__((unused)) static IOSByteArray *ComStSt25sdkType5St25tvST25TVTag_updatePwdWithByteArray_withByte_(ComStSt25sdkType5St25tvST25TVTag *self, IOSByteArray *a, jbyte flag);

__attribute__((unused)) static IOSByteArray *ComStSt25sdkType5St25tvST25TVTag_mWithByteArray_withByteArray_(ComStSt25sdkType5St25tvST25TVTag *self, IOSByteArray *a, IOSByteArray *b);

__attribute__((unused)) static IOSByteArray *ComStSt25sdkType5St25tvST25TVTag_alloc__WithInt_(ComStSt25sdkType5St25tvST25TVTag *self, jint s);

__attribute__((unused)) static void ComStSt25sdkType5St25tvST25TVTag_readEasState(ComStSt25sdkType5St25tvST25TVTag *self);

__attribute__((unused)) static void ComStSt25sdkType5St25tvST25TVTag_checkTamperDetectStatus(ComStSt25sdkType5St25tvST25TVTag *self);

@interface ComStSt25sdkType5St25tvST25TVTag_$Lambda$1 : NSObject < ComStSt25sdkSTRegister_RegisterListener > {
 @public
  ComStSt25sdkType5St25tvST25TVTag *this$0_;
}

- (void)registerChange;

@end

J2OBJC_EMPTY_STATIC_INIT(ComStSt25sdkType5St25tvST25TVTag_$Lambda$1)

__attribute__((unused)) static void ComStSt25sdkType5St25tvST25TVTag_$Lambda$1_initWithComStSt25sdkType5St25tvST25TVTag_(ComStSt25sdkType5St25tvST25TVTag_$Lambda$1 *self, ComStSt25sdkType5St25tvST25TVTag *outer$);

__attribute__((unused)) static ComStSt25sdkType5St25tvST25TVTag_$Lambda$1 *new_ComStSt25sdkType5St25tvST25TVTag_$Lambda$1_initWithComStSt25sdkType5St25tvST25TVTag_(ComStSt25sdkType5St25tvST25TVTag *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComStSt25sdkType5St25tvST25TVTag_$Lambda$1 *create_ComStSt25sdkType5St25tvST25TVTag_$Lambda$1_initWithComStSt25sdkType5St25tvST25TVTag_(ComStSt25sdkType5St25tvST25TVTag *outer$);

@interface ComStSt25sdkType5St25tvST25TVTag_$Lambda$2 : NSObject < ComStSt25sdkSTRegister_RegisterListener > {
 @public
  ComStSt25sdkType5St25tvST25TVTag *this$0_;
}

- (void)registerChange;

@end

J2OBJC_EMPTY_STATIC_INIT(ComStSt25sdkType5St25tvST25TVTag_$Lambda$2)

__attribute__((unused)) static void ComStSt25sdkType5St25tvST25TVTag_$Lambda$2_initWithComStSt25sdkType5St25tvST25TVTag_(ComStSt25sdkType5St25tvST25TVTag_$Lambda$2 *self, ComStSt25sdkType5St25tvST25TVTag *outer$);

__attribute__((unused)) static ComStSt25sdkType5St25tvST25TVTag_$Lambda$2 *new_ComStSt25sdkType5St25tvST25TVTag_$Lambda$2_initWithComStSt25sdkType5St25tvST25TVTag_(ComStSt25sdkType5St25tvST25TVTag *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComStSt25sdkType5St25tvST25TVTag_$Lambda$2 *create_ComStSt25sdkType5St25tvST25TVTag_$Lambda$2_initWithComStSt25sdkType5St25tvST25TVTag_(ComStSt25sdkType5St25tvST25TVTag *outer$);

@implementation ComStSt25sdkType5St25tvST25TVTag

+ (jint)ST25TV_REGISTER_AREA1_SECURITY_ATTRIBUTE {
  return ComStSt25sdkType5St25tvST25TVTag_ST25TV_REGISTER_AREA1_SECURITY_ATTRIBUTE;
}

+ (jint)ST25TV_REGISTER_AREA2_SECURITY_ATTRIBUTE {
  return ComStSt25sdkType5St25tvST25TVTag_ST25TV_REGISTER_AREA2_SECURITY_ATTRIBUTE;
}

+ (jint)ST25TV_REGISTER_EAS_SECURITY_ACTIVATION {
  return ComStSt25sdkType5St25tvST25TVTag_ST25TV_REGISTER_EAS_SECURITY_ACTIVATION;
}

+ (jint)ST25TV_REGISTER_WRITE_COUNTER_CONFIGURATION {
  return ComStSt25sdkType5St25tvST25TVTag_ST25TV_REGISTER_WRITE_COUNTER_CONFIGURATION;
}

+ (jint)ST25TV_REGISTER_COUNTER_READ {
  return ComStSt25sdkType5St25tvST25TVTag_ST25TV_REGISTER_COUNTER_READ;
}

+ (jint)ST25TV_REGISTER_COUNTER_READ_LENGTH {
  return ComStSt25sdkType5St25tvST25TVTag_ST25TV_REGISTER_COUNTER_READ_LENGTH;
}

+ (jint)ST25TV_REGISTER_TAMPER_CONFIGURATION {
  return ComStSt25sdkType5St25tvST25TVTag_ST25TV_REGISTER_TAMPER_CONFIGURATION;
}

+ (jint)ST25TV_REGISTER_LOCK_CONFIGURATION {
  return ComStSt25sdkType5St25tvST25TVTag_ST25TV_REGISTER_LOCK_CONFIGURATION;
}

+ (jint)ST25TV_REGISTER_KEY_ID {
  return ComStSt25sdkType5St25tvST25TVTag_ST25TV_REGISTER_KEY_ID;
}

+ (jint)ST25TV_NUMBER_OF_REGISTERS {
  return ComStSt25sdkType5St25tvST25TVTag_ST25TV_NUMBER_OF_REGISTERS;
}

+ (jint)ST25TV_KILL_PASSWORD_ID {
  return ComStSt25sdkType5St25tvST25TVTag_ST25TV_KILL_PASSWORD_ID;
}

+ (jint)ST25TV_UNTRACEABLE_MODE_PASSWORD_ID {
  return ComStSt25sdkType5St25tvST25TVTag_ST25TV_UNTRACEABLE_MODE_PASSWORD_ID;
}

+ (jint)ST25TV_AREA1_PASSWORD_ID {
  return ComStSt25sdkType5St25tvST25TVTag_ST25TV_AREA1_PASSWORD_ID;
}

+ (jint)ST25TV_AREA2_PASSWORD_ID {
  return ComStSt25sdkType5St25tvST25TVTag_ST25TV_AREA2_PASSWORD_ID;
}

+ (jint)ST25TV_CONFIGURATION_PASSWORD_ID {
  return ComStSt25sdkType5St25tvST25TVTag_ST25TV_CONFIGURATION_PASSWORD_ID;
}

+ (jint)ST25TV_NUMBER_OF_PASSWORDS {
  return ComStSt25sdkType5St25tvST25TVTag_ST25TV_NUMBER_OF_PASSWORDS;
}

+ (jint)EAS_TELEGRAM_BLOCK_OFFSET {
  return ComStSt25sdkType5St25tvST25TVTag_EAS_TELEGRAM_BLOCK_OFFSET;
}

+ (jint)EAS_TELEGRAM_MAX_LENGTH {
  return ComStSt25sdkType5St25tvST25TVTag_EAS_TELEGRAM_MAX_LENGTH;
}

+ (id<JavaUtilList>)getSt25tvExtraFeatureList {
  return ComStSt25sdkType5St25tvST25TVTag_getSt25tvExtraFeatureList();
}

- (instancetype)initWithComStSt25sdkRFReaderInterface:(id<ComStSt25sdkRFReaderInterface>)readerInterface
                                        withByteArray:(IOSByteArray *)uid {
  ComStSt25sdkType5St25tvST25TVTag_initWithComStSt25sdkRFReaderInterface_withByteArray_(self, readerInterface, uid);
  return self;
}

- (instancetype)initWithComStSt25sdkRFReaderInterface:(id<ComStSt25sdkRFReaderInterface>)readerInterface
                                        withByteArray:(IOSByteArray *)uid
                                          withBoolean:(jboolean)checkEasStatus {
  ComStSt25sdkType5St25tvST25TVTag_initWithComStSt25sdkRFReaderInterface_withByteArray_withBoolean_(self, readerInterface, uid, checkEasStatus);
  return self;
}

- (instancetype)initWithComStSt25sdkRFReaderInterface:(id<ComStSt25sdkRFReaderInterface>)readerInterface
                                        withByteArray:(IOSByteArray *)uid
                                          withBoolean:(jboolean)checkEasStatus
                                          withBoolean:(jboolean)sendInitCommands {
  ComStSt25sdkType5St25tvST25TVTag_initWithComStSt25sdkRFReaderInterface_withByteArray_withBoolean_withBoolean_(self, readerInterface, uid, checkEasStatus, sendInitCommands);
  return self;
}

- (IOSByteArray *)getRandomNumber {
  return [self getRandomNumberWithByte:[((ComStSt25sdkCommandIso15693CustomCommand *) nil_chk(mIso15693CustomCommand_)) getFlag]];
}

- (IOSByteArray *)getRandomNumberWithByte:(jbyte)flag {
  IOSByteArray *response = [((ComStSt25sdkCommandIso15693CustomCommand *) nil_chk(mIso15693CustomCommand_)) getRandomNumberWithByte:flag withByteArray:[self getUid]];
  if (((IOSByteArray *) nil_chk(response))->size_ == 3) {
    IOSByteArray *randomNumber = [IOSByteArray newArrayWithLength:2];
    *IOSByteArray_GetRef(randomNumber, 0) = IOSByteArray_Get(response, 1);
    *IOSByteArray_GetRef(randomNumber, 1) = IOSByteArray_Get(response, 2);
    return randomNumber;
  }
  @throw new_ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_withByteArray_(JreLoadEnum(ComStSt25sdkSTException_STExceptionCode, CMD_FAILED), response);
}

- (jboolean)isPasswordNumberValidWithInt:(jint)passwordNumber {
  return ComStSt25sdkType5St25tvST25TVTag_isPasswordNumberValidWithInt_(self, passwordNumber);
}

- (IOSByteArray *)updatePwdWithByteArray:(IOSByteArray *)a
                                withByte:(jbyte)flag {
  return ComStSt25sdkType5St25tvST25TVTag_updatePwdWithByteArray_withByte_(self, a, flag);
}

- (IOSByteArray *)mWithByteArray:(IOSByteArray *)a
                   withByteArray:(IOSByteArray *)b {
  return ComStSt25sdkType5St25tvST25TVTag_mWithByteArray_withByteArray_(self, a, b);
}

- (IOSByteArray *)alloc__WithInt:(jint)s {
  return ComStSt25sdkType5St25tvST25TVTag_alloc__WithInt_(self, s);
}

- (void)presentPasswordWithInt:(jint)passwordNumber
                 withByteArray:(IOSByteArray *)password {
  [self presentPasswordWithInt:passwordNumber withByteArray:password withByte:[((ComStSt25sdkCommandIso15693CustomCommand *) nil_chk(mIso15693CustomCommand_)) getFlag]];
}

- (void)presentPasswordWithInt:(jint)passwordNumber
                 withByteArray:(IOSByteArray *)password
                      withByte:(jbyte)flag {
  if (!ComStSt25sdkType5St25tvST25TVTag_isPasswordNumberValidWithInt_(self, passwordNumber)) {
    @throw new_ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_(JreLoadEnum(ComStSt25sdkSTException_STExceptionCode, BAD_PARAMETER));
  }
  IOSByteArray *pwd = ComStSt25sdkType5St25tvST25TVTag_updatePwdWithByteArray_withByte_(self, password, flag);
  [((ComStSt25sdkCommandIso15693CustomCommand *) nil_chk(mIso15693CustomCommand_)) presentPwdWithByte:(jbyte) passwordNumber withByteArray:pwd withByte:flag withByteArray:[self getUid]];
}

- (void)writePasswordWithInt:(jint)passwordNumber
               withByteArray:(IOSByteArray *)newPassword {
  if (!ComStSt25sdkType5St25tvST25TVTag_isPasswordNumberValidWithInt_(self, passwordNumber)) {
    @throw new_ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_(JreLoadEnum(ComStSt25sdkSTException_STExceptionCode, BAD_PARAMETER));
  }
  if (newPassword == nil) {
    @throw new_ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_(JreLoadEnum(ComStSt25sdkSTException_STExceptionCode, BAD_PARAMETER));
  }
  if ([self getPasswordLengthWithInt:passwordNumber] == ComStSt25sdkTagHelper_PWD_ON_64_BITS) {
    if (newPassword->size_ != 8) {
      @throw new_ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_(JreLoadEnum(ComStSt25sdkSTException_STExceptionCode, BAD_PARAMETER));
    }
    IOSByteArray *newPasswordPart1 = JavaUtilArrays_copyOfRangeWithByteArray_withInt_withInt_(newPassword, 0, 4);
    IOSByteArray *newPasswordPart2 = JavaUtilArrays_copyOfRangeWithByteArray_withInt_withInt_(newPassword, 4, 8);
    [((ComStSt25sdkCommandIso15693CustomCommand *) nil_chk(mIso15693CustomCommand_)) writePwdWithByte:(jbyte) ComStSt25sdkType5St25tvST25TVTag_ST25TV_AREA1_PASSWORD_ID withByteArray:newPasswordPart1];
    [((ComStSt25sdkCommandIso15693CustomCommand *) nil_chk(mIso15693CustomCommand_)) writePwdWithByte:(jbyte) ComStSt25sdkType5St25tvST25TVTag_ST25TV_AREA2_PASSWORD_ID withByteArray:newPasswordPart2];
  }
  else {
    if (newPassword->size_ != 4) {
      @throw new_ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_(JreLoadEnum(ComStSt25sdkSTException_STExceptionCode, BAD_PARAMETER));
    }
    [((ComStSt25sdkCommandIso15693CustomCommand *) nil_chk(mIso15693CustomCommand_)) writePwdWithByte:(jbyte) passwordNumber withByteArray:newPassword];
  }
}

- (jint)getPasswordLengthWithInt:(jint)passwordNumber {
  jint passwordLength;
  if (!ComStSt25sdkType5St25tvST25TVTag_isPasswordNumberValidWithInt_(self, passwordNumber)) {
    @throw new_ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_(JreLoadEnum(ComStSt25sdkSTException_STExceptionCode, BAD_PARAMETER));
  }
  switch (passwordNumber) {
    case ComStSt25sdkType5St25tvST25TVTag_ST25TV_AREA1_PASSWORD_ID:
    if ([self getNumberOfAreas] == 1) {
      passwordLength = ComStSt25sdkTagHelper_PWD_ON_64_BITS;
    }
    else {
      passwordLength = ComStSt25sdkTagHelper_PWD_ON_32_BITS;
    }
    break;
    case ComStSt25sdkType5St25tvST25TVTag_ST25TV_KILL_PASSWORD_ID:
    case ComStSt25sdkType5St25tvST25TVTag_ST25TV_AREA2_PASSWORD_ID:
    case ComStSt25sdkType5St25tvST25TVTag_ST25TV_CONFIGURATION_PASSWORD_ID:
    default:
    passwordLength = ComStSt25sdkTagHelper_PWD_ON_32_BITS;
    break;
  }
  return passwordLength;
}

- (jint)getAreaPasswordLengthWithInt:(jint)area {
  jint passwordLength;
  if (![self isAreaNumberValidWithInt:area]) {
    @throw new_ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_(JreLoadEnum(ComStSt25sdkSTException_STExceptionCode, BAD_PARAMETER));
  }
  if (area == ComStSt25sdkMultiAreaInterface_AREA1) {
    passwordLength = [self getPasswordLengthWithInt:ComStSt25sdkType5St25tvST25TVTag_ST25TV_AREA1_PASSWORD_ID];
  }
  else if (area == ComStSt25sdkMultiAreaInterface_AREA2) {
    passwordLength = [self getPasswordLengthWithInt:ComStSt25sdkType5St25tvST25TVTag_ST25TV_AREA2_PASSWORD_ID];
  }
  else {
    @throw new_ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_(JreLoadEnum(ComStSt25sdkSTException_STExceptionCode, BAD_PARAMETER));
  }
  return passwordLength;
}

- (jint)getConfigurationPasswordNumber {
  return ComStSt25sdkType5St25tvST25TVTag_ST25TV_CONFIGURATION_PASSWORD_ID;
}

- (jint)getPasswordNumberWithInt:(jint)area {
  if (![self isAreaNumberValidWithInt:area]) {
    @throw new_ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_(JreLoadEnum(ComStSt25sdkSTException_STExceptionCode, BAD_PARAMETER));
  }
  if (area == ComStSt25sdkMultiAreaInterface_AREA1) {
    return ComStSt25sdkType5St25tvST25TVTag_ST25TV_AREA1_PASSWORD_ID;
  }
  else if (area == ComStSt25sdkMultiAreaInterface_AREA2) {
    return ComStSt25sdkType5St25tvST25TVTag_ST25TV_AREA2_PASSWORD_ID;
  }
  else {
    @throw new_ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_(JreLoadEnum(ComStSt25sdkSTException_STExceptionCode, BAD_PARAMETER));
  }
}

- (void)setPasswordNumberWithInt:(jint)area
                         withInt:(jint)passwordNumber {
  @throw new_ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_(JreLoadEnum(ComStSt25sdkSTException_STExceptionCode, NOT_SUPPORTED));
}

- (id<JavaUtilList>)getPossibleReadWriteProtectionWithInt:(jint)area {
  if (![self isAreaNumberValidWithInt:area]) {
    @throw new_ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_(JreLoadEnum(ComStSt25sdkSTException_STExceptionCode, BAD_PARAMETER));
  }
  id<JavaUtilList> possibleReadWriteProtections = new_JavaUtilArrayList_init();
  [possibleReadWriteProtections addWithId:JreLoadEnum(ComStSt25sdkTagHelper_ReadWriteProtection, READABLE_AND_WRITABLE)];
  [possibleReadWriteProtections addWithId:JreLoadEnum(ComStSt25sdkTagHelper_ReadWriteProtection, READABLE_AND_WRITE_PROTECTED_BY_PWD)];
  [possibleReadWriteProtections addWithId:JreLoadEnum(ComStSt25sdkTagHelper_ReadWriteProtection, READ_AND_WRITE_PROTECTED_BY_PWD)];
  [possibleReadWriteProtections addWithId:JreLoadEnum(ComStSt25sdkTagHelper_ReadWriteProtection, READ_PROTECTED_BY_PWD_AND_WRITE_IMPOSSIBLE)];
  return possibleReadWriteProtections;
}

- (ComStSt25sdkTagHelper_ReadWriteProtection *)getReadWriteProtectionWithInt:(jint)area {
  if (![self isAreaNumberValidWithInt:area]) {
    @throw new_ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_(JreLoadEnum(ComStSt25sdkSTException_STExceptionCode, BAD_PARAMETER));
  }
  switch (area) {
    case 1:
    return [((ComStSt25sdkType5St25tvST25TVRegisterArea1SecurityAttribute *) nil_chk(mRegisterArea1SecurityAttribute_)) getArea1ReadWriteProtection];
    case 2:
    return [((ComStSt25sdkType5St25tvST25TVRegisterArea2SecurityAttribute *) nil_chk(mRegisterArea2SecurityAttribute_)) getArea2SecurityStatus];
    default:
    @throw new_ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_(JreLoadEnum(ComStSt25sdkSTException_STExceptionCode, NOT_SUPPORTED));
  }
}

- (void)setReadWriteProtectionWithInt:(jint)area
withComStSt25sdkTagHelper_ReadWriteProtection:(ComStSt25sdkTagHelper_ReadWriteProtection *)protection {
  if (![self isAreaNumberValidWithInt:area]) {
    @throw new_ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_(JreLoadEnum(ComStSt25sdkSTException_STExceptionCode, BAD_PARAMETER));
  }
  switch (area) {
    case 1:
    [((ComStSt25sdkType5St25tvST25TVRegisterArea1SecurityAttribute *) nil_chk(mRegisterArea1SecurityAttribute_)) setArea1ReadWriteProtectionWithComStSt25sdkTagHelper_ReadWriteProtection:protection];
    break;
    case 2:
    [((ComStSt25sdkType5St25tvST25TVRegisterArea2SecurityAttribute *) nil_chk(mRegisterArea2SecurityAttribute_)) setArea2SecurityStatusWithComStSt25sdkTagHelper_ReadWriteProtection:protection];
    break;
    default:
    @throw new_ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_(JreLoadEnum(ComStSt25sdkSTException_STExceptionCode, NOT_SUPPORTED));
  }
}

- (void)setReadWriteProtectionWithInt:(jint)area
withComStSt25sdkTagHelper_ReadWriteProtection:(ComStSt25sdkTagHelper_ReadWriteProtection *)protection
                        withByteArray:(IOSByteArray *)password {
  [self presentPasswordWithInt:ComStSt25sdkType5St25tvST25TVTag_ST25TV_CONFIGURATION_PASSWORD_ID withByteArray:password];
  [self setReadWriteProtectionWithInt:area withComStSt25sdkTagHelper_ReadWriteProtection:protection];
}

- (IOSByteArray *)readConfigWithInt:(jint)configId {
  if ((configId < 0) || (configId >= ComStSt25sdkType5St25tvST25TVTag_ST25TV_NUMBER_OF_REGISTERS)) {
    @throw new_ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_(JreLoadEnum(ComStSt25sdkSTException_STExceptionCode, BAD_PARAMETER));
  }
  return [((ComStSt25sdkCommandIso15693CustomCommand *) nil_chk(mIso15693CustomCommand_)) readConfigWithByte:(jbyte) configId];
}

- (jbyte)writeConfigWithInt:(jint)configId
                   withByte:(jbyte)value {
  if ((configId < 0) || (configId >= ComStSt25sdkType5St25tvST25TVTag_ST25TV_NUMBER_OF_REGISTERS)) {
    @throw new_ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_(JreLoadEnum(ComStSt25sdkSTException_STExceptionCode, BAD_PARAMETER));
  }
  return [((ComStSt25sdkCommandIso15693CustomCommand *) nil_chk(mIso15693CustomCommand_)) writeConfigWithByte:(jbyte) configId withByte:value];
}

- (jboolean)isCounterEnabled {
  return [((ComStSt25sdkType5St25tvST25TVRegisterCounterConfiguration *) nil_chk([self getRegisterCounterConfiguration])) isCounterEnabled];
}

- (void)enableCounterWithBoolean:(jboolean)enableCounter {
  [((ComStSt25sdkType5St25tvST25TVRegisterCounterConfiguration *) nil_chk([self getRegisterCounterConfiguration])) setIsCounterEnabledWithBoolean:enableCounter];
}

- (void)resetCounter {
  [((ComStSt25sdkType5St25tvST25TVRegisterCounterConfiguration *) nil_chk([self getRegisterCounterConfiguration])) resetCounter];
}

- (jint)readCounterValue {
  [((id<ComStSt25sdkRFReaderInterface>) nil_chk([self getReaderInterface])) setTagResponseLengthInBytesWithInt:ComStSt25sdkType5St25tvST25TVTag_ST25TV_REGISTER_COUNTER_READ_LENGTH];
  return [((ComStSt25sdkType5St25tvST25TVRegisterCounterValue *) nil_chk([self getRegisterCounterValue])) getCounterValue];
}

- (void)enableUntraceableModeWithByteArray:(IOSByteArray *)password {
  IOSByteArray *pwd = ComStSt25sdkType5St25tvST25TVTag_updatePwdWithByteArray_withByte_(self, password, [((ComStSt25sdkCommandIso15693CustomCommand *) nil_chk(mIso15693CustomCommand_)) getFlag]);
  [((ComStSt25sdkCommandIso15693CustomCommand *) nil_chk(mIso15693CustomCommand_)) enableUntraceableModeWithByteArray:pwd];
}

- (void)toggleUntraceableModeWithByteArray:(IOSByteArray *)password
                                  withByte:(jbyte)flag {
  @throw new_ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_(JreLoadEnum(ComStSt25sdkSTException_STExceptionCode, NOT_SUPPORTED));
}

- (ComStSt25sdkUntraceableModeInterface_UntraceableModePolicy *)getUntraceableModePolicy {
  @throw new_ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_(JreLoadEnum(ComStSt25sdkSTException_STExceptionCode, NOT_SUPPORTED));
}

- (void)setUntraceableModePolicyWithComStSt25sdkUntraceableModeInterface_UntraceableModePolicy:(ComStSt25sdkUntraceableModeInterface_UntraceableModePolicy *)mode {
  @throw new_ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_(JreLoadEnum(ComStSt25sdkSTException_STExceptionCode, NOT_SUPPORTED));
}

- (ComStSt25sdkUntraceableModeInterface_UntraceableModeDefaultSettings *)getUntraceableModeDefaultSettings {
  @throw new_ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_(JreLoadEnum(ComStSt25sdkSTException_STExceptionCode, NOT_SUPPORTED));
}

- (void)setUntraceableModeDefaultSettingsWithComStSt25sdkUntraceableModeInterface_UntraceableModeDefaultSettings:(ComStSt25sdkUntraceableModeInterface_UntraceableModeDefaultSettings *)mode {
  @throw new_ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_(JreLoadEnum(ComStSt25sdkSTException_STExceptionCode, NOT_SUPPORTED));
}

- (jint)getMaxNumberOfAreas {
  return 2;
}

- (jint)getNumberOfAreas {
  if ([((ComStSt25sdkType5St25tvST25TVRegisterArea1SecurityAttribute *) nil_chk(mRegisterArea1SecurityAttribute_)) isMemoryConfiguredInSingleArea]) {
    return 1;
  }
  return 2;
}

- (void)setNumberOfAreasWithInt:(jint)nbOfAreas {
  if ((nbOfAreas <= 0) || (nbOfAreas > [self getMaxNumberOfAreas])) {
    @throw new_ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_(JreLoadEnum(ComStSt25sdkSTException_STExceptionCode, BAD_PARAMETER));
  }
  if (nbOfAreas == 1) {
    [((ComStSt25sdkType5St25tvST25TVRegisterArea1SecurityAttribute *) nil_chk(mRegisterArea1SecurityAttribute_)) setIsMemoryConfiguredInSingleAreaWithBoolean:true];
  }
  else {
    [((ComStSt25sdkType5St25tvST25TVRegisterArea1SecurityAttribute *) nil_chk(mRegisterArea1SecurityAttribute_)) setIsMemoryConfiguredInSingleAreaWithBoolean:false];
  }
}

- (jint)getAreaSizeInBytesWithInt:(jint)area {
  if (![self isAreaNumberValidWithInt:area]) {
    @throw new_ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_(JreLoadEnum(ComStSt25sdkSTException_STExceptionCode, BAD_PARAMETER));
  }
  if ([((ComStSt25sdkType5St25tvST25TVRegisterArea1SecurityAttribute *) nil_chk(mRegisterArea1SecurityAttribute_)) isMemoryConfiguredInSingleArea]) {
    return [self getMemSizeInBytes];
  }
  return [self getMemSizeInBytes] / 2;
}

- (jint)getAreaOffsetInBlocksWithInt:(jint)area {
  jint offsetInBlocks;
  if (![self isAreaNumberValidWithInt:area]) {
    @throw new_ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_(JreLoadEnum(ComStSt25sdkSTException_STExceptionCode, BAD_PARAMETER));
  }
  switch (area) {
    case ComStSt25sdkMultiAreaInterface_AREA2:
    offsetInBlocks = [self getAreaSizeInBytesWithInt:area] / [self getBlockSizeInBytes];
    break;
    case ComStSt25sdkMultiAreaInterface_AREA1:
    default:
    offsetInBlocks = 0;
    break;
  }
  return offsetInBlocks;
}

- (jint)getAreaOffsetInBytesWithInt:(jint)area {
  if (![self isAreaNumberValidWithInt:area]) {
    @throw new_ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_(JreLoadEnum(ComStSt25sdkSTException_STExceptionCode, BAD_PARAMETER));
  }
  return ([self getAreaOffsetInBlocksWithInt:area] * [self getBlockSizeInBytes]);
}

- (jint)getAreaFromByteAddressWithInt:(jint)address {
  jint memSizeInBytes = [self getMemSizeInBytes];
  if (address < 0 || address >= memSizeInBytes) {
    @throw new_ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_(JreLoadEnum(ComStSt25sdkSTException_STExceptionCode, BAD_PARAMETER));
  }
  jint numberOfAreas = [self getNumberOfAreas];
  if (numberOfAreas == 1) {
    return ComStSt25sdkMultiAreaInterface_AREA1;
  }
  else if (address < [self getAreaOffsetInBlocksWithInt:ComStSt25sdkMultiAreaInterface_AREA2] * [self getBlockSizeInBytes]) {
    return ComStSt25sdkMultiAreaInterface_AREA1;
  }
  else {
    return ComStSt25sdkMultiAreaInterface_AREA2;
  }
}

- (void)setEas {
  [self setEasWithByte:[((ComStSt25sdkCommandIso15693CustomCommand *) nil_chk(mIso15693CustomCommand_)) getFlag]];
}

- (void)setEasWithByte:(jbyte)flag {
  [((ComStSt25sdkCommandIso15693CustomCommand *) nil_chk(mIso15693CustomCommand_)) setEasWithByte:flag withByteArray:[self getUid]];
}

- (void)resetEas {
  [self resetEasWithByte:[((ComStSt25sdkCommandIso15693CustomCommand *) nil_chk(mIso15693CustomCommand_)) getFlag]];
}

- (void)resetEasWithByte:(jbyte)flag {
  [((ComStSt25sdkCommandIso15693CustomCommand *) nil_chk(mIso15693CustomCommand_)) resetEasWithByte:flag withByteArray:[self getUid]];
}

- (void)lockEas {
  [self lockEasWithByte:[((ComStSt25sdkCommandIso15693CustomCommand *) nil_chk(mIso15693CustomCommand_)) getFlag]];
}

- (void)lockEasWithByte:(jbyte)flag {
  [((ComStSt25sdkCommandIso15693CustomCommand *) nil_chk(mIso15693CustomCommand_)) lockEasWithByte:flag withByteArray:[self getUid]];
}

- (jboolean)isEasEnabled {
  if (mCheckEasStatus_) {
    return mIsEasEnabled_;
  }
  else {
    ComStSt25sdkType5St25tvST25TVTag_readEasState(self);
    return mIsEasEnabled_;
  }
}

- (NSString *)readEasTelegram {
  IOSByteArray *response = [((ComStSt25sdkCommandIso15693CustomCommand *) nil_chk(mIso15693CustomCommand_)) enableEASWithByte:(jbyte) ([mIso15693CustomCommand_ getFlag] & ~ComStSt25sdkCommandIso15693Protocol_OPTION_FLAG) withByteArray:[self getUid]];
  if (((IOSByteArray *) nil_chk(response))->size_ > 3) {
    IOSByteArray *telegram = JavaUtilArrays_copyOfRangeWithByteArray_withInt_withInt_(response, 1, response->size_);
    if (((IOSByteArray *) nil_chk(telegram))->size_ > 0) {
      NSString *data;
      @try {
        data = [NSString java_stringWithBytes:telegram charsetName:@"UTF-8"];
      }
      @catch (JavaIoUnsupportedEncodingException *e) {
        @throw new_ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_withByteArray_(JreLoadEnum(ComStSt25sdkSTException_STExceptionCode, CMD_FAILED), response);
      }
      return [((NSString *) nil_chk(data)) java_trim];
    }
  }
  @throw new_ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_withByteArray_(JreLoadEnum(ComStSt25sdkSTException_STExceptionCode, CMD_FAILED), response);
}

- (jint)readEasId {
  IOSByteArray *response = [((ComStSt25sdkCommandIso15693CustomCommand *) nil_chk(mIso15693CustomCommand_)) enableEASWithByte:(jbyte) (jint) 0x00 withByteArray:nil withByte:(jbyte) ([mIso15693CustomCommand_ getFlag] | ComStSt25sdkCommandIso15693Protocol_OPTION_FLAG) withByteArray:[self getUid]];
  if (((IOSByteArray *) nil_chk(response))->size_ == 3) {
    return ((JreLShift32(ComStSt25sdkHelper_convertByteToUnsignedIntWithByte_(IOSByteArray_Get(response, 2)), 8)) + ComStSt25sdkHelper_convertByteToUnsignedIntWithByte_(IOSByteArray_Get(response, 1)));
  }
  @throw new_ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_withByteArray_(JreLoadEnum(ComStSt25sdkSTException_STExceptionCode, CMD_FAILED), response);
}

- (IOSByteArray *)enableEasWithByte:(jbyte)easIdMask
                      withByteArray:(IOSByteArray *)easId
                           withByte:(jbyte)flag {
  return [((ComStSt25sdkCommandIso15693CustomCommand *) nil_chk(mIso15693CustomCommand_)) enableEASWithByte:easIdMask withByteArray:easId withByte:flag withByteArray:[self getUid]];
}

- (void)writeEasIdWithInt:(jint)easId {
  [self writeEasIdWithInt:easId withByte:[((ComStSt25sdkCommandIso15693CustomCommand *) nil_chk(mIso15693CustomCommand_)) getFlag]];
}

- (void)writeEasIdWithInt:(jint)easId
                 withByte:(jbyte)flag {
  if ((easId < 0) || (easId > (jint) 0xFFFF)) {
    @throw new_ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_(JreLoadEnum(ComStSt25sdkSTException_STExceptionCode, BAD_PARAMETER));
  }
  IOSByteArray *easIdData = [IOSByteArray newArrayWithBytes:(jbyte[]){ (jbyte) ((easId) & (jint) 0xFF), (jbyte) ((JreRShift32(easId, 8)) & (jint) 0xFF) } count:2];
  [((ComStSt25sdkCommandIso15693CustomCommand *) nil_chk(mIso15693CustomCommand_)) writeEasIdWithByteArray:easIdData withByte:flag withByteArray:[self getUid]];
}

- (void)readEasState {
  ComStSt25sdkType5St25tvST25TVTag_readEasState(self);
}

- (void)writeEasTelegramWithNSString:(NSString *)telegram {
  [self writeEasTelegramWithNSString:telegram withByte:[((ComStSt25sdkCommandIso15693CustomCommand *) nil_chk(mIso15693CustomCommand_)) getFlag]];
}

- (void)writeEasTelegramWithNSString:(NSString *)telegram
                            withByte:(jbyte)flag {
  IOSByteArray *telegramData = [((NSString *) nil_chk(telegram)) java_getBytes];
  jbyte easConfig;
  if (((IOSByteArray *) nil_chk(telegramData))->size_ > [self getMaxEasTelegramLength]) {
    @throw new_ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_(JreLoadEnum(ComStSt25sdkSTException_STExceptionCode, BAD_PARAMETER));
  }
  else if (telegramData->size_ > 16) {
    easConfig = (jint) 0x00;
  }
  else if (telegramData->size_ > 8) {
    easConfig = (jint) 0x01;
  }
  else if (telegramData->size_ > 4) {
    easConfig = (jint) 0x02;
  }
  else {
    easConfig = (jint) 0x03;
  }
  IOSByteArray *paddedTelegram = JavaUtilArrays_copyOfRangeWithByteArray_withInt_withInt_(telegramData, 0, 32);
  [self writeEasConfigWithByte:easConfig withByte:flag];
  [((ComStSt25sdkCommandType5Command *) nil_chk(mType5Cmd_)) writeBytesWithInt:ComStSt25sdkType5St25tvST25TVTag_EAS_TELEGRAM_BLOCK_OFFSET * [self getBlockSizeInBytes] withByteArray:paddedTelegram];
}

- (jint)getMaxEasTelegramLength {
  return ComStSt25sdkType5St25tvST25TVTag_EAS_TELEGRAM_MAX_LENGTH;
}

- (void)writeEasConfigWithByte:(jbyte)config {
  [self writeEasConfigWithByte:config withByte:[((ComStSt25sdkCommandIso15693CustomCommand *) nil_chk(mIso15693CustomCommand_)) getFlag]];
}

- (void)writeEasConfigWithByte:(jbyte)config
                      withByte:(jbyte)flag {
  [((ComStSt25sdkCommandIso15693CustomCommand *) nil_chk(mIso15693CustomCommand_)) writeEasConfigWithByte:config withByte:flag withByteArray:[self getUid]];
}

- (void)writeEasSecurityConfigurationWithBoolean:(jboolean)isEasWriteProtected {
  [((ComStSt25sdkType5St25tvST25TVRegisterEasSecurityActivation *) nil_chk([self getRegisterEasSecurityActivation])) setIsEasWriteProtectedWithBoolean:isEasWriteProtected];
}

- (jbyte)killWithByteArray:(IOSByteArray *)unencryptedKillPassword {
  return [((ComStSt25sdkCommandIso15693CustomCommand *) nil_chk(mIso15693CustomCommand_)) killWithByteArray:unencryptedKillPassword];
}

- (jbyte)writeKillWithByteArray:(IOSByteArray *)unencryptedKillPassword {
  return [((ComStSt25sdkCommandIso15693CustomCommand *) nil_chk(mIso15693CustomCommand_)) writeKillWithByteArray:unencryptedKillPassword];
}

- (jbyte)lockKill {
  return [((ComStSt25sdkCommandIso15693CustomCommand *) nil_chk(mIso15693CustomCommand_)) lockKill];
}

- (IOSByteArray *)initiateWithByte:(jbyte)flag {
  return [((ComStSt25sdkCommandIso15693CustomCommand *) nil_chk(mIso15693CustomCommand_)) initiateWithByte:flag];
}

- (IOSByteArray *)inventoryInitiatedWithByte:(jbyte)flag {
  return [((ComStSt25sdkCommandIso15693CustomCommand *) nil_chk(mIso15693CustomCommand_)) inventoryInitiatedWithByte:flag];
}

- (IOSByteArray *)inventoryInitiatedWithByte:(jbyte)flag
                                    withByte:(jbyte)maskLength
                               withByteArray:(IOSByteArray *)maskValue {
  return [((ComStSt25sdkCommandIso15693CustomCommand *) nil_chk(mIso15693CustomCommand_)) inventoryInitiatedWithByte:flag withByte:maskLength withByteArray:maskValue];
}

- (IOSByteArray *)inventoryInitiatedWithByte:(jbyte)flag
                                    withByte:(jbyte)maskLength
                               withByteArray:(IOSByteArray *)maskValue
                                    withByte:(jbyte)afiField {
  return [((ComStSt25sdkCommandIso15693CustomCommand *) nil_chk(mIso15693CustomCommand_)) inventoryInitiatedWithByte:flag withByte:maskLength withByteArray:maskValue withByte:afiField];
}

- (IOSByteArray *)fastInitiateWithByte:(jbyte)flag {
  return [((ComStSt25sdkCommandIso15693CustomCommand *) nil_chk(mIso15693CustomCommand_)) fastInitiateWithByte:flag];
}

- (IOSByteArray *)fastInventoryInitiatedWithByte:(jbyte)flag {
  return [((ComStSt25sdkCommandIso15693CustomCommand *) nil_chk(mIso15693CustomCommand_)) fastInventoryInitiatedWithByte:flag];
}

- (IOSByteArray *)fastInventoryInitiatedWithByte:(jbyte)flag
                                        withByte:(jbyte)maskLength
                                   withByteArray:(IOSByteArray *)maskValue {
  return [((ComStSt25sdkCommandIso15693CustomCommand *) nil_chk(mIso15693CustomCommand_)) fastInventoryInitiatedWithByte:flag withByte:maskLength withByteArray:maskValue];
}

- (IOSByteArray *)fastInventoryInitiatedWithByte:(jbyte)flag
                                        withByte:(jbyte)maskLength
                                   withByteArray:(IOSByteArray *)maskValue
                                        withByte:(jbyte)afiField {
  return [((ComStSt25sdkCommandIso15693CustomCommand *) nil_chk(mIso15693CustomCommand_)) fastInventoryInitiatedWithByte:flag withByte:maskLength withByteArray:maskValue withByte:afiField];
}

- (IOSByteArray *)inventoryReadWithByte:(jbyte)flag
                               withByte:(jbyte)blockAddress
                               withByte:(jbyte)nbrOfBlocks {
  return [((ComStSt25sdkCommandIso15693CustomCommand *) nil_chk(mIso15693CustomCommand_)) inventoryReadWithByte:flag withByte:blockAddress withByte:nbrOfBlocks];
}

- (IOSByteArray *)inventoryReadWithByte:(jbyte)flag
                               withByte:(jbyte)maskLength
                          withByteArray:(IOSByteArray *)maskValue
                               withByte:(jbyte)blockAddress
                               withByte:(jbyte)nbrOfBlocks {
  return [((ComStSt25sdkCommandIso15693CustomCommand *) nil_chk(mIso15693CustomCommand_)) inventoryReadWithByte:flag withByte:maskLength withByteArray:maskValue withByte:blockAddress withByte:nbrOfBlocks];
}

- (IOSByteArray *)inventoryReadWithByte:(jbyte)flag
                               withByte:(jbyte)maskLength
                          withByteArray:(IOSByteArray *)maskValue
                               withByte:(jbyte)afiField
                               withByte:(jbyte)blockAddress
                               withByte:(jbyte)nbrOfBlocks {
  return [((ComStSt25sdkCommandIso15693CustomCommand *) nil_chk(mIso15693CustomCommand_)) inventoryReadWithByte:flag withByte:maskLength withByteArray:maskValue withByte:afiField withByte:blockAddress withByte:nbrOfBlocks];
}

- (IOSByteArray *)fastInventoryReadWithByte:(jbyte)flag
                                   withByte:(jbyte)blockAddress
                                   withByte:(jbyte)nbrOfBlocks {
  return [((ComStSt25sdkCommandIso15693CustomCommand *) nil_chk(mIso15693CustomCommand_)) fastInventoryReadWithByte:flag withByte:blockAddress withByte:nbrOfBlocks];
}

- (IOSByteArray *)fastInventoryReadWithByte:(jbyte)flag
                                   withByte:(jbyte)maskLength
                              withByteArray:(IOSByteArray *)maskValue
                                   withByte:(jbyte)blockAddress
                                   withByte:(jbyte)nbrOfBlocks {
  return [((ComStSt25sdkCommandIso15693CustomCommand *) nil_chk(mIso15693CustomCommand_)) fastInventoryReadWithByte:flag withByte:maskLength withByteArray:maskValue withByte:blockAddress withByte:nbrOfBlocks];
}

- (IOSByteArray *)fastInventoryReadWithByte:(jbyte)flag
                                   withByte:(jbyte)maskLength
                              withByteArray:(IOSByteArray *)maskValue
                                   withByte:(jbyte)afiField
                                   withByte:(jbyte)blockAddress
                                   withByte:(jbyte)nbrOfBlocks {
  return [((ComStSt25sdkCommandIso15693CustomCommand *) nil_chk(mIso15693CustomCommand_)) fastInventoryReadWithByte:flag withByte:maskLength withByteArray:maskValue withByte:afiField withByte:blockAddress withByte:nbrOfBlocks];
}

- (jbyte)getKeyIdNDA {
  @throw new_ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_(JreLoadEnum(ComStSt25sdkSTException_STExceptionCode, IMPLEMENTED_IN_NDA_VERSION));
}

- (jboolean)isSignatureOkNDA {
  @throw new_ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_(JreLoadEnum(ComStSt25sdkSTException_STExceptionCode, IMPLEMENTED_IN_NDA_VERSION));
}

- (IOSByteArray *)readSignatureNDA {
  @throw new_ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_(JreLoadEnum(ComStSt25sdkSTException_STExceptionCode, IMPLEMENTED_IN_NDA_VERSION));
}

- (NSString *)getDecodedCertificateNDA {
  @throw new_ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_(JreLoadEnum(ComStSt25sdkSTException_STExceptionCode, IMPLEMENTED_IN_NDA_VERSION));
}

- (id<JavaUtilList>)getRegisterList {
  return new_JavaUtilArrayList_initWithJavaUtilCollection_([((JavaUtilTreeMap *) nil_chk(mST25TVRegisterMap_)) values]);
}

- (id<JavaUtilList>)getDynamicRegisterList {
  return JavaUtilCollections_emptyList();
}

- (ComStSt25sdkSTRegister *)getRegisterWithInt:(jint)registerAddress {
  return [((JavaUtilTreeMap *) nil_chk(mST25TVRegisterMap_)) getWithId:JavaLangInteger_valueOfWithInt_(registerAddress)];
}

- (void)refreshRegistersStatus {
  for (id<JavaUtilMap_Entry> __strong entry_ in nil_chk([((JavaUtilTreeMap *) nil_chk(mST25TVRegisterMap_)) entrySet])) {
    [((ComStSt25sdkSTRegister *) nil_chk([((id<JavaUtilMap_Entry>) nil_chk(entry_)) getValue])) invalidateCache];
    [((ComStSt25sdkSTRegister *) nil_chk([entry_ getValue])) getRegisterValue];
  }
}

- (ComStSt25sdkType5St25tvST25TVRegisterEasSecurityActivation *)getRegisterEasSecurityActivation {
  return mRegisterEasSecurityActivation_;
}

- (ComStSt25sdkType5St25tvST25TVRegisterCounterConfiguration *)getRegisterCounterConfiguration {
  return mRegisterCounterConfiguration_;
}

- (ComStSt25sdkType5St25tvST25TVRegisterCounterValue *)getRegisterCounterValue {
  return mRegisterCounterValue_;
}

- (ComStSt25sdkType5St25tvST25TVRegisterTamperConfiguration *)getRegisterTamperConfiguration {
  return mRegisterTamperConfiguration_;
}

- (void)lockConfiguration {
  [((ComStSt25sdkType5St25tvST25TVRegisterLockConfiguration *) nil_chk(mRegisterLockConfiguration_)) lockConfiguration];
}

- (jboolean)isConfigurationLocked {
  return [((ComStSt25sdkType5St25tvST25TVRegisterLockConfiguration *) nil_chk(mRegisterLockConfiguration_)) isConfigurationLocked];
}

- (void)checkTamperDetectStatus {
  ComStSt25sdkType5St25tvST25TVTag_checkTamperDetectStatus(self);
}

- (jboolean)isTamperDetectSupported {
  if (!mIsTamperDetectStatusAvailable_) {
    ComStSt25sdkType5St25tvST25TVTag_checkTamperDetectStatus(self);
  }
  return mIsTamperDetectSupported_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaUtilList;", 0x9, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, 2, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, 2, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 4, 2, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, 2, -1, -1, -1 },
    { NULL, "[B", 0x1, 5, 6, 2, -1, -1, -1 },
    { NULL, "Z", 0x2, 7, 8, -1, -1, -1, -1 },
    { NULL, "[B", 0x2, 9, 10, 2, -1, -1, -1 },
    { NULL, "[B", 0x2, 11, 12, -1, -1, -1, -1 },
    { NULL, "[B", 0x2, 13, 8, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 14, 15, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 14, 16, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 17, 15, 2, -1, -1, -1 },
    { NULL, "I", 0x1, 18, 8, 2, -1, -1, -1 },
    { NULL, "I", 0x1, 19, 8, 2, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 20, 8, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 21, 22, 2, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, 23, 8, 2, 24, -1, -1 },
    { NULL, "LComStSt25sdkTagHelper_ReadWriteProtection;", 0x1, 25, 8, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 26, 27, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 26, 28, 2, -1, -1, -1 },
    { NULL, "[B", 0x1, 29, 8, 2, -1, -1, -1 },
    { NULL, "B", 0x1, 30, 31, 2, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 32, 33, 2, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 2, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 34, 35, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 36, 10, 2, -1, -1, -1 },
    { NULL, "LComStSt25sdkUntraceableModeInterface_UntraceableModePolicy;", 0x1, -1, -1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 37, 38, 2, -1, -1, -1 },
    { NULL, "LComStSt25sdkUntraceableModeInterface_UntraceableModeDefaultSettings;", 0x1, -1, -1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 39, 40, 2, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 41, 8, 2, -1, -1, -1 },
    { NULL, "I", 0x1, 42, 8, 2, -1, -1, -1 },
    { NULL, "I", 0x1, 43, 8, 2, -1, -1, -1 },
    { NULL, "I", 0x1, 44, 8, 2, -1, -1, -1 },
    { NULL, "I", 0x1, 45, 8, 2, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 46, 6, 2, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 47, 6, 2, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 48, 6, 2, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, 2, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, 2, -1, -1, -1 },
    { NULL, "[B", 0x1, 49, 50, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 51, 8, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 51, 31, 2, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 52, 53, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 52, 54, 2, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 55, 6, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 55, 56, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 57, 33, 2, -1, -1, -1 },
    { NULL, "B", 0x1, 58, 35, 2, -1, -1, -1 },
    { NULL, "B", 0x1, 59, 35, 2, -1, -1, -1 },
    { NULL, "B", 0x1, -1, -1, 2, -1, -1, -1 },
    { NULL, "[B", 0x1, 60, 6, 2, -1, -1, -1 },
    { NULL, "[B", 0x1, 61, 6, 2, -1, -1, -1 },
    { NULL, "[B", 0x1, 61, 62, 2, -1, -1, -1 },
    { NULL, "[B", 0x1, 61, 63, 2, -1, -1, -1 },
    { NULL, "[B", 0x1, 64, 6, 2, -1, -1, -1 },
    { NULL, "[B", 0x1, 65, 6, 2, -1, -1, -1 },
    { NULL, "[B", 0x1, 65, 62, 2, -1, -1, -1 },
    { NULL, "[B", 0x1, 65, 63, 2, -1, -1, -1 },
    { NULL, "[B", 0x1, 66, 67, 2, -1, -1, -1 },
    { NULL, "[B", 0x1, 66, 68, 2, -1, -1, -1 },
    { NULL, "[B", 0x1, 66, 69, 2, -1, -1, -1 },
    { NULL, "[B", 0x1, 70, 67, 2, -1, -1, -1 },
    { NULL, "[B", 0x1, 70, 68, 2, -1, -1, -1 },
    { NULL, "[B", 0x1, 70, 69, 2, -1, -1, -1 },
    { NULL, "B", 0x1, -1, -1, 2, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, 2, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, 2, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, 2, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, -1, -1, -1, 71, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, -1, -1, -1, 71, -1, -1 },
    { NULL, "LComStSt25sdkSTRegister;", 0x1, 72, 8, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 2, -1, -1, -1 },
    { NULL, "LComStSt25sdkType5St25tvST25TVRegisterEasSecurityActivation;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComStSt25sdkType5St25tvST25TVRegisterCounterConfiguration;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComStSt25sdkType5St25tvST25TVRegisterCounterValue;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComStSt25sdkType5St25tvST25TVRegisterTamperConfiguration;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 2, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, 2, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getSt25tvExtraFeatureList);
  methods[1].selector = @selector(initWithComStSt25sdkRFReaderInterface:withByteArray:);
  methods[2].selector = @selector(initWithComStSt25sdkRFReaderInterface:withByteArray:withBoolean:);
  methods[3].selector = @selector(initWithComStSt25sdkRFReaderInterface:withByteArray:withBoolean:withBoolean:);
  methods[4].selector = @selector(getRandomNumber);
  methods[5].selector = @selector(getRandomNumberWithByte:);
  methods[6].selector = @selector(isPasswordNumberValidWithInt:);
  methods[7].selector = @selector(updatePwdWithByteArray:withByte:);
  methods[8].selector = @selector(mWithByteArray:withByteArray:);
  methods[9].selector = @selector(alloc__WithInt:);
  methods[10].selector = @selector(presentPasswordWithInt:withByteArray:);
  methods[11].selector = @selector(presentPasswordWithInt:withByteArray:withByte:);
  methods[12].selector = @selector(writePasswordWithInt:withByteArray:);
  methods[13].selector = @selector(getPasswordLengthWithInt:);
  methods[14].selector = @selector(getAreaPasswordLengthWithInt:);
  methods[15].selector = @selector(getConfigurationPasswordNumber);
  methods[16].selector = @selector(getPasswordNumberWithInt:);
  methods[17].selector = @selector(setPasswordNumberWithInt:withInt:);
  methods[18].selector = @selector(getPossibleReadWriteProtectionWithInt:);
  methods[19].selector = @selector(getReadWriteProtectionWithInt:);
  methods[20].selector = @selector(setReadWriteProtectionWithInt:withComStSt25sdkTagHelper_ReadWriteProtection:);
  methods[21].selector = @selector(setReadWriteProtectionWithInt:withComStSt25sdkTagHelper_ReadWriteProtection:withByteArray:);
  methods[22].selector = @selector(readConfigWithInt:);
  methods[23].selector = @selector(writeConfigWithInt:withByte:);
  methods[24].selector = @selector(isCounterEnabled);
  methods[25].selector = @selector(enableCounterWithBoolean:);
  methods[26].selector = @selector(resetCounter);
  methods[27].selector = @selector(readCounterValue);
  methods[28].selector = @selector(enableUntraceableModeWithByteArray:);
  methods[29].selector = @selector(toggleUntraceableModeWithByteArray:withByte:);
  methods[30].selector = @selector(getUntraceableModePolicy);
  methods[31].selector = @selector(setUntraceableModePolicyWithComStSt25sdkUntraceableModeInterface_UntraceableModePolicy:);
  methods[32].selector = @selector(getUntraceableModeDefaultSettings);
  methods[33].selector = @selector(setUntraceableModeDefaultSettingsWithComStSt25sdkUntraceableModeInterface_UntraceableModeDefaultSettings:);
  methods[34].selector = @selector(getMaxNumberOfAreas);
  methods[35].selector = @selector(getNumberOfAreas);
  methods[36].selector = @selector(setNumberOfAreasWithInt:);
  methods[37].selector = @selector(getAreaSizeInBytesWithInt:);
  methods[38].selector = @selector(getAreaOffsetInBlocksWithInt:);
  methods[39].selector = @selector(getAreaOffsetInBytesWithInt:);
  methods[40].selector = @selector(getAreaFromByteAddressWithInt:);
  methods[41].selector = @selector(setEas);
  methods[42].selector = @selector(setEasWithByte:);
  methods[43].selector = @selector(resetEas);
  methods[44].selector = @selector(resetEasWithByte:);
  methods[45].selector = @selector(lockEas);
  methods[46].selector = @selector(lockEasWithByte:);
  methods[47].selector = @selector(isEasEnabled);
  methods[48].selector = @selector(readEasTelegram);
  methods[49].selector = @selector(readEasId);
  methods[50].selector = @selector(enableEasWithByte:withByteArray:withByte:);
  methods[51].selector = @selector(writeEasIdWithInt:);
  methods[52].selector = @selector(writeEasIdWithInt:withByte:);
  methods[53].selector = @selector(readEasState);
  methods[54].selector = @selector(writeEasTelegramWithNSString:);
  methods[55].selector = @selector(writeEasTelegramWithNSString:withByte:);
  methods[56].selector = @selector(getMaxEasTelegramLength);
  methods[57].selector = @selector(writeEasConfigWithByte:);
  methods[58].selector = @selector(writeEasConfigWithByte:withByte:);
  methods[59].selector = @selector(writeEasSecurityConfigurationWithBoolean:);
  methods[60].selector = @selector(killWithByteArray:);
  methods[61].selector = @selector(writeKillWithByteArray:);
  methods[62].selector = @selector(lockKill);
  methods[63].selector = @selector(initiateWithByte:);
  methods[64].selector = @selector(inventoryInitiatedWithByte:);
  methods[65].selector = @selector(inventoryInitiatedWithByte:withByte:withByteArray:);
  methods[66].selector = @selector(inventoryInitiatedWithByte:withByte:withByteArray:withByte:);
  methods[67].selector = @selector(fastInitiateWithByte:);
  methods[68].selector = @selector(fastInventoryInitiatedWithByte:);
  methods[69].selector = @selector(fastInventoryInitiatedWithByte:withByte:withByteArray:);
  methods[70].selector = @selector(fastInventoryInitiatedWithByte:withByte:withByteArray:withByte:);
  methods[71].selector = @selector(inventoryReadWithByte:withByte:withByte:);
  methods[72].selector = @selector(inventoryReadWithByte:withByte:withByteArray:withByte:withByte:);
  methods[73].selector = @selector(inventoryReadWithByte:withByte:withByteArray:withByte:withByte:withByte:);
  methods[74].selector = @selector(fastInventoryReadWithByte:withByte:withByte:);
  methods[75].selector = @selector(fastInventoryReadWithByte:withByte:withByteArray:withByte:withByte:);
  methods[76].selector = @selector(fastInventoryReadWithByte:withByte:withByteArray:withByte:withByte:withByte:);
  methods[77].selector = @selector(getKeyIdNDA);
  methods[78].selector = @selector(isSignatureOkNDA);
  methods[79].selector = @selector(readSignatureNDA);
  methods[80].selector = @selector(getDecodedCertificateNDA);
  methods[81].selector = @selector(getRegisterList);
  methods[82].selector = @selector(getDynamicRegisterList);
  methods[83].selector = @selector(getRegisterWithInt:);
  methods[84].selector = @selector(refreshRegistersStatus);
  methods[85].selector = @selector(getRegisterEasSecurityActivation);
  methods[86].selector = @selector(getRegisterCounterConfiguration);
  methods[87].selector = @selector(getRegisterCounterValue);
  methods[88].selector = @selector(getRegisterTamperConfiguration);
  methods[89].selector = @selector(lockConfiguration);
  methods[90].selector = @selector(isConfigurationLocked);
  methods[91].selector = @selector(checkTamperDetectStatus);
  methods[92].selector = @selector(isTamperDetectSupported);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "mST25TVRegisterMap_", "LJavaUtilTreeMap;", .constantValue.asLong = 0, 0x2, -1, -1, 73, -1 },
    { "mRegisterArea1SecurityAttribute_", "LComStSt25sdkType5St25tvST25TVRegisterArea1SecurityAttribute;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mRegisterArea2SecurityAttribute_", "LComStSt25sdkType5St25tvST25TVRegisterArea2SecurityAttribute;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mRegisterEasSecurityActivation_", "LComStSt25sdkType5St25tvST25TVRegisterEasSecurityActivation;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mRegisterCounterConfiguration_", "LComStSt25sdkType5St25tvST25TVRegisterCounterConfiguration;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mRegisterCounterValue_", "LComStSt25sdkType5St25tvST25TVRegisterCounterValue;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mRegisterTamperConfiguration_", "LComStSt25sdkType5St25tvST25TVRegisterTamperConfiguration;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mRegisterLockConfiguration_", "LComStSt25sdkType5St25tvST25TVRegisterLockConfiguration;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mRegisterKeyId_", "LComStSt25sdkType5St25tvST25TVRegisterKeyId;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mIsEasEnabled_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mCheckEasStatus_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mIsTamperDetectSupported_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mIsTamperDetectStatusAvailable_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "ST25TV_REGISTER_AREA1_SECURITY_ATTRIBUTE", "I", .constantValue.asInt = ComStSt25sdkType5St25tvST25TVTag_ST25TV_REGISTER_AREA1_SECURITY_ATTRIBUTE, 0x19, -1, -1, -1, -1 },
    { "ST25TV_REGISTER_AREA2_SECURITY_ATTRIBUTE", "I", .constantValue.asInt = ComStSt25sdkType5St25tvST25TVTag_ST25TV_REGISTER_AREA2_SECURITY_ATTRIBUTE, 0x19, -1, -1, -1, -1 },
    { "ST25TV_REGISTER_EAS_SECURITY_ACTIVATION", "I", .constantValue.asInt = ComStSt25sdkType5St25tvST25TVTag_ST25TV_REGISTER_EAS_SECURITY_ACTIVATION, 0x19, -1, -1, -1, -1 },
    { "ST25TV_REGISTER_WRITE_COUNTER_CONFIGURATION", "I", .constantValue.asInt = ComStSt25sdkType5St25tvST25TVTag_ST25TV_REGISTER_WRITE_COUNTER_CONFIGURATION, 0x19, -1, -1, -1, -1 },
    { "ST25TV_REGISTER_COUNTER_READ", "I", .constantValue.asInt = ComStSt25sdkType5St25tvST25TVTag_ST25TV_REGISTER_COUNTER_READ, 0x19, -1, -1, -1, -1 },
    { "ST25TV_REGISTER_COUNTER_READ_LENGTH", "I", .constantValue.asInt = ComStSt25sdkType5St25tvST25TVTag_ST25TV_REGISTER_COUNTER_READ_LENGTH, 0x19, -1, -1, -1, -1 },
    { "ST25TV_REGISTER_TAMPER_CONFIGURATION", "I", .constantValue.asInt = ComStSt25sdkType5St25tvST25TVTag_ST25TV_REGISTER_TAMPER_CONFIGURATION, 0x19, -1, -1, -1, -1 },
    { "ST25TV_REGISTER_LOCK_CONFIGURATION", "I", .constantValue.asInt = ComStSt25sdkType5St25tvST25TVTag_ST25TV_REGISTER_LOCK_CONFIGURATION, 0x19, -1, -1, -1, -1 },
    { "ST25TV_REGISTER_KEY_ID", "I", .constantValue.asInt = ComStSt25sdkType5St25tvST25TVTag_ST25TV_REGISTER_KEY_ID, 0x19, -1, -1, -1, -1 },
    { "ST25TV_NUMBER_OF_REGISTERS", "I", .constantValue.asInt = ComStSt25sdkType5St25tvST25TVTag_ST25TV_NUMBER_OF_REGISTERS, 0x19, -1, -1, -1, -1 },
    { "ST25TV_KILL_PASSWORD_ID", "I", .constantValue.asInt = ComStSt25sdkType5St25tvST25TVTag_ST25TV_KILL_PASSWORD_ID, 0x19, -1, -1, -1, -1 },
    { "ST25TV_UNTRACEABLE_MODE_PASSWORD_ID", "I", .constantValue.asInt = ComStSt25sdkType5St25tvST25TVTag_ST25TV_UNTRACEABLE_MODE_PASSWORD_ID, 0x19, -1, -1, -1, -1 },
    { "ST25TV_AREA1_PASSWORD_ID", "I", .constantValue.asInt = ComStSt25sdkType5St25tvST25TVTag_ST25TV_AREA1_PASSWORD_ID, 0x19, -1, -1, -1, -1 },
    { "ST25TV_AREA2_PASSWORD_ID", "I", .constantValue.asInt = ComStSt25sdkType5St25tvST25TVTag_ST25TV_AREA2_PASSWORD_ID, 0x19, -1, -1, -1, -1 },
    { "ST25TV_CONFIGURATION_PASSWORD_ID", "I", .constantValue.asInt = ComStSt25sdkType5St25tvST25TVTag_ST25TV_CONFIGURATION_PASSWORD_ID, 0x19, -1, -1, -1, -1 },
    { "ST25TV_NUMBER_OF_PASSWORDS", "I", .constantValue.asInt = ComStSt25sdkType5St25tvST25TVTag_ST25TV_NUMBER_OF_PASSWORDS, 0x19, -1, -1, -1, -1 },
    { "EAS_TELEGRAM_BLOCK_OFFSET", "I", .constantValue.asInt = ComStSt25sdkType5St25tvST25TVTag_EAS_TELEGRAM_BLOCK_OFFSET, 0x19, -1, -1, -1, -1 },
    { "EAS_TELEGRAM_MAX_LENGTH", "I", .constantValue.asInt = ComStSt25sdkType5St25tvST25TVTag_EAS_TELEGRAM_MAX_LENGTH, 0x19, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "()Ljava/util/List<Ljava/lang/String;>;", "LComStSt25sdkRFReaderInterface;[B", "LComStSt25sdkSTException;", "LComStSt25sdkRFReaderInterface;[BZ", "LComStSt25sdkRFReaderInterface;[BZZ", "getRandomNumber", "B", "isPasswordNumberValid", "I", "updatePwd", "[BB", "m", "[B[B", "alloc", "presentPassword", "I[B", "I[BB", "writePassword", "getPasswordLength", "getAreaPasswordLength", "getPasswordNumber", "setPasswordNumber", "II", "getPossibleReadWriteProtection", "(I)Ljava/util/List<Lcom/st/st25sdk/TagHelper$ReadWriteProtection;>;", "getReadWriteProtection", "setReadWriteProtection", "ILComStSt25sdkTagHelper_ReadWriteProtection;", "ILComStSt25sdkTagHelper_ReadWriteProtection;[B", "readConfig", "writeConfig", "IB", "enableCounter", "Z", "enableUntraceableMode", "[B", "toggleUntraceableMode", "setUntraceableModePolicy", "LComStSt25sdkUntraceableModeInterface_UntraceableModePolicy;", "setUntraceableModeDefaultSettings", "LComStSt25sdkUntraceableModeInterface_UntraceableModeDefaultSettings;", "setNumberOfAreas", "getAreaSizeInBytes", "getAreaOffsetInBlocks", "getAreaOffsetInBytes", "getAreaFromByteAddress", "setEas", "resetEas", "lockEas", "enableEas", "B[BB", "writeEasId", "writeEasTelegram", "LNSString;", "LNSString;B", "writeEasConfig", "BB", "writeEasSecurityConfiguration", "kill", "writeKill", "initiate", "inventoryInitiated", "BB[B", "BB[BB", "fastInitiate", "fastInventoryInitiated", "inventoryRead", "BBB", "BB[BBB", "BB[BBBB", "fastInventoryRead", "()Ljava/util/List<Lcom/st/st25sdk/STRegister;>;", "getRegister", "Ljava/util/TreeMap<Ljava/lang/Integer;Lcom/st/st25sdk/STRegister;>;" };
  static const J2ObjcClassInfo _ComStSt25sdkType5St25tvST25TVTag = { "ST25TVTag", "com.st.st25sdk.type5.st25tv", ptrTable, methods, fields, 7, 0x1, 93, 31, -1, -1, -1, -1, -1 };
  return &_ComStSt25sdkType5St25tvST25TVTag;
}

@end

id<JavaUtilList> ComStSt25sdkType5St25tvST25TVTag_getSt25tvExtraFeatureList() {
  ComStSt25sdkType5St25tvST25TVTag_initialize();
  return JavaUtilCollections_emptyList();
}

void ComStSt25sdkType5St25tvST25TVTag_initWithComStSt25sdkRFReaderInterface_withByteArray_(ComStSt25sdkType5St25tvST25TVTag *self, id<ComStSt25sdkRFReaderInterface> readerInterface, IOSByteArray *uid) {
  ComStSt25sdkType5St25tvST25TVTag_initWithComStSt25sdkRFReaderInterface_withByteArray_withBoolean_withBoolean_(self, readerInterface, uid, false, true);
}

ComStSt25sdkType5St25tvST25TVTag *new_ComStSt25sdkType5St25tvST25TVTag_initWithComStSt25sdkRFReaderInterface_withByteArray_(id<ComStSt25sdkRFReaderInterface> readerInterface, IOSByteArray *uid) {
  J2OBJC_NEW_IMPL(ComStSt25sdkType5St25tvST25TVTag, initWithComStSt25sdkRFReaderInterface_withByteArray_, readerInterface, uid)
}

ComStSt25sdkType5St25tvST25TVTag *create_ComStSt25sdkType5St25tvST25TVTag_initWithComStSt25sdkRFReaderInterface_withByteArray_(id<ComStSt25sdkRFReaderInterface> readerInterface, IOSByteArray *uid) {
  J2OBJC_CREATE_IMPL(ComStSt25sdkType5St25tvST25TVTag, initWithComStSt25sdkRFReaderInterface_withByteArray_, readerInterface, uid)
}

void ComStSt25sdkType5St25tvST25TVTag_initWithComStSt25sdkRFReaderInterface_withByteArray_withBoolean_(ComStSt25sdkType5St25tvST25TVTag *self, id<ComStSt25sdkRFReaderInterface> readerInterface, IOSByteArray *uid, jboolean checkEasStatus) {
  ComStSt25sdkType5St25tvST25TVTag_initWithComStSt25sdkRFReaderInterface_withByteArray_withBoolean_withBoolean_(self, readerInterface, uid, checkEasStatus, true);
}

ComStSt25sdkType5St25tvST25TVTag *new_ComStSt25sdkType5St25tvST25TVTag_initWithComStSt25sdkRFReaderInterface_withByteArray_withBoolean_(id<ComStSt25sdkRFReaderInterface> readerInterface, IOSByteArray *uid, jboolean checkEasStatus) {
  J2OBJC_NEW_IMPL(ComStSt25sdkType5St25tvST25TVTag, initWithComStSt25sdkRFReaderInterface_withByteArray_withBoolean_, readerInterface, uid, checkEasStatus)
}

ComStSt25sdkType5St25tvST25TVTag *create_ComStSt25sdkType5St25tvST25TVTag_initWithComStSt25sdkRFReaderInterface_withByteArray_withBoolean_(id<ComStSt25sdkRFReaderInterface> readerInterface, IOSByteArray *uid, jboolean checkEasStatus) {
  J2OBJC_CREATE_IMPL(ComStSt25sdkType5St25tvST25TVTag, initWithComStSt25sdkRFReaderInterface_withByteArray_withBoolean_, readerInterface, uid, checkEasStatus)
}

void ComStSt25sdkType5St25tvST25TVTag_initWithComStSt25sdkRFReaderInterface_withByteArray_withBoolean_withBoolean_(ComStSt25sdkType5St25tvST25TVTag *self, id<ComStSt25sdkRFReaderInterface> readerInterface, IOSByteArray *uid, jboolean checkEasStatus, jboolean sendInitCommands) {
  ComStSt25sdkType5STType5MultiAreaTag_initWithComStSt25sdkRFReaderInterface_withByteArray_(self, readerInterface, uid);
  self->mIsEasEnabled_ = false;
  self->mCheckEasStatus_ = false;
  self->mIsTamperDetectSupported_ = false;
  self->mIsTamperDetectStatusAvailable_ = false;
  self->mName_ = @"ST25TV";
  self->mTypeDescription_ = JreLoadStatic(ComStSt25sdkNFCTag, NFC_RFID_TAG);
  self->mCheckEasStatus_ = checkEasStatus;
  self->mST25TVRegisterMap_ = new_JavaUtilTreeMap_init();
  self->mRegisterArea1SecurityAttribute_ = ComStSt25sdkType5St25tvST25TVRegisterArea1SecurityAttribute_newInstanceWithComStSt25sdkCommandIso15693CustomCommand_withInt_(self->mIso15693CustomCommand_, ComStSt25sdkType5St25tvST25TVTag_ST25TV_REGISTER_AREA1_SECURITY_ATTRIBUTE);
  self->mRegisterArea2SecurityAttribute_ = ComStSt25sdkType5St25tvST25TVRegisterArea2SecurityAttribute_newInstanceWithComStSt25sdkCommandIso15693CustomCommand_withInt_(self->mIso15693CustomCommand_, ComStSt25sdkType5St25tvST25TVTag_ST25TV_REGISTER_AREA2_SECURITY_ATTRIBUTE);
  self->mRegisterLockConfiguration_ = ComStSt25sdkType5St25tvST25TVRegisterLockConfiguration_newInstanceWithComStSt25sdkCommandIso15693CustomCommand_withInt_(self->mIso15693CustomCommand_, ComStSt25sdkType5St25tvST25TVTag_ST25TV_REGISTER_LOCK_CONFIGURATION);
  self->mRegisterKeyId_ = ComStSt25sdkType5St25tvST25TVRegisterKeyId_newInstanceWithComStSt25sdkCommandIso15693CustomCommand_withInt_(self->mIso15693CustomCommand_, ComStSt25sdkType5St25tvST25TVTag_ST25TV_REGISTER_KEY_ID);
  self->mRegisterEasSecurityActivation_ = ComStSt25sdkType5St25tvST25TVRegisterEasSecurityActivation_newInstanceWithComStSt25sdkCommandIso15693CustomCommand_(self->mIso15693CustomCommand_);
  self->mRegisterCounterConfiguration_ = ComStSt25sdkType5St25tvST25TVRegisterCounterConfiguration_newInstanceWithComStSt25sdkCommandIso15693CustomCommand_(self->mIso15693CustomCommand_);
  self->mRegisterCounterValue_ = ComStSt25sdkType5St25tvST25TVRegisterCounterValue_newInstanceWithComStSt25sdkCommandIso15693CustomCommand_(self->mIso15693CustomCommand_);
  self->mRegisterTamperConfiguration_ = ComStSt25sdkType5St25tvST25TVRegisterTamperConfiguration_newInstanceWithComStSt25sdkCommandIso15693CustomCommand_(self->mIso15693CustomCommand_);
  ComStSt25sdkType5St25tvST25TVTag_checkTamperDetectStatus(self);
  (void) [((JavaUtilTreeMap *) nil_chk(self->mST25TVRegisterMap_)) putWithId:JavaLangInteger_valueOfWithInt_(ComStSt25sdkType5St25tvST25TVTag_ST25TV_REGISTER_AREA1_SECURITY_ATTRIBUTE) withId:self->mRegisterArea1SecurityAttribute_];
  (void) [((JavaUtilTreeMap *) nil_chk(self->mST25TVRegisterMap_)) putWithId:JavaLangInteger_valueOfWithInt_(ComStSt25sdkType5St25tvST25TVTag_ST25TV_REGISTER_AREA2_SECURITY_ATTRIBUTE) withId:self->mRegisterArea2SecurityAttribute_];
  (void) [((JavaUtilTreeMap *) nil_chk(self->mST25TVRegisterMap_)) putWithId:JavaLangInteger_valueOfWithInt_(ComStSt25sdkType5St25tvST25TVTag_ST25TV_REGISTER_EAS_SECURITY_ACTIVATION) withId:self->mRegisterEasSecurityActivation_];
  (void) [((JavaUtilTreeMap *) nil_chk(self->mST25TVRegisterMap_)) putWithId:JavaLangInteger_valueOfWithInt_(ComStSt25sdkType5St25tvST25TVTag_ST25TV_REGISTER_WRITE_COUNTER_CONFIGURATION) withId:self->mRegisterCounterConfiguration_];
  (void) [((JavaUtilTreeMap *) nil_chk(self->mST25TVRegisterMap_)) putWithId:JavaLangInteger_valueOfWithInt_(ComStSt25sdkType5St25tvST25TVTag_ST25TV_REGISTER_COUNTER_READ) withId:self->mRegisterCounterValue_];
  if (self->mIsTamperDetectSupported_) {
    (void) [((JavaUtilTreeMap *) nil_chk(self->mST25TVRegisterMap_)) putWithId:JavaLangInteger_valueOfWithInt_(ComStSt25sdkType5St25tvST25TVTag_ST25TV_REGISTER_TAMPER_CONFIGURATION) withId:self->mRegisterTamperConfiguration_];
  }
  (void) [((JavaUtilTreeMap *) nil_chk(self->mST25TVRegisterMap_)) putWithId:JavaLangInteger_valueOfWithInt_(ComStSt25sdkType5St25tvST25TVTag_ST25TV_REGISTER_LOCK_CONFIGURATION) withId:self->mRegisterLockConfiguration_];
  (void) [((JavaUtilTreeMap *) nil_chk(self->mST25TVRegisterMap_)) putWithId:JavaLangInteger_valueOfWithInt_(ComStSt25sdkType5St25tvST25TVTag_ST25TV_REGISTER_KEY_ID) withId:self->mRegisterKeyId_];
  for (id<JavaUtilMap_Entry> __strong entry_ in nil_chk([((JavaUtilTreeMap *) nil_chk(self->mST25TVRegisterMap_)) entrySet])) {
    [((ComStSt25sdkTagCache *) nil_chk(self->mCache_)) addWithId:[((id<JavaUtilMap_Entry>) nil_chk(entry_)) getValue]];
  }
  if (sendInitCommands) {
    [self initAreaList];
  }
  [((ComStSt25sdkType5St25tvST25TVRegisterArea1SecurityAttribute *) nil_chk(self->mRegisterArea1SecurityAttribute_)) addRegisterListenerWithComStSt25sdkSTRegister_RegisterListener:new_ComStSt25sdkType5St25tvST25TVTag_$Lambda$1_initWithComStSt25sdkType5St25tvST25TVTag_(self)];
  [((ComStSt25sdkType5St25tvST25TVRegisterCounterConfiguration *) nil_chk(self->mRegisterCounterConfiguration_)) addRegisterListenerWithComStSt25sdkSTRegister_RegisterListener:new_ComStSt25sdkType5St25tvST25TVTag_$Lambda$2_initWithComStSt25sdkType5St25tvST25TVTag_(self)];
  if (self->mCheckEasStatus_) {
    ComStSt25sdkType5St25tvST25TVTag_readEasState(self);
  }
  if (sendInitCommands) {
    jint memSizeInBlocks = [self getNumberOfBlocks];
    [self setMaxReadMultipleBlocksReturnedWithInt:memSizeInBlocks];
  }
}

ComStSt25sdkType5St25tvST25TVTag *new_ComStSt25sdkType5St25tvST25TVTag_initWithComStSt25sdkRFReaderInterface_withByteArray_withBoolean_withBoolean_(id<ComStSt25sdkRFReaderInterface> readerInterface, IOSByteArray *uid, jboolean checkEasStatus, jboolean sendInitCommands) {
  J2OBJC_NEW_IMPL(ComStSt25sdkType5St25tvST25TVTag, initWithComStSt25sdkRFReaderInterface_withByteArray_withBoolean_withBoolean_, readerInterface, uid, checkEasStatus, sendInitCommands)
}

ComStSt25sdkType5St25tvST25TVTag *create_ComStSt25sdkType5St25tvST25TVTag_initWithComStSt25sdkRFReaderInterface_withByteArray_withBoolean_withBoolean_(id<ComStSt25sdkRFReaderInterface> readerInterface, IOSByteArray *uid, jboolean checkEasStatus, jboolean sendInitCommands) {
  J2OBJC_CREATE_IMPL(ComStSt25sdkType5St25tvST25TVTag, initWithComStSt25sdkRFReaderInterface_withByteArray_withBoolean_withBoolean_, readerInterface, uid, checkEasStatus, sendInitCommands)
}

jboolean ComStSt25sdkType5St25tvST25TVTag_isPasswordNumberValidWithInt_(ComStSt25sdkType5St25tvST25TVTag *self, jint passwordNumber) {
  return (passwordNumber >= 0 && passwordNumber <= ComStSt25sdkType5St25tvST25TVTag_ST25TV_CONFIGURATION_PASSWORD_ID);
}

IOSByteArray *ComStSt25sdkType5St25tvST25TVTag_updatePwdWithByteArray_withByte_(ComStSt25sdkType5St25tvST25TVTag *self, IOSByteArray *a, jbyte flag) {
  if (a == nil) {
    @throw new_ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_(JreLoadEnum(ComStSt25sdkSTException_STExceptionCode, BAD_PARAMETER));
  }
  if ((a->size_ != 4) && (a->size_ != 8)) {
    @throw new_ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_(JreLoadEnum(ComStSt25sdkSTException_STExceptionCode, BAD_PARAMETER));
  }
  IOSByteArray *c = [self getRandomNumberWithByte:flag];
  if ((c == nil) || (((IOSByteArray *) nil_chk(c))->size_ != 2)) {
    @throw new_ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_(JreLoadEnum(ComStSt25sdkSTException_STExceptionCode, CMD_FAILED));
  }
  IOSByteArray *b = [IOSByteArray newArrayWithLength:a->size_];
  for (jint i = 0; i < (a->size_ / 2); i++) {
    *IOSByteArray_GetRef(b, 2 * i) = IOSByteArray_Get(nil_chk(c), 0);
    *IOSByteArray_GetRef(b, 2 * i + 1) = IOSByteArray_Get(c, 1);
  }
  return ComStSt25sdkType5St25tvST25TVTag_mWithByteArray_withByteArray_(self, a, b);
}

IOSByteArray *ComStSt25sdkType5St25tvST25TVTag_mWithByteArray_withByteArray_(ComStSt25sdkType5St25tvST25TVTag *self, IOSByteArray *a, IOSByteArray *b) {
  jint l = ((IOSByteArray *) nil_chk(a))->size_;
  IOSByteArray *r = [IOSByteArray newArrayWithLength:l];
  IOSByteArray *x = ComStSt25sdkType5St25tvST25TVTag_alloc__WithInt_(self, l);
  for (jint i = 0; i < l; i++) {
    *IOSByteArray_GetRef(r, i) = (jbyte) (IOSByteArray_Get(a, i) ^ IOSByteArray_Get(nil_chk(x), i) ^ IOSByteArray_Get(nil_chk(b), l - i - 1));
  }
  for (jint i = l - 1; i >= 0; i--) {
    *IOSByteArray_GetRef(r, i) ^= (jbyte) (IOSByteArray_Get(nil_chk(b), l - i - 1) ^ IOSByteArray_Get(b, i) ^ IOSByteArray_Get(nil_chk(x), i));
  }
  return r;
}

IOSByteArray *ComStSt25sdkType5St25tvST25TVTag_alloc__WithInt_(ComStSt25sdkType5St25tvST25TVTag *self, jint s) {
  IOSByteArray *r = [IOSByteArray newArrayWithLength:s];
  [new_JavaUtilRandom_init() nextBytesWithByteArray:r];
  return r;
}

void ComStSt25sdkType5St25tvST25TVTag_readEasState(ComStSt25sdkType5St25tvST25TVTag *self) {
  @try {
    (void) [self readEasTelegram];
    self->mIsEasEnabled_ = true;
  }
  @catch (ComStSt25sdkSTException *e) {
    self->mIsEasEnabled_ = false;
  }
}

void ComStSt25sdkType5St25tvST25TVTag_checkTamperDetectStatus(ComStSt25sdkType5St25tvST25TVTag *self) {
  @try {
    [((ComStSt25sdkType5St25tvST25TVRegisterTamperConfiguration *) nil_chk(self->mRegisterTamperConfiguration_)) isTamperDetected];
    self->mIsTamperDetectSupported_ = true;
    self->mIsTamperDetectStatusAvailable_ = true;
  }
  @catch (ComStSt25sdkSTException *e) {
    switch ([[e getError] ordinal]) {
      case ComStSt25sdkSTException_STExceptionCode_Enum_ISO15693_BLOCK_NOT_AVAILABLE:
      self->mIsTamperDetectSupported_ = false;
      self->mIsTamperDetectStatusAvailable_ = true;
      break;
      default:
      [e printStackTrace];
      break;
    }
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComStSt25sdkType5St25tvST25TVTag)

@implementation ComStSt25sdkType5St25tvST25TVTag_$Lambda$1

- (void)registerChange {
  [((ComStSt25sdkType5St25tvST25TVRegisterArea1SecurityAttribute *) nil_chk(this$0_->mRegisterArea1SecurityAttribute_)) invalidateCache];
  [this$0_ initAreaList];
}

@end

void ComStSt25sdkType5St25tvST25TVTag_$Lambda$1_initWithComStSt25sdkType5St25tvST25TVTag_(ComStSt25sdkType5St25tvST25TVTag_$Lambda$1 *self, ComStSt25sdkType5St25tvST25TVTag *outer$) {
  self->this$0_ = outer$;
  NSObject_init(self);
}

ComStSt25sdkType5St25tvST25TVTag_$Lambda$1 *new_ComStSt25sdkType5St25tvST25TVTag_$Lambda$1_initWithComStSt25sdkType5St25tvST25TVTag_(ComStSt25sdkType5St25tvST25TVTag *outer$) {
  J2OBJC_NEW_IMPL(ComStSt25sdkType5St25tvST25TVTag_$Lambda$1, initWithComStSt25sdkType5St25tvST25TVTag_, outer$)
}

ComStSt25sdkType5St25tvST25TVTag_$Lambda$1 *create_ComStSt25sdkType5St25tvST25TVTag_$Lambda$1_initWithComStSt25sdkType5St25tvST25TVTag_(ComStSt25sdkType5St25tvST25TVTag *outer$) {
  J2OBJC_CREATE_IMPL(ComStSt25sdkType5St25tvST25TVTag_$Lambda$1, initWithComStSt25sdkType5St25tvST25TVTag_, outer$)
}

@implementation ComStSt25sdkType5St25tvST25TVTag_$Lambda$2

- (void)registerChange {
  jint clearValue = [((ComStSt25sdkSTRegister_STRegisterField *) nil_chk([((ComStSt25sdkType5St25tvST25TVRegisterCounterConfiguration *) nil_chk(this$0_->mRegisterCounterConfiguration_)) getRegisterFieldWithNSString:@"CLEAR"])) getValue];
  if (clearValue != 0) {
    [((ComStSt25sdkType5St25tvST25TVRegisterCounterConfiguration *) nil_chk(this$0_->mRegisterCounterConfiguration_)) invalidateCache];
    [((ComStSt25sdkType5St25tvST25TVRegisterCounterValue *) nil_chk(this$0_->mRegisterCounterValue_)) invalidateCache];
  }
}

@end

void ComStSt25sdkType5St25tvST25TVTag_$Lambda$2_initWithComStSt25sdkType5St25tvST25TVTag_(ComStSt25sdkType5St25tvST25TVTag_$Lambda$2 *self, ComStSt25sdkType5St25tvST25TVTag *outer$) {
  self->this$0_ = outer$;
  NSObject_init(self);
}

ComStSt25sdkType5St25tvST25TVTag_$Lambda$2 *new_ComStSt25sdkType5St25tvST25TVTag_$Lambda$2_initWithComStSt25sdkType5St25tvST25TVTag_(ComStSt25sdkType5St25tvST25TVTag *outer$) {
  J2OBJC_NEW_IMPL(ComStSt25sdkType5St25tvST25TVTag_$Lambda$2, initWithComStSt25sdkType5St25tvST25TVTag_, outer$)
}

ComStSt25sdkType5St25tvST25TVTag_$Lambda$2 *create_ComStSt25sdkType5St25tvST25TVTag_$Lambda$2_initWithComStSt25sdkType5St25tvST25TVTag_(ComStSt25sdkType5St25tvST25TVTag *outer$) {
  J2OBJC_CREATE_IMPL(ComStSt25sdkType5St25tvST25TVTag_$Lambda$2, initWithComStSt25sdkType5St25tvST25TVTag_, outer$)
}
