//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: st25sdk_ios/type5/STType5Register.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/st/st25sdk/Helper.h"
#include "com/st/st25sdk/RFReaderInterface.h"
#include "com/st/st25sdk/STException.h"
#include "com/st/st25sdk/STLog.h"
#include "com/st/st25sdk/STRegister.h"
#include "com/st/st25sdk/command/Iso15693CustomCommand.h"
#include "com/st/st25sdk/type5/STType5Register.h"

@implementation ComStSt25sdkType5STType5Register

- (instancetype)initWithComStSt25sdkCommandIso15693CustomCommand:(ComStSt25sdkCommandIso15693CustomCommand *)iso15693CustomCommand
                                                         withInt:(jint)registerFid
                                                         withInt:(jint)registerPid
                                                    withNSString:(NSString *)registerName
                                                    withNSString:(NSString *)registerContentDescription
                 withComStSt25sdkSTRegister_RegisterAccessRights:(ComStSt25sdkSTRegister_RegisterAccessRights *)registerAccessRights
                     withComStSt25sdkSTRegister_RegisterDataSize:(ComStSt25sdkSTRegister_RegisterDataSize *)registerDataSize {
  ComStSt25sdkType5STType5Register_initWithComStSt25sdkCommandIso15693CustomCommand_withInt_withInt_withNSString_withNSString_withComStSt25sdkSTRegister_RegisterAccessRights_withComStSt25sdkSTRegister_RegisterDataSize_(self, iso15693CustomCommand, registerFid, registerPid, registerName, registerContentDescription, registerAccessRights, registerDataSize);
  return self;
}

- (instancetype)initWithComStSt25sdkCommandIso15693CustomCommand:(ComStSt25sdkCommandIso15693CustomCommand *)iso15693CustomCommand
                                                         withInt:(jint)registerAddress
                                                    withNSString:(NSString *)registerName
                                                    withNSString:(NSString *)registerContentDescription
                 withComStSt25sdkSTRegister_RegisterAccessRights:(ComStSt25sdkSTRegister_RegisterAccessRights *)registerAccessRights
                     withComStSt25sdkSTRegister_RegisterDataSize:(ComStSt25sdkSTRegister_RegisterDataSize *)registerDataSize {
  ComStSt25sdkType5STType5Register_initWithComStSt25sdkCommandIso15693CustomCommand_withInt_withNSString_withNSString_withComStSt25sdkSTRegister_RegisterAccessRights_withComStSt25sdkSTRegister_RegisterDataSize_(self, iso15693CustomCommand, registerAddress, registerName, registerContentDescription, registerAccessRights, registerDataSize);
  return self;
}

- (jint)readTagRegisterValue {
  IOSByteArray *response = nil;
  jint responseSizeInBytes = 1;
  switch ([mRegisterDataSize_ ordinal]) {
    case ComStSt25sdkSTRegister_RegisterDataSize_Enum_REGISTER_DATA_ON_8_BITS:
    responseSizeInBytes = 1;
    break;
    case ComStSt25sdkSTRegister_RegisterDataSize_Enum_REGISTER_DATA_ON_16_BITS:
    responseSizeInBytes = 2;
    break;
    case ComStSt25sdkSTRegister_RegisterDataSize_Enum_REGISTER_DATA_ON_24_BITS:
    responseSizeInBytes = 3;
    break;
    case ComStSt25sdkSTRegister_RegisterDataSize_Enum_REGISTER_DATA_ON_32_BITS:
    responseSizeInBytes = 4;
    break;
    default:
    break;
  }
  [((id<ComStSt25sdkRFReaderInterface>) nil_chk([((ComStSt25sdkCommandIso15693CustomCommand *) nil_chk(mIso15693CustomCommand_)) getReaderInterface])) setTagResponseLengthInBytesWithInt:responseSizeInBytes];
  if (mExtendedRegisterAddressingMode_) {
    response = [((ComStSt25sdkCommandIso15693CustomCommand *) nil_chk(mIso15693CustomCommand_)) readConfigWithByte:(jbyte) mRegisterAddress_ withByte:(jbyte) mRegisterParameterAddress_];
  }
  else {
    response = [((ComStSt25sdkCommandIso15693CustomCommand *) nil_chk(mIso15693CustomCommand_)) readConfigWithByte:(jbyte) mRegisterAddress_];
  }
  switch ([mRegisterDataSize_ ordinal]) {
    case ComStSt25sdkSTRegister_RegisterDataSize_Enum_REGISTER_DATA_ON_8_BITS:
    if (((IOSByteArray *) nil_chk(response))->size_ == 2) {
      mRegisterValue_ = ComStSt25sdkHelper_convertByteToUnsignedIntWithByte_(IOSByteArray_Get(response, 1));
    }
    else {
      @throw new_ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_withByteArray_(JreLoadEnum(ComStSt25sdkSTException_STExceptionCode, CMD_FAILED), response);
    }
    break;
    case ComStSt25sdkSTRegister_RegisterDataSize_Enum_REGISTER_DATA_ON_16_BITS:
    if (((IOSByteArray *) nil_chk(response))->size_ == 3) {
      mRegisterValue_ = (JreLShift32(ComStSt25sdkHelper_convertByteToUnsignedIntWithByte_(IOSByteArray_Get(response, 2)), 8)) + ComStSt25sdkHelper_convertByteToUnsignedIntWithByte_(IOSByteArray_Get(response, 1));
    }
    else {
      @throw new_ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_withByteArray_(JreLoadEnum(ComStSt25sdkSTException_STExceptionCode, CMD_FAILED), response);
    }
    break;
    case ComStSt25sdkSTRegister_RegisterDataSize_Enum_REGISTER_DATA_ON_24_BITS:
    if (((IOSByteArray *) nil_chk(response))->size_ == 4) {
      mRegisterValue_ = (JreLShift32(ComStSt25sdkHelper_convertByteToUnsignedIntWithByte_(IOSByteArray_Get(response, 3)), 16)) + (JreLShift32(ComStSt25sdkHelper_convertByteToUnsignedIntWithByte_(IOSByteArray_Get(response, 2)), 8)) + ComStSt25sdkHelper_convertByteToUnsignedIntWithByte_(IOSByteArray_Get(response, 1));
    }
    else {
      @throw new_ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_withByteArray_(JreLoadEnum(ComStSt25sdkSTException_STExceptionCode, CMD_FAILED), response);
    }
    break;
    case ComStSt25sdkSTRegister_RegisterDataSize_Enum_REGISTER_DATA_ON_32_BITS:
    if (((IOSByteArray *) nil_chk(response))->size_ == 5) {
      mRegisterValue_ = (JreLShift32(ComStSt25sdkHelper_convertByteToUnsignedIntWithByte_(IOSByteArray_Get(response, 4)), 24)) + (JreLShift32(ComStSt25sdkHelper_convertByteToUnsignedIntWithByte_(IOSByteArray_Get(response, 3)), 16)) + (JreLShift32(ComStSt25sdkHelper_convertByteToUnsignedIntWithByte_(IOSByteArray_Get(response, 2)), 8)) + ComStSt25sdkHelper_convertByteToUnsignedIntWithByte_(IOSByteArray_Get(response, 1));
    }
    else {
      @throw new_ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_withByteArray_(JreLoadEnum(ComStSt25sdkSTException_STExceptionCode, CMD_FAILED), response);
    }
    break;
  }
  mCacheInvalidated_ = false;
  return mRegisterValue_;
}

- (void)writeRegisterValueWithInt:(jint)value {
  IOSByteArray *registerValue;
  {
    jbyte attributeValue;
    switch ([mRegisterDataSize_ ordinal]) {
      case ComStSt25sdkSTRegister_RegisterDataSize_Enum_REGISTER_DATA_ON_32_BITS:
      registerValue = [IOSByteArray newArrayWithLength:4];
      registerValue = ComStSt25sdkHelper_reverseByteArrayWithByteArray_(ComStSt25sdkHelper_convertIntTo4BytesHexaFormatWithInt_(value));
      if (mExtendedRegisterAddressingMode_) {
        [((ComStSt25sdkCommandIso15693CustomCommand *) nil_chk(mIso15693CustomCommand_)) writeConfigWithByte:(jbyte) mRegisterAddress_ withByte:(jbyte) mRegisterParameterAddress_ withByteArray:registerValue];
      }
      else {
        [((ComStSt25sdkCommandIso15693CustomCommand *) nil_chk(mIso15693CustomCommand_)) writeConfigWithByte:(jbyte) mRegisterAddress_ withByteArray:registerValue];
      }
      break;
      case ComStSt25sdkSTRegister_RegisterDataSize_Enum_REGISTER_DATA_ON_24_BITS:
      if (value > (jint) 0xFFFFFF) {
        ComStSt25sdkSTLog_eWithNSString_(@"This register supports only 24 bits data!");
        @throw new_ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_(JreLoadEnum(ComStSt25sdkSTException_STExceptionCode, BAD_PARAMETER));
      }
      registerValue = [IOSByteArray newArrayWithLength:3];
      registerValue = ComStSt25sdkHelper_reverseByteArrayWithByteArray_(ComStSt25sdkHelper_convertIntTo3BytesHexaFormatWithInt_(value));
      if (mExtendedRegisterAddressingMode_) {
        [((ComStSt25sdkCommandIso15693CustomCommand *) nil_chk(mIso15693CustomCommand_)) writeConfigWithByte:(jbyte) mRegisterAddress_ withByte:(jbyte) mRegisterParameterAddress_ withByteArray:registerValue];
      }
      else {
        [((ComStSt25sdkCommandIso15693CustomCommand *) nil_chk(mIso15693CustomCommand_)) writeConfigWithByte:(jbyte) mRegisterAddress_ withByteArray:registerValue];
      }
      break;
      case ComStSt25sdkSTRegister_RegisterDataSize_Enum_REGISTER_DATA_ON_16_BITS:
      if (value > (jint) 0xFFFF) {
        ComStSt25sdkSTLog_eWithNSString_(@"This register supports only 16 bits data!");
        @throw new_ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_(JreLoadEnum(ComStSt25sdkSTException_STExceptionCode, BAD_PARAMETER));
      }
      registerValue = [IOSByteArray newArrayWithLength:2];
      registerValue = ComStSt25sdkHelper_reverseByteArrayWithByteArray_(ComStSt25sdkHelper_convertIntTo2BytesHexaFormatWithInt_(value));
      if (mExtendedRegisterAddressingMode_) {
        [((ComStSt25sdkCommandIso15693CustomCommand *) nil_chk(mIso15693CustomCommand_)) writeConfigWithByte:(jbyte) mRegisterAddress_ withByte:(jbyte) mRegisterParameterAddress_ withByteArray:registerValue];
      }
      else {
        [((ComStSt25sdkCommandIso15693CustomCommand *) nil_chk(mIso15693CustomCommand_)) writeConfigWithByte:(jbyte) mRegisterAddress_ withByteArray:registerValue];
      }
      break;
      case ComStSt25sdkSTRegister_RegisterDataSize_Enum_REGISTER_DATA_ON_8_BITS:
      if (value > (jint) 0xFF) {
        ComStSt25sdkSTLog_eWithNSString_(@"This register supports only 8 bits data!");
        @throw new_ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_(JreLoadEnum(ComStSt25sdkSTException_STExceptionCode, BAD_PARAMETER));
      }
      attributeValue = (jbyte) value;
      if (mExtendedRegisterAddressingMode_) {
        [((ComStSt25sdkCommandIso15693CustomCommand *) nil_chk(mIso15693CustomCommand_)) writeConfigWithByte:(jbyte) mRegisterAddress_ withByte:(jbyte) mRegisterParameterAddress_ withByte:attributeValue];
      }
      else {
        [((ComStSt25sdkCommandIso15693CustomCommand *) nil_chk(mIso15693CustomCommand_)) writeConfigWithByte:(jbyte) mRegisterAddress_ withByte:attributeValue];
      }
      break;
      default:
      @throw new_ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_(JreLoadEnum(ComStSt25sdkSTException_STExceptionCode, NOT_SUPPORTED));
    }
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x4, -1, -1, 2, -1, -1, -1 },
    { NULL, "V", 0x4, 3, 4, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComStSt25sdkCommandIso15693CustomCommand:withInt:withInt:withNSString:withNSString:withComStSt25sdkSTRegister_RegisterAccessRights:withComStSt25sdkSTRegister_RegisterDataSize:);
  methods[1].selector = @selector(initWithComStSt25sdkCommandIso15693CustomCommand:withInt:withNSString:withNSString:withComStSt25sdkSTRegister_RegisterAccessRights:withComStSt25sdkSTRegister_RegisterDataSize:);
  methods[2].selector = @selector(readTagRegisterValue);
  methods[3].selector = @selector(writeRegisterValueWithInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "mIso15693CustomCommand_", "LComStSt25sdkCommandIso15693CustomCommand;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComStSt25sdkCommandIso15693CustomCommand;IILNSString;LNSString;LComStSt25sdkSTRegister_RegisterAccessRights;LComStSt25sdkSTRegister_RegisterDataSize;", "LComStSt25sdkCommandIso15693CustomCommand;ILNSString;LNSString;LComStSt25sdkSTRegister_RegisterAccessRights;LComStSt25sdkSTRegister_RegisterDataSize;", "LComStSt25sdkSTException;", "writeRegisterValue", "I" };
  static const J2ObjcClassInfo _ComStSt25sdkType5STType5Register = { "STType5Register", "com.st.st25sdk.type5", ptrTable, methods, fields, 7, 0x1, 4, 1, -1, -1, -1, -1, -1 };
  return &_ComStSt25sdkType5STType5Register;
}

@end

void ComStSt25sdkType5STType5Register_initWithComStSt25sdkCommandIso15693CustomCommand_withInt_withInt_withNSString_withNSString_withComStSt25sdkSTRegister_RegisterAccessRights_withComStSt25sdkSTRegister_RegisterDataSize_(ComStSt25sdkType5STType5Register *self, ComStSt25sdkCommandIso15693CustomCommand *iso15693CustomCommand, jint registerFid, jint registerPid, NSString *registerName, NSString *registerContentDescription, ComStSt25sdkSTRegister_RegisterAccessRights *registerAccessRights, ComStSt25sdkSTRegister_RegisterDataSize *registerDataSize) {
  ComStSt25sdkSTRegister_initWithInt_withInt_withNSString_withNSString_withComStSt25sdkSTRegister_RegisterAccessRights_withComStSt25sdkSTRegister_RegisterDataSize_(self, registerFid, registerPid, registerName, registerContentDescription, registerAccessRights, registerDataSize);
  self->mIso15693CustomCommand_ = iso15693CustomCommand;
}

ComStSt25sdkType5STType5Register *new_ComStSt25sdkType5STType5Register_initWithComStSt25sdkCommandIso15693CustomCommand_withInt_withInt_withNSString_withNSString_withComStSt25sdkSTRegister_RegisterAccessRights_withComStSt25sdkSTRegister_RegisterDataSize_(ComStSt25sdkCommandIso15693CustomCommand *iso15693CustomCommand, jint registerFid, jint registerPid, NSString *registerName, NSString *registerContentDescription, ComStSt25sdkSTRegister_RegisterAccessRights *registerAccessRights, ComStSt25sdkSTRegister_RegisterDataSize *registerDataSize) {
  J2OBJC_NEW_IMPL(ComStSt25sdkType5STType5Register, initWithComStSt25sdkCommandIso15693CustomCommand_withInt_withInt_withNSString_withNSString_withComStSt25sdkSTRegister_RegisterAccessRights_withComStSt25sdkSTRegister_RegisterDataSize_, iso15693CustomCommand, registerFid, registerPid, registerName, registerContentDescription, registerAccessRights, registerDataSize)
}

ComStSt25sdkType5STType5Register *create_ComStSt25sdkType5STType5Register_initWithComStSt25sdkCommandIso15693CustomCommand_withInt_withInt_withNSString_withNSString_withComStSt25sdkSTRegister_RegisterAccessRights_withComStSt25sdkSTRegister_RegisterDataSize_(ComStSt25sdkCommandIso15693CustomCommand *iso15693CustomCommand, jint registerFid, jint registerPid, NSString *registerName, NSString *registerContentDescription, ComStSt25sdkSTRegister_RegisterAccessRights *registerAccessRights, ComStSt25sdkSTRegister_RegisterDataSize *registerDataSize) {
  J2OBJC_CREATE_IMPL(ComStSt25sdkType5STType5Register, initWithComStSt25sdkCommandIso15693CustomCommand_withInt_withInt_withNSString_withNSString_withComStSt25sdkSTRegister_RegisterAccessRights_withComStSt25sdkSTRegister_RegisterDataSize_, iso15693CustomCommand, registerFid, registerPid, registerName, registerContentDescription, registerAccessRights, registerDataSize)
}

void ComStSt25sdkType5STType5Register_initWithComStSt25sdkCommandIso15693CustomCommand_withInt_withNSString_withNSString_withComStSt25sdkSTRegister_RegisterAccessRights_withComStSt25sdkSTRegister_RegisterDataSize_(ComStSt25sdkType5STType5Register *self, ComStSt25sdkCommandIso15693CustomCommand *iso15693CustomCommand, jint registerAddress, NSString *registerName, NSString *registerContentDescription, ComStSt25sdkSTRegister_RegisterAccessRights *registerAccessRights, ComStSt25sdkSTRegister_RegisterDataSize *registerDataSize) {
  ComStSt25sdkSTRegister_initWithInt_withNSString_withNSString_withComStSt25sdkSTRegister_RegisterAccessRights_withComStSt25sdkSTRegister_RegisterDataSize_(self, registerAddress, registerName, registerContentDescription, registerAccessRights, registerDataSize);
  self->mIso15693CustomCommand_ = iso15693CustomCommand;
}

ComStSt25sdkType5STType5Register *new_ComStSt25sdkType5STType5Register_initWithComStSt25sdkCommandIso15693CustomCommand_withInt_withNSString_withNSString_withComStSt25sdkSTRegister_RegisterAccessRights_withComStSt25sdkSTRegister_RegisterDataSize_(ComStSt25sdkCommandIso15693CustomCommand *iso15693CustomCommand, jint registerAddress, NSString *registerName, NSString *registerContentDescription, ComStSt25sdkSTRegister_RegisterAccessRights *registerAccessRights, ComStSt25sdkSTRegister_RegisterDataSize *registerDataSize) {
  J2OBJC_NEW_IMPL(ComStSt25sdkType5STType5Register, initWithComStSt25sdkCommandIso15693CustomCommand_withInt_withNSString_withNSString_withComStSt25sdkSTRegister_RegisterAccessRights_withComStSt25sdkSTRegister_RegisterDataSize_, iso15693CustomCommand, registerAddress, registerName, registerContentDescription, registerAccessRights, registerDataSize)
}

ComStSt25sdkType5STType5Register *create_ComStSt25sdkType5STType5Register_initWithComStSt25sdkCommandIso15693CustomCommand_withInt_withNSString_withNSString_withComStSt25sdkSTRegister_RegisterAccessRights_withComStSt25sdkSTRegister_RegisterDataSize_(ComStSt25sdkCommandIso15693CustomCommand *iso15693CustomCommand, jint registerAddress, NSString *registerName, NSString *registerContentDescription, ComStSt25sdkSTRegister_RegisterAccessRights *registerAccessRights, ComStSt25sdkSTRegister_RegisterDataSize *registerDataSize) {
  J2OBJC_CREATE_IMPL(ComStSt25sdkType5STType5Register, initWithComStSt25sdkCommandIso15693CustomCommand_withInt_withNSString_withNSString_withComStSt25sdkSTRegister_RegisterAccessRights_withComStSt25sdkSTRegister_RegisterDataSize_, iso15693CustomCommand, registerAddress, registerName, registerContentDescription, registerAccessRights, registerDataSize)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComStSt25sdkType5STType5Register)
