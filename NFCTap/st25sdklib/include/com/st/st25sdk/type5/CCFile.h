//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: st25sdk_ios/type5/CCFile.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComStSt25sdkType5CCFile")
#ifdef RESTRICT_ComStSt25sdkType5CCFile
#define INCLUDE_ALL_ComStSt25sdkType5CCFile 0
#else
#define INCLUDE_ALL_ComStSt25sdkType5CCFile 1
#endif
#undef RESTRICT_ComStSt25sdkType5CCFile

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComStSt25sdkType5CCFile_) && (INCLUDE_ALL_ComStSt25sdkType5CCFile || defined(INCLUDE_ComStSt25sdkType5CCFile))
#define ComStSt25sdkType5CCFile_

#define RESTRICT_ComStSt25sdkCacheInterface 1
#define INCLUDE_ComStSt25sdkCacheInterface 1
#include "com/st/st25sdk/CacheInterface.h"

@class IOSByteArray;

@interface ComStSt25sdkType5CCFile : NSObject < ComStSt25sdkCacheInterface > {
 @public
  jint mCCLength_;
  jbyte mMagicNumber_;
  jbyte mMappingVersion_;
  jbyte mReadAccess_;
  jbyte mWriteAccess_;
  jint mDataAreaSize_;
  jint mBlockSize_;
  jboolean mSupport2ByteAddressMode_;
  jboolean mSupportMultipleBlockReadCommand_;
  jboolean mSupportLockBlockCommand_;
  jboolean mSupportSpecialFrameCommand_;
  jboolean mVicinityHighDensityOverflow_;
  jboolean mCacheActivated_;
  jboolean mCacheInvalidated_;
}
@property (readonly, class) jbyte CCFILE_SHORT_IDENTIFIER NS_SWIFT_NAME(CCFILE_SHORT_IDENTIFIER);
@property (readonly, class) jbyte CCFILE_LONG_IDENTIFIER NS_SWIFT_NAME(CCFILE_LONG_IDENTIFIER);
@property (readonly, class) jint CCFILE_DATA_AREA_SIZE_MULTIPLIER NS_SWIFT_NAME(CCFILE_DATA_AREA_SIZE_MULTIPLIER);

+ (jbyte)CCFILE_SHORT_IDENTIFIER;

+ (jbyte)CCFILE_LONG_IDENTIFIER;

+ (jint)CCFILE_DATA_AREA_SIZE_MULTIPLIER;

#pragma mark Public

- (instancetype __nonnull)init;

- (void)activateCache;

- (void)deactivateCache;

- (jint)getCCLength;

- (jbyte)getCCMappingVersion;

- (jbyte)getCCReadAccess;

- (jbyte)getCCWriteAccess;

- (jint)getDataAreaSize;

+ (jint)getExpectedCCFileLengthWithInt:(jint)dataAreaSizeInBytes;

- (jbyte)getMagicNumber;

- (void)invalidateCache;

- (jboolean)is2ByteAddressModeSupported;

- (jboolean)isCacheActivated;

- (jboolean)isCacheValid;

- (jboolean)isLockBlockCommandSupported;

- (jboolean)isMultipleBlockReadCommandSupported;

- (jboolean)isSpecialFrameCommandSupported;

- (jboolean)isVicinityHighDensityOverflow;

- (void)parseCCFileWithByteArray:(IOSByteArray *)buffer;

- (IOSByteArray *)read;

- (IOSByteArray *)rebuildBuffer;

- (void)updateCache;

- (void)validateCache;

- (void)write;

- (void)writeWithByteArray:(IOSByteArray *)buffer;

#pragma mark Protected

- (void)initEmptyCCFileWithInt:(jint)memSizeInBytes OBJC_METHOD_FAMILY_NONE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComStSt25sdkType5CCFile)

inline jbyte ComStSt25sdkType5CCFile_get_CCFILE_SHORT_IDENTIFIER(void);
#define ComStSt25sdkType5CCFile_CCFILE_SHORT_IDENTIFIER -31
J2OBJC_STATIC_FIELD_CONSTANT(ComStSt25sdkType5CCFile, CCFILE_SHORT_IDENTIFIER, jbyte)

inline jbyte ComStSt25sdkType5CCFile_get_CCFILE_LONG_IDENTIFIER(void);
#define ComStSt25sdkType5CCFile_CCFILE_LONG_IDENTIFIER -30
J2OBJC_STATIC_FIELD_CONSTANT(ComStSt25sdkType5CCFile, CCFILE_LONG_IDENTIFIER, jbyte)

inline jint ComStSt25sdkType5CCFile_get_CCFILE_DATA_AREA_SIZE_MULTIPLIER(void);
#define ComStSt25sdkType5CCFile_CCFILE_DATA_AREA_SIZE_MULTIPLIER 8
J2OBJC_STATIC_FIELD_CONSTANT(ComStSt25sdkType5CCFile, CCFILE_DATA_AREA_SIZE_MULTIPLIER, jint)

FOUNDATION_EXPORT void ComStSt25sdkType5CCFile_init(ComStSt25sdkType5CCFile *self);

FOUNDATION_EXPORT jint ComStSt25sdkType5CCFile_getExpectedCCFileLengthWithInt_(jint dataAreaSizeInBytes);

J2OBJC_TYPE_LITERAL_HEADER(ComStSt25sdkType5CCFile)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComStSt25sdkType5CCFile")
