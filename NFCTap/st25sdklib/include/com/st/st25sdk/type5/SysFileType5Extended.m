//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: st25sdk_ios/type5/SysFileType5Extended.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/st/st25sdk/Helper.h"
#include "com/st/st25sdk/STException.h"
#include "com/st/st25sdk/command/Iso15693Command.h"
#include "com/st/st25sdk/type5/SysFile.h"
#include "com/st/st25sdk/type5/SysFileType5.h"
#include "com/st/st25sdk/type5/SysFileType5Extended.h"
#include "java/nio/ByteBuffer.h"
#include "java/util/Arrays.h"

@implementation ComStSt25sdkType5SysFileType5Extended

- (instancetype)initWithComStSt25sdkCommandIso15693Command:(ComStSt25sdkCommandIso15693Command *)iso15693Command {
  ComStSt25sdkType5SysFileType5Extended_initWithComStSt25sdkCommandIso15693Command_(self, iso15693Command);
  return self;
}

- (IOSByteArray *)read {
  IOSByteArray *cmdBuffer;
  if (!mCacheActivated_ || mCacheInvalidated_) {
    cmdBuffer = [((ComStSt25sdkCommandIso15693Command *) nil_chk(mIso15693Command_)) extendedGetSystemInfo];
    if (IOSByteArray_Get(nil_chk(cmdBuffer), 0) != (jint) 0x00) {
      cmdBuffer = [((ComStSt25sdkCommandIso15693Command *) nil_chk(mIso15693Command_)) getSystemInfo];
      if (IOSByteArray_Get(nil_chk(cmdBuffer), 0) != (jint) 0x00) {
        @throw (new_ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_(JreLoadEnum(ComStSt25sdkSTException_STExceptionCode, CMD_FAILED)));
      }
    }
    mBuffer_ = JavaUtilArrays_copyOfRangeWithByteArray_withInt_withInt_(cmdBuffer, 1, cmdBuffer->size_);
  }
  return mBuffer_;
}

- (void)parseSysFileWithByteArray:(IOSByteArray *)buffer {
  if (buffer == nil || buffer->size_ < 9) {
    @throw new_ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_(JreLoadEnum(ComStSt25sdkSTException_STExceptionCode, INVALID_DATA));
  }
  JavaNioByteBuffer *byteBuffer = JavaNioByteBuffer_wrapWithByteArray_(buffer);
  jbyte sysInfoByte = [((JavaNioByteBuffer *) nil_chk(byteBuffer)) get];
  (void) [byteBuffer getWithByteArray:mUid_ withInt:0 withInt:8];
  mUid_ = ComStSt25sdkHelper_reverseByteArrayWithByteArray_(mUid_);
  if ((sysInfoByte & ComStSt25sdkType5SysFile_DSFID_MASK) == ComStSt25sdkType5SysFile_DSFID_MASK) {
    mDSFIDSupported_ = true;
    mDSFID_ = [byteBuffer get];
  }
  else mDSFIDSupported_ = false;
  if ((sysInfoByte & ComStSt25sdkType5SysFile_AFI_MASK) == ComStSt25sdkType5SysFile_AFI_MASK) {
    mAFISupported_ = true;
    mAFI_ = [byteBuffer get];
  }
  else mAFISupported_ = false;
  if (sysInfoByte > (jint) 0x0F) {
    if ((sysInfoByte & ComStSt25sdkType5SysFile_VICC_MEM_SIZE_MASK) == ComStSt25sdkType5SysFile_VICC_MEM_SIZE_MASK) {
      mVICCMemSizesupported_ = true;
      mNumberOfBlocks_ = ([byteBuffer get] & (jint) 0x00FF);
      mNumberOfBlocks_ += (JreLShift32(([byteBuffer get] & (jint) 0x00FF), 8));
      mBlockSize_ = ([byteBuffer get] & (jint) 0x1F) + 1;
    }
    else mVICCMemSizesupported_ = false;
  }
  else {
    if ((sysInfoByte & ComStSt25sdkType5SysFile_VICC_MEM_SIZE_MASK) == ComStSt25sdkType5SysFile_VICC_MEM_SIZE_MASK) {
      mVICCMemSizesupported_ = true;
      mNumberOfBlocks_ = ComStSt25sdkHelper_convertByteToUnsignedIntWithByte_([byteBuffer get]);
      mBlockSize_ = ([byteBuffer get] & (jint) 0x1F) + 1;
    }
    else mVICCMemSizesupported_ = false;
  }
  if ((sysInfoByte & ComStSt25sdkType5SysFile_ICREF_MASK) == ComStSt25sdkType5SysFile_ICREF_MASK) {
    mICRefSupported_ = true;
    mICRef_ = [byteBuffer get];
  }
  else mICRefSupported_ = false;
  if (sysInfoByte > (jint) 0x0F) {
    m2ByteAddressing_ = ((IOSByteArray_Get(buffer, 0) & ComStSt25sdkType5SysFileType5_MOI_VALUE) == ComStSt25sdkType5SysFileType5_MOI_VALUE);
    if ((sysInfoByte & ComStSt25sdkType5SysFileType5_VICC_CMD_LIST_MASK) == ComStSt25sdkType5SysFileType5_VICC_CMD_LIST_MASK) {
      mVICCCommandListSupported_ = true;
      (void) [byteBuffer getWithByteArray:mVICCCommandList_ withInt:0 withInt:4];
      mVICCCommandList_ = ComStSt25sdkHelper_reverseByteArrayWithByteArray_(mVICCCommandList_);
    }
    else mVICCCommandListSupported_ = false;
  }
  mBuffer_ = [byteBuffer array];
  mLength_ = ((IOSByteArray *) nil_chk(mBuffer_))->size_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "V", 0x4, 2, 3, 1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComStSt25sdkCommandIso15693Command:);
  methods[1].selector = @selector(read);
  methods[2].selector = @selector(parseSysFileWithByteArray:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComStSt25sdkCommandIso15693Command;", "LComStSt25sdkSTException;", "parseSysFile", "[B" };
  static const J2ObjcClassInfo _ComStSt25sdkType5SysFileType5Extended = { "SysFileType5Extended", "com.st.st25sdk.type5", ptrTable, methods, NULL, 7, 0x1, 3, 0, -1, -1, -1, -1, -1 };
  return &_ComStSt25sdkType5SysFileType5Extended;
}

@end

void ComStSt25sdkType5SysFileType5Extended_initWithComStSt25sdkCommandIso15693Command_(ComStSt25sdkType5SysFileType5Extended *self, ComStSt25sdkCommandIso15693Command *iso15693Command) {
  ComStSt25sdkType5SysFileType5_initWithComStSt25sdkCommandIso15693Command_(self, iso15693Command);
}

ComStSt25sdkType5SysFileType5Extended *new_ComStSt25sdkType5SysFileType5Extended_initWithComStSt25sdkCommandIso15693Command_(ComStSt25sdkCommandIso15693Command *iso15693Command) {
  J2OBJC_NEW_IMPL(ComStSt25sdkType5SysFileType5Extended, initWithComStSt25sdkCommandIso15693Command_, iso15693Command)
}

ComStSt25sdkType5SysFileType5Extended *create_ComStSt25sdkType5SysFileType5Extended_initWithComStSt25sdkCommandIso15693Command_(ComStSt25sdkCommandIso15693Command *iso15693Command) {
  J2OBJC_CREATE_IMPL(ComStSt25sdkType5SysFileType5Extended, initWithComStSt25sdkCommandIso15693Command_, iso15693Command)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComStSt25sdkType5SysFileType5Extended)
