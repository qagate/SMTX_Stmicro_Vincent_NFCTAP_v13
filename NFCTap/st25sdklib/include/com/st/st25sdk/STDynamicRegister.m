//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: st25sdk_ios/STDynamicRegister.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/st/st25sdk/Helper.h"
#include "com/st/st25sdk/STDynamicRegister.h"
#include "com/st/st25sdk/STException.h"
#include "com/st/st25sdk/STLog.h"
#include "com/st/st25sdk/STRegister.h"
#include "com/st/st25sdk/command/Iso15693CustomCommand.h"
#include "com/st/st25sdk/type5/STType5Register.h"

@interface ComStSt25sdkSTDynamicRegister_STDynamicRegisterField () {
 @public
  ComStSt25sdkSTDynamicRegister *this$1_;
}

@end

@implementation ComStSt25sdkSTDynamicRegister

- (instancetype)initWithComStSt25sdkCommandIso15693CustomCommand:(ComStSt25sdkCommandIso15693CustomCommand *)iso15693CustomCommand
                                                         withInt:(jint)registerAddress
                                                    withNSString:(NSString *)registerName
                                                    withNSString:(NSString *)registerContentDescription
                 withComStSt25sdkSTRegister_RegisterAccessRights:(ComStSt25sdkSTRegister_RegisterAccessRights *)registerAccessRights
                     withComStSt25sdkSTRegister_RegisterDataSize:(ComStSt25sdkSTRegister_RegisterDataSize *)registerDataSize {
  ComStSt25sdkSTDynamicRegister_initWithComStSt25sdkCommandIso15693CustomCommand_withInt_withNSString_withNSString_withComStSt25sdkSTRegister_RegisterAccessRights_withComStSt25sdkSTRegister_RegisterDataSize_(self, iso15693CustomCommand, registerAddress, registerName, registerContentDescription, registerAccessRights, registerDataSize);
  return self;
}

- (void)setRegisterValueWithInt:(jint)value {
  [self setRegisterValueWithInt:value withBoolean:false];
}

- (void)setRegisterValueWithInt:(jint)value
                    withBoolean:(jboolean)useFastCommand {
  {
    jbyte registerValue;
    switch ([mRegisterDataSize_ ordinal]) {
      case ComStSt25sdkSTRegister_RegisterDataSize_Enum_REGISTER_DATA_ON_32_BITS:
      @throw new_ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_(JreLoadEnum(ComStSt25sdkSTException_STExceptionCode, NOT_IMPLEMENTED));
      case ComStSt25sdkSTRegister_RegisterDataSize_Enum_REGISTER_DATA_ON_24_BITS:
      @throw new_ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_(JreLoadEnum(ComStSt25sdkSTException_STExceptionCode, NOT_IMPLEMENTED));
      case ComStSt25sdkSTRegister_RegisterDataSize_Enum_REGISTER_DATA_ON_16_BITS:
      @throw new_ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_(JreLoadEnum(ComStSt25sdkSTException_STExceptionCode, NOT_IMPLEMENTED));
      case ComStSt25sdkSTRegister_RegisterDataSize_Enum_REGISTER_DATA_ON_8_BITS:
      if (value > (jint) 0xFF) {
        ComStSt25sdkSTLog_eWithNSString_(@"This register supports only 8 bits data!");
        @throw new_ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_(JreLoadEnum(ComStSt25sdkSTException_STExceptionCode, BAD_PARAMETER));
      }
      registerValue = (jbyte) value;
      if (useFastCommand) {
        [((ComStSt25sdkCommandIso15693CustomCommand *) nil_chk(mIso15693CustomCommand_)) fastWriteDynConfigWithByte:(jbyte) mRegisterAddress_ withByte:registerValue];
      }
      else {
        [((ComStSt25sdkCommandIso15693CustomCommand *) nil_chk(mIso15693CustomCommand_)) writeDynConfigWithByte:(jbyte) mRegisterAddress_ withByte:registerValue];
      }
      break;
      default:
      @throw new_ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_(JreLoadEnum(ComStSt25sdkSTException_STExceptionCode, NOT_IMPLEMENTED));
    }
  }
  mRegisterValue_ = value;
  mCacheInvalidated_ = false;
  [self notifyListeners];
}

- (jint)readTagRegisterValue {
  return [self readTagRegisterValueWithBoolean:false];
}

- (jint)readTagRegisterValueWithBoolean:(jboolean)useFastCommand {
  IOSByteArray *response;
  if (useFastCommand) {
    response = [((ComStSt25sdkCommandIso15693CustomCommand *) nil_chk(mIso15693CustomCommand_)) fastReadDynConfigWithByte:(jbyte) mRegisterAddress_];
  }
  else {
    response = [((ComStSt25sdkCommandIso15693CustomCommand *) nil_chk(mIso15693CustomCommand_)) readDynConfigWithByte:(jbyte) mRegisterAddress_];
  }
  if (((IOSByteArray *) nil_chk(response))->size_ < 2) {
    @throw new_ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_withByteArray_(JreLoadEnum(ComStSt25sdkSTException_STExceptionCode, CMD_FAILED), response);
  }
  mRegisterValue_ = ComStSt25sdkHelper_convertByteToUnsignedIntWithByte_(IOSByteArray_Get(response, 1));
  mCacheInvalidated_ = false;
  return mRegisterValue_;
}

- (jint)getRegisterValueWithBoolean:(jboolean)useFastCommand {
  jint registerValue;
  if (!mCacheActivated_ || mCacheInvalidated_) {
    registerValue = [self readTagRegisterValueWithBoolean:useFastCommand];
  }
  else {
    registerValue = mRegisterValue_;
  }
  switch ([mRegisterDataSize_ ordinal]) {
    case ComStSt25sdkSTRegister_RegisterDataSize_Enum_REGISTER_DATA_ON_32_BITS:
    registerValue = registerValue & (jint) 0xFFFFFFFF;
    break;
    case ComStSt25sdkSTRegister_RegisterDataSize_Enum_REGISTER_DATA_ON_24_BITS:
    registerValue = registerValue & (jint) 0xFFFFFF;
    break;
    case ComStSt25sdkSTRegister_RegisterDataSize_Enum_REGISTER_DATA_ON_16_BITS:
    registerValue = registerValue & (jint) 0xFFFF;
    break;
    case ComStSt25sdkSTRegister_RegisterDataSize_Enum_REGISTER_DATA_ON_8_BITS:
    registerValue = registerValue & (jint) 0xFF;
    break;
    default:
    @throw new_ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_(JreLoadEnum(ComStSt25sdkSTException_STExceptionCode, NOT_IMPLEMENTED));
  }
  return registerValue;
}

- (ComStSt25sdkSTDynamicRegister_STDynamicRegisterField *)getDynRegisterFieldWithNSString:(NSString *)fieldName {
  return (ComStSt25sdkSTDynamicRegister_STDynamicRegisterField *) cast_chk([self getRegisterFieldWithNSString:fieldName], [ComStSt25sdkSTDynamicRegister_STDynamicRegisterField class]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, 3, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 4, 3, -1, -1, -1 },
    { NULL, "I", 0x4, -1, -1, 3, -1, -1, -1 },
    { NULL, "I", 0x4, 5, 6, 3, -1, -1, -1 },
    { NULL, "I", 0x1, 7, 6, 3, -1, -1, -1 },
    { NULL, "LComStSt25sdkSTDynamicRegister_STDynamicRegisterField;", 0x1, 8, 9, 3, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComStSt25sdkCommandIso15693CustomCommand:withInt:withNSString:withNSString:withComStSt25sdkSTRegister_RegisterAccessRights:withComStSt25sdkSTRegister_RegisterDataSize:);
  methods[1].selector = @selector(setRegisterValueWithInt:);
  methods[2].selector = @selector(setRegisterValueWithInt:withBoolean:);
  methods[3].selector = @selector(readTagRegisterValue);
  methods[4].selector = @selector(readTagRegisterValueWithBoolean:);
  methods[5].selector = @selector(getRegisterValueWithBoolean:);
  methods[6].selector = @selector(getDynRegisterFieldWithNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComStSt25sdkCommandIso15693CustomCommand;ILNSString;LNSString;LComStSt25sdkSTRegister_RegisterAccessRights;LComStSt25sdkSTRegister_RegisterDataSize;", "setRegisterValue", "I", "LComStSt25sdkSTException;", "IZ", "readTagRegisterValue", "Z", "getRegisterValue", "getDynRegisterField", "LNSString;", "LComStSt25sdkSTDynamicRegister_STDynamicRegisterField;" };
  static const J2ObjcClassInfo _ComStSt25sdkSTDynamicRegister = { "STDynamicRegister", "com.st.st25sdk", ptrTable, methods, NULL, 7, 0x1, 7, 0, -1, 10, -1, -1, -1 };
  return &_ComStSt25sdkSTDynamicRegister;
}

@end

void ComStSt25sdkSTDynamicRegister_initWithComStSt25sdkCommandIso15693CustomCommand_withInt_withNSString_withNSString_withComStSt25sdkSTRegister_RegisterAccessRights_withComStSt25sdkSTRegister_RegisterDataSize_(ComStSt25sdkSTDynamicRegister *self, ComStSt25sdkCommandIso15693CustomCommand *iso15693CustomCommand, jint registerAddress, NSString *registerName, NSString *registerContentDescription, ComStSt25sdkSTRegister_RegisterAccessRights *registerAccessRights, ComStSt25sdkSTRegister_RegisterDataSize *registerDataSize) {
  ComStSt25sdkType5STType5Register_initWithComStSt25sdkCommandIso15693CustomCommand_withInt_withNSString_withNSString_withComStSt25sdkSTRegister_RegisterAccessRights_withComStSt25sdkSTRegister_RegisterDataSize_(self, iso15693CustomCommand, registerAddress, registerName, registerContentDescription, registerAccessRights, registerDataSize);
}

ComStSt25sdkSTDynamicRegister *new_ComStSt25sdkSTDynamicRegister_initWithComStSt25sdkCommandIso15693CustomCommand_withInt_withNSString_withNSString_withComStSt25sdkSTRegister_RegisterAccessRights_withComStSt25sdkSTRegister_RegisterDataSize_(ComStSt25sdkCommandIso15693CustomCommand *iso15693CustomCommand, jint registerAddress, NSString *registerName, NSString *registerContentDescription, ComStSt25sdkSTRegister_RegisterAccessRights *registerAccessRights, ComStSt25sdkSTRegister_RegisterDataSize *registerDataSize) {
  J2OBJC_NEW_IMPL(ComStSt25sdkSTDynamicRegister, initWithComStSt25sdkCommandIso15693CustomCommand_withInt_withNSString_withNSString_withComStSt25sdkSTRegister_RegisterAccessRights_withComStSt25sdkSTRegister_RegisterDataSize_, iso15693CustomCommand, registerAddress, registerName, registerContentDescription, registerAccessRights, registerDataSize)
}

ComStSt25sdkSTDynamicRegister *create_ComStSt25sdkSTDynamicRegister_initWithComStSt25sdkCommandIso15693CustomCommand_withInt_withNSString_withNSString_withComStSt25sdkSTRegister_RegisterAccessRights_withComStSt25sdkSTRegister_RegisterDataSize_(ComStSt25sdkCommandIso15693CustomCommand *iso15693CustomCommand, jint registerAddress, NSString *registerName, NSString *registerContentDescription, ComStSt25sdkSTRegister_RegisterAccessRights *registerAccessRights, ComStSt25sdkSTRegister_RegisterDataSize *registerDataSize) {
  J2OBJC_CREATE_IMPL(ComStSt25sdkSTDynamicRegister, initWithComStSt25sdkCommandIso15693CustomCommand_withInt_withNSString_withNSString_withComStSt25sdkSTRegister_RegisterAccessRights_withComStSt25sdkSTRegister_RegisterDataSize_, iso15693CustomCommand, registerAddress, registerName, registerContentDescription, registerAccessRights, registerDataSize)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComStSt25sdkSTDynamicRegister)

@implementation ComStSt25sdkSTDynamicRegister_STDynamicRegisterField

- (instancetype)initWithComStSt25sdkSTDynamicRegister:(ComStSt25sdkSTDynamicRegister *)outer$
                                         withNSString:(NSString *)name
                                         withNSString:(NSString *)description_
                                              withInt:(jint)mask {
  ComStSt25sdkSTDynamicRegister_STDynamicRegisterField_initWithComStSt25sdkSTDynamicRegister_withNSString_withNSString_withInt_(self, outer$, name, description_, mask);
  return self;
}

- (instancetype)initWithComStSt25sdkSTDynamicRegister:(ComStSt25sdkSTDynamicRegister *)outer$
                                         withNSString:(NSString *)name
                                         withNSString:(NSString *)description_
                                             withByte:(jbyte)mask {
  ComStSt25sdkSTDynamicRegister_STDynamicRegisterField_initWithComStSt25sdkSTDynamicRegister_withNSString_withNSString_withByte_(self, outer$, name, description_, mask);
  return self;
}

- (jint)getValueWithBoolean:(jboolean)useFastCommand {
  jint registerValue = [this$1_ getRegisterValueWithBoolean:useFastCommand];
  return [self computeFieldWithInt:registerValue];
}

- (void)setValueWithInt:(jint)fieldValue
            withBoolean:(jboolean)useFastCommand {
  jint registerValue = [this$1_ getRegisterValueWithBoolean:useFastCommand];
  jint newRegisterValue = [self computeRegisterValueWithInt:registerValue withInt:fieldValue];
  [this$1_ setRegisterValueWithInt:newRegisterValue withBoolean:useFastCommand];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 2, 3, 4, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 6, 4, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComStSt25sdkSTDynamicRegister:withNSString:withNSString:withInt:);
  methods[1].selector = @selector(initWithComStSt25sdkSTDynamicRegister:withNSString:withNSString:withByte:);
  methods[2].selector = @selector(getValueWithBoolean:);
  methods[3].selector = @selector(setValueWithInt:withBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$1_", "LComStSt25sdkSTDynamicRegister;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LNSString;I", "LNSString;LNSString;B", "getValue", "Z", "LComStSt25sdkSTException;", "setValue", "IZ", "LComStSt25sdkSTDynamicRegister;" };
  static const J2ObjcClassInfo _ComStSt25sdkSTDynamicRegister_STDynamicRegisterField = { "STDynamicRegisterField", "com.st.st25sdk", ptrTable, methods, fields, 7, 0x1, 4, 1, 7, -1, -1, -1, -1 };
  return &_ComStSt25sdkSTDynamicRegister_STDynamicRegisterField;
}

@end

void ComStSt25sdkSTDynamicRegister_STDynamicRegisterField_initWithComStSt25sdkSTDynamicRegister_withNSString_withNSString_withInt_(ComStSt25sdkSTDynamicRegister_STDynamicRegisterField *self, ComStSt25sdkSTDynamicRegister *outer$, NSString *name, NSString *description_, jint mask) {
  self->this$1_ = outer$;
  ComStSt25sdkSTRegister_STRegisterField_initWithComStSt25sdkSTRegister_withNSString_withNSString_withInt_(self, outer$, name, description_, mask);
}

ComStSt25sdkSTDynamicRegister_STDynamicRegisterField *new_ComStSt25sdkSTDynamicRegister_STDynamicRegisterField_initWithComStSt25sdkSTDynamicRegister_withNSString_withNSString_withInt_(ComStSt25sdkSTDynamicRegister *outer$, NSString *name, NSString *description_, jint mask) {
  J2OBJC_NEW_IMPL(ComStSt25sdkSTDynamicRegister_STDynamicRegisterField, initWithComStSt25sdkSTDynamicRegister_withNSString_withNSString_withInt_, outer$, name, description_, mask)
}

ComStSt25sdkSTDynamicRegister_STDynamicRegisterField *create_ComStSt25sdkSTDynamicRegister_STDynamicRegisterField_initWithComStSt25sdkSTDynamicRegister_withNSString_withNSString_withInt_(ComStSt25sdkSTDynamicRegister *outer$, NSString *name, NSString *description_, jint mask) {
  J2OBJC_CREATE_IMPL(ComStSt25sdkSTDynamicRegister_STDynamicRegisterField, initWithComStSt25sdkSTDynamicRegister_withNSString_withNSString_withInt_, outer$, name, description_, mask)
}

void ComStSt25sdkSTDynamicRegister_STDynamicRegisterField_initWithComStSt25sdkSTDynamicRegister_withNSString_withNSString_withByte_(ComStSt25sdkSTDynamicRegister_STDynamicRegisterField *self, ComStSt25sdkSTDynamicRegister *outer$, NSString *name, NSString *description_, jbyte mask) {
  self->this$1_ = outer$;
  ComStSt25sdkSTRegister_STRegisterField_initWithComStSt25sdkSTRegister_withNSString_withNSString_withByte_(self, outer$, name, description_, mask);
}

ComStSt25sdkSTDynamicRegister_STDynamicRegisterField *new_ComStSt25sdkSTDynamicRegister_STDynamicRegisterField_initWithComStSt25sdkSTDynamicRegister_withNSString_withNSString_withByte_(ComStSt25sdkSTDynamicRegister *outer$, NSString *name, NSString *description_, jbyte mask) {
  J2OBJC_NEW_IMPL(ComStSt25sdkSTDynamicRegister_STDynamicRegisterField, initWithComStSt25sdkSTDynamicRegister_withNSString_withNSString_withByte_, outer$, name, description_, mask)
}

ComStSt25sdkSTDynamicRegister_STDynamicRegisterField *create_ComStSt25sdkSTDynamicRegister_STDynamicRegisterField_initWithComStSt25sdkSTDynamicRegister_withNSString_withNSString_withByte_(ComStSt25sdkSTDynamicRegister *outer$, NSString *name, NSString *description_, jbyte mask) {
  J2OBJC_CREATE_IMPL(ComStSt25sdkSTDynamicRegister_STDynamicRegisterField, initWithComStSt25sdkSTDynamicRegister_withNSString_withNSString_withByte_, outer$, name, description_, mask)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComStSt25sdkSTDynamicRegister_STDynamicRegisterField)
