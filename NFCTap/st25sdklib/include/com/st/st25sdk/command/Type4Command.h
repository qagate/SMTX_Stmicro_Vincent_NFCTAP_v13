//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: st25sdk_ios/command/Type4Command.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComStSt25sdkCommandType4Command")
#ifdef RESTRICT_ComStSt25sdkCommandType4Command
#define INCLUDE_ALL_ComStSt25sdkCommandType4Command 0
#else
#define INCLUDE_ALL_ComStSt25sdkCommandType4Command 1
#endif
#undef RESTRICT_ComStSt25sdkCommandType4Command

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComStSt25sdkCommandType4Command_) && (INCLUDE_ALL_ComStSt25sdkCommandType4Command || defined(INCLUDE_ComStSt25sdkCommandType4Command))
#define ComStSt25sdkCommandType4Command_

#define RESTRICT_ComStSt25sdkCommandType4CommandInterface 1
#define INCLUDE_ComStSt25sdkCommandType4CommandInterface 1
#include "com/st/st25sdk/command/Type4CommandInterface.h"

@class ComStSt25sdkRFReaderInterface_TransceiveMode;
@class IOSByteArray;
@protocol ComStSt25sdkRFReaderInterface;
@protocol JavaUtilConcurrentLocksLock;

@interface ComStSt25sdkCommandType4Command : NSObject < ComStSt25sdkCommandType4CommandInterface > {
 @public
  ComStSt25sdkRFReaderInterface_TransceiveMode *transceiveMode_;
  jint mMaxReadSizeInBytes_;
  jint mMaxWriteSizeInBytes_;
}
@property (readonly, class) jboolean DBG NS_SWIFT_NAME(DBG);
@property (readonly, class) jbyte TYPE4_CMD_SELECT NS_SWIFT_NAME(TYPE4_CMD_SELECT);
@property (readonly, class) jbyte TYPE4_CMD_READ_BINARY NS_SWIFT_NAME(TYPE4_CMD_READ_BINARY);
@property (readonly, class) jbyte TYPE4_CMD_UPDATE_BINARY NS_SWIFT_NAME(TYPE4_CMD_UPDATE_BINARY);
@property (readonly, class) jbyte TYPE4_CMD_SELECT_BY_FILE_ID NS_SWIFT_NAME(TYPE4_CMD_SELECT_BY_FILE_ID);
@property (readonly, class) jbyte TYPE4_CMD_SELECT_BY_NAME NS_SWIFT_NAME(TYPE4_CMD_SELECT_BY_NAME);
@property (readonly, class) jbyte TYPE4_CMD_FIRST_OR_ONLY_OCCURENCE NS_SWIFT_NAME(TYPE4_CMD_FIRST_OR_ONLY_OCCURENCE);
@property (readonly, class) id<JavaUtilConcurrentLocksLock> mLock NS_SWIFT_NAME(mLock);
@property (readonly, class) jint TYPE4_HEADER_SIZE NS_SWIFT_NAME(TYPE4_HEADER_SIZE);

+ (jboolean)DBG;

+ (jbyte)TYPE4_CMD_SELECT;

+ (jbyte)TYPE4_CMD_READ_BINARY;

+ (jbyte)TYPE4_CMD_UPDATE_BINARY;

+ (jbyte)TYPE4_CMD_SELECT_BY_FILE_ID;

+ (jbyte)TYPE4_CMD_SELECT_BY_NAME;

+ (jbyte)TYPE4_CMD_FIRST_OR_ONLY_OCCURENCE;

+ (id<JavaUtilConcurrentLocksLock>)mLock;

+ (jint)TYPE4_HEADER_SIZE;

#pragma mark Public

- (instancetype __nonnull)initWithComStSt25sdkRFReaderInterface:(id<ComStSt25sdkRFReaderInterface>)reader
                                                        withInt:(jint)maxRApduSize
                                                        withInt:(jint)maxCApduSize;

- (jint)getMaxCApduDataSize;

- (jint)getMaxRApduDataSize;

- (IOSByteArray *)readBinaryWithByte:(jbyte)p1
                            withByte:(jbyte)p2
                            withByte:(jbyte)length;

- (IOSByteArray *)readDataWithInt:(jint)fileOffset
                          withInt:(jint)sizeInBytes;

- (IOSByteArray *)selectWithByte:(jbyte)p1
                        withByte:(jbyte)p2
                   withByteArray:(IOSByteArray *)data;

- (IOSByteArray *)selectFileWithInt:(jint)fileId;

- (IOSByteArray *)selectNdefTagApplication;

- (IOSByteArray *)selectNdefTagApplicationMappingVersion1;

- (IOSByteArray *)selectNdefTagApplicationMappingVersion2;

- (IOSByteArray *)selectNdefTagApplicationSequence;

- (void)setMaxCApduDataSizeWithInt:(jint)sizeInBytes;

- (void)setMaxRApduDataSizeWithInt:(jint)sizeInBytes;

- (IOSByteArray *)transceiveWithNSString:(NSString *)commandName
                           withByteArray:(IOSByteArray *)data;

- (IOSByteArray *)updateBinaryWithByte:(jbyte)p1
                              withByte:(jbyte)p2
                         withByteArray:(IOSByteArray *)data;

- (void)writeDataWithInt:(jint)fileOffset
           withByteArray:(IOSByteArray *)data;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(ComStSt25sdkCommandType4Command)

J2OBJC_FIELD_SETTER(ComStSt25sdkCommandType4Command, transceiveMode_, ComStSt25sdkRFReaderInterface_TransceiveMode *)

inline jboolean ComStSt25sdkCommandType4Command_get_DBG(void);
#define ComStSt25sdkCommandType4Command_DBG true
J2OBJC_STATIC_FIELD_CONSTANT(ComStSt25sdkCommandType4Command, DBG, jboolean)

inline jbyte ComStSt25sdkCommandType4Command_get_TYPE4_CMD_SELECT(void);
#define ComStSt25sdkCommandType4Command_TYPE4_CMD_SELECT -92
J2OBJC_STATIC_FIELD_CONSTANT(ComStSt25sdkCommandType4Command, TYPE4_CMD_SELECT, jbyte)

inline jbyte ComStSt25sdkCommandType4Command_get_TYPE4_CMD_READ_BINARY(void);
#define ComStSt25sdkCommandType4Command_TYPE4_CMD_READ_BINARY -80
J2OBJC_STATIC_FIELD_CONSTANT(ComStSt25sdkCommandType4Command, TYPE4_CMD_READ_BINARY, jbyte)

inline jbyte ComStSt25sdkCommandType4Command_get_TYPE4_CMD_UPDATE_BINARY(void);
#define ComStSt25sdkCommandType4Command_TYPE4_CMD_UPDATE_BINARY -42
J2OBJC_STATIC_FIELD_CONSTANT(ComStSt25sdkCommandType4Command, TYPE4_CMD_UPDATE_BINARY, jbyte)

inline jbyte ComStSt25sdkCommandType4Command_get_TYPE4_CMD_SELECT_BY_FILE_ID(void);
#define ComStSt25sdkCommandType4Command_TYPE4_CMD_SELECT_BY_FILE_ID 0
J2OBJC_STATIC_FIELD_CONSTANT(ComStSt25sdkCommandType4Command, TYPE4_CMD_SELECT_BY_FILE_ID, jbyte)

inline jbyte ComStSt25sdkCommandType4Command_get_TYPE4_CMD_SELECT_BY_NAME(void);
#define ComStSt25sdkCommandType4Command_TYPE4_CMD_SELECT_BY_NAME 4
J2OBJC_STATIC_FIELD_CONSTANT(ComStSt25sdkCommandType4Command, TYPE4_CMD_SELECT_BY_NAME, jbyte)

inline jbyte ComStSt25sdkCommandType4Command_get_TYPE4_CMD_FIRST_OR_ONLY_OCCURENCE(void);
#define ComStSt25sdkCommandType4Command_TYPE4_CMD_FIRST_OR_ONLY_OCCURENCE 12
J2OBJC_STATIC_FIELD_CONSTANT(ComStSt25sdkCommandType4Command, TYPE4_CMD_FIRST_OR_ONLY_OCCURENCE, jbyte)

inline id<JavaUtilConcurrentLocksLock> ComStSt25sdkCommandType4Command_get_mLock(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<JavaUtilConcurrentLocksLock> ComStSt25sdkCommandType4Command_mLock;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComStSt25sdkCommandType4Command, mLock, id<JavaUtilConcurrentLocksLock>)

inline jint ComStSt25sdkCommandType4Command_get_TYPE4_HEADER_SIZE(void);
#define ComStSt25sdkCommandType4Command_TYPE4_HEADER_SIZE 4
J2OBJC_STATIC_FIELD_CONSTANT(ComStSt25sdkCommandType4Command, TYPE4_HEADER_SIZE, jint)

FOUNDATION_EXPORT void ComStSt25sdkCommandType4Command_initWithComStSt25sdkRFReaderInterface_withInt_withInt_(ComStSt25sdkCommandType4Command *self, id<ComStSt25sdkRFReaderInterface> reader, jint maxRApduSize, jint maxCApduSize);

FOUNDATION_EXPORT ComStSt25sdkCommandType4Command *new_ComStSt25sdkCommandType4Command_initWithComStSt25sdkRFReaderInterface_withInt_withInt_(id<ComStSt25sdkRFReaderInterface> reader, jint maxRApduSize, jint maxCApduSize) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComStSt25sdkCommandType4Command *create_ComStSt25sdkCommandType4Command_initWithComStSt25sdkRFReaderInterface_withInt_withInt_(id<ComStSt25sdkRFReaderInterface> reader, jint maxRApduSize, jint maxCApduSize);

J2OBJC_TYPE_LITERAL_HEADER(ComStSt25sdkCommandType4Command)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComStSt25sdkCommandType4Command")
