//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: st25sdk_ios/command/ANdefType5Command.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/st/st25sdk/RFReaderInterface.h"
#include "com/st/st25sdk/STException.h"
#include "com/st/st25sdk/command/ANdefType5Command.h"
#include "com/st/st25sdk/command/Iso15693Protocol.h"
#include "com/st/st25sdk/command/NdefType5Command.h"
#include "com/st/st25sdk/ndef/NDEFMsg.h"
#include "com/st/st25sdk/type5/Type5Tag.h"
#include "java/lang/Exception.h"
#include "java/lang/System.h"

@implementation ComStSt25sdkCommandANdefType5Command

- (instancetype)initWithComStSt25sdkRFReaderInterface:(id<ComStSt25sdkRFReaderInterface>)reader
                                        withByteArray:(IOSByteArray *)uid {
  ComStSt25sdkCommandANdefType5Command_initWithComStSt25sdkRFReaderInterface_withByteArray_(self, reader, uid);
  return self;
}

- (instancetype)initWithComStSt25sdkRFReaderInterface:(id<ComStSt25sdkRFReaderInterface>)reader
                                        withByteArray:(IOSByteArray *)uid
                                             withByte:(jbyte)flag {
  ComStSt25sdkCommandANdefType5Command_initWithComStSt25sdkRFReaderInterface_withByteArray_withByte_(self, reader, uid, flag);
  return self;
}

- (instancetype)initWithComStSt25sdkRFReaderInterface:(id<ComStSt25sdkRFReaderInterface>)reader
                                        withByteArray:(IOSByteArray *)uid
                                              withInt:(jint)nbrOfBytesPerBlock {
  ComStSt25sdkCommandANdefType5Command_initWithComStSt25sdkRFReaderInterface_withByteArray_withInt_(self, reader, uid, nbrOfBytesPerBlock);
  return self;
}

- (instancetype)initWithComStSt25sdkRFReaderInterface:(id<ComStSt25sdkRFReaderInterface>)reader
                                        withByteArray:(IOSByteArray *)uid
                                             withByte:(jbyte)flag
                                              withInt:(jint)nbrOfBytesPerBlock {
  ComStSt25sdkCommandANdefType5Command_initWithComStSt25sdkRFReaderInterface_withByteArray_withByte_withInt_(self, reader, uid, flag, nbrOfBytesPerBlock);
  return self;
}

- (void)writeAndefMessageWithInt:(jint)offsetInBlocks
     withComStSt25sdkNdefNDEFMsg:(ComStSt25sdkNdefNDEFMsg *)msg
                         withInt:(jint)andefOffsetInBytes
                         withInt:(jint)andefSizeInBytes
                        withByte:(jbyte)flag
                   withByteArray:(IOSByteArray *)uid {
  IOSByteArray *formatedBuffer;
  @try {
    formatedBuffer = [((ComStSt25sdkNdefNDEFMsg *) nil_chk(msg)) formatType5];
  }
  @catch (JavaLangException *e) {
    [e printStackTrace];
    @throw new_ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_(JreLoadEnum(ComStSt25sdkSTException_STExceptionCode, INVALID_NDEF_DATA));
  }
  if ([msg getNbrOfRecords] == 0) {
    [self writeBytesWithInt:offsetInBlocks * mNbrOfBytesPerBlock_ withByteArray:formatedBuffer withByte:flag withByteArray:uid];
    return;
  }
  IOSByteArray *headerBuffer = [IOSByteArray newArrayWithLength:mNbrOfBytesPerBlock_];
  IOSByteArray *payloadBuffer;
  if (((IOSByteArray *) nil_chk(formatedBuffer))->size_ < mNbrOfBytesPerBlock_) {
    @throw new_ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_(JreLoadEnum(ComStSt25sdkSTException_STExceptionCode, BAD_PARAMETER));
  }
  if (andefOffsetInBytes >= formatedBuffer->size_) {
    @throw new_ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_(JreLoadEnum(ComStSt25sdkSTException_STExceptionCode, BAD_PARAMETER));
  }
  jint nbrOfBytesAfterAndef = formatedBuffer->size_ - (andefOffsetInBytes + andefSizeInBytes);
  if (nbrOfBytesAfterAndef <= 0) {
    @throw new_ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_(JreLoadEnum(ComStSt25sdkSTException_STExceptionCode, BAD_PARAMETER));
  }
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(formatedBuffer, 0, headerBuffer, 0, mNbrOfBytesPerBlock_);
  *IOSByteArray_GetRef(headerBuffer, 1) = (jbyte) (jint) 0x00;
  [self writeBlocksWithInt:offsetInBlocks withByteArray:headerBuffer withByte:flag withByteArray:uid];
  jint payloadStartAddress = (offsetInBlocks + 1) * mNbrOfBytesPerBlock_;
  payloadBuffer = [IOSByteArray newArrayWithLength:formatedBuffer->size_ - mNbrOfBytesPerBlock_];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(formatedBuffer, mNbrOfBytesPerBlock_, payloadBuffer, 0, formatedBuffer->size_ - mNbrOfBytesPerBlock_);
  IOSByteArray *firstPart = [IOSByteArray newArrayWithLength:andefOffsetInBytes - mNbrOfBytesPerBlock_];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(payloadBuffer, 0, firstPart, 0, firstPart->size_);
  IOSByteArray *secondPart = [IOSByteArray newArrayWithLength:nbrOfBytesAfterAndef];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(payloadBuffer, andefOffsetInBytes + andefSizeInBytes - mNbrOfBytesPerBlock_, secondPart, 0, secondPart->size_);
  jint terminatorOffset = offsetInBlocks * mNbrOfBytesPerBlock_ + andefOffsetInBytes + andefSizeInBytes;
  [self writeBytesWithInt:payloadStartAddress withByteArray:firstPart withByte:flag withByteArray:uid];
  [self writeBytesWithInt:terminatorOffset withByteArray:secondPart withByte:flag withByteArray:uid];
  *IOSByteArray_GetRef(headerBuffer, 1) = IOSByteArray_Get(formatedBuffer, 1);
  [self writeBlocksWithInt:offsetInBlocks withByteArray:headerBuffer withByte:flag withByteArray:uid];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, 6, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComStSt25sdkRFReaderInterface:withByteArray:);
  methods[1].selector = @selector(initWithComStSt25sdkRFReaderInterface:withByteArray:withByte:);
  methods[2].selector = @selector(initWithComStSt25sdkRFReaderInterface:withByteArray:withInt:);
  methods[3].selector = @selector(initWithComStSt25sdkRFReaderInterface:withByteArray:withByte:withInt:);
  methods[4].selector = @selector(writeAndefMessageWithInt:withComStSt25sdkNdefNDEFMsg:withInt:withInt:withByte:withByteArray:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComStSt25sdkRFReaderInterface;[B", "LComStSt25sdkRFReaderInterface;[BB", "LComStSt25sdkRFReaderInterface;[BI", "LComStSt25sdkRFReaderInterface;[BBI", "writeAndefMessage", "ILComStSt25sdkNdefNDEFMsg;IIB[B", "LComStSt25sdkSTException;" };
  static const J2ObjcClassInfo _ComStSt25sdkCommandANdefType5Command = { "ANdefType5Command", "com.st.st25sdk.command", ptrTable, methods, NULL, 7, 0x1, 5, 0, -1, -1, -1, -1, -1 };
  return &_ComStSt25sdkCommandANdefType5Command;
}

@end

void ComStSt25sdkCommandANdefType5Command_initWithComStSt25sdkRFReaderInterface_withByteArray_(ComStSt25sdkCommandANdefType5Command *self, id<ComStSt25sdkRFReaderInterface> reader, IOSByteArray *uid) {
  ComStSt25sdkCommandANdefType5Command_initWithComStSt25sdkRFReaderInterface_withByteArray_withByte_withInt_(self, reader, uid, ComStSt25sdkCommandIso15693Protocol_DEFAULT_FLAG, ComStSt25sdkType5Type5Tag_DEFAULT_NBR_OF_BYTES_PER_BLOCK);
}

ComStSt25sdkCommandANdefType5Command *new_ComStSt25sdkCommandANdefType5Command_initWithComStSt25sdkRFReaderInterface_withByteArray_(id<ComStSt25sdkRFReaderInterface> reader, IOSByteArray *uid) {
  J2OBJC_NEW_IMPL(ComStSt25sdkCommandANdefType5Command, initWithComStSt25sdkRFReaderInterface_withByteArray_, reader, uid)
}

ComStSt25sdkCommandANdefType5Command *create_ComStSt25sdkCommandANdefType5Command_initWithComStSt25sdkRFReaderInterface_withByteArray_(id<ComStSt25sdkRFReaderInterface> reader, IOSByteArray *uid) {
  J2OBJC_CREATE_IMPL(ComStSt25sdkCommandANdefType5Command, initWithComStSt25sdkRFReaderInterface_withByteArray_, reader, uid)
}

void ComStSt25sdkCommandANdefType5Command_initWithComStSt25sdkRFReaderInterface_withByteArray_withByte_(ComStSt25sdkCommandANdefType5Command *self, id<ComStSt25sdkRFReaderInterface> reader, IOSByteArray *uid, jbyte flag) {
  ComStSt25sdkCommandANdefType5Command_initWithComStSt25sdkRFReaderInterface_withByteArray_withByte_withInt_(self, reader, uid, flag, ComStSt25sdkType5Type5Tag_DEFAULT_NBR_OF_BYTES_PER_BLOCK);
}

ComStSt25sdkCommandANdefType5Command *new_ComStSt25sdkCommandANdefType5Command_initWithComStSt25sdkRFReaderInterface_withByteArray_withByte_(id<ComStSt25sdkRFReaderInterface> reader, IOSByteArray *uid, jbyte flag) {
  J2OBJC_NEW_IMPL(ComStSt25sdkCommandANdefType5Command, initWithComStSt25sdkRFReaderInterface_withByteArray_withByte_, reader, uid, flag)
}

ComStSt25sdkCommandANdefType5Command *create_ComStSt25sdkCommandANdefType5Command_initWithComStSt25sdkRFReaderInterface_withByteArray_withByte_(id<ComStSt25sdkRFReaderInterface> reader, IOSByteArray *uid, jbyte flag) {
  J2OBJC_CREATE_IMPL(ComStSt25sdkCommandANdefType5Command, initWithComStSt25sdkRFReaderInterface_withByteArray_withByte_, reader, uid, flag)
}

void ComStSt25sdkCommandANdefType5Command_initWithComStSt25sdkRFReaderInterface_withByteArray_withInt_(ComStSt25sdkCommandANdefType5Command *self, id<ComStSt25sdkRFReaderInterface> reader, IOSByteArray *uid, jint nbrOfBytesPerBlock) {
  ComStSt25sdkCommandANdefType5Command_initWithComStSt25sdkRFReaderInterface_withByteArray_withByte_withInt_(self, reader, uid, ComStSt25sdkCommandIso15693Protocol_DEFAULT_FLAG, nbrOfBytesPerBlock);
}

ComStSt25sdkCommandANdefType5Command *new_ComStSt25sdkCommandANdefType5Command_initWithComStSt25sdkRFReaderInterface_withByteArray_withInt_(id<ComStSt25sdkRFReaderInterface> reader, IOSByteArray *uid, jint nbrOfBytesPerBlock) {
  J2OBJC_NEW_IMPL(ComStSt25sdkCommandANdefType5Command, initWithComStSt25sdkRFReaderInterface_withByteArray_withInt_, reader, uid, nbrOfBytesPerBlock)
}

ComStSt25sdkCommandANdefType5Command *create_ComStSt25sdkCommandANdefType5Command_initWithComStSt25sdkRFReaderInterface_withByteArray_withInt_(id<ComStSt25sdkRFReaderInterface> reader, IOSByteArray *uid, jint nbrOfBytesPerBlock) {
  J2OBJC_CREATE_IMPL(ComStSt25sdkCommandANdefType5Command, initWithComStSt25sdkRFReaderInterface_withByteArray_withInt_, reader, uid, nbrOfBytesPerBlock)
}

void ComStSt25sdkCommandANdefType5Command_initWithComStSt25sdkRFReaderInterface_withByteArray_withByte_withInt_(ComStSt25sdkCommandANdefType5Command *self, id<ComStSt25sdkRFReaderInterface> reader, IOSByteArray *uid, jbyte flag, jint nbrOfBytesPerBlock) {
  ComStSt25sdkCommandNdefType5Command_initWithComStSt25sdkRFReaderInterface_withByteArray_withByte_withInt_(self, reader, uid, flag, nbrOfBytesPerBlock);
}

ComStSt25sdkCommandANdefType5Command *new_ComStSt25sdkCommandANdefType5Command_initWithComStSt25sdkRFReaderInterface_withByteArray_withByte_withInt_(id<ComStSt25sdkRFReaderInterface> reader, IOSByteArray *uid, jbyte flag, jint nbrOfBytesPerBlock) {
  J2OBJC_NEW_IMPL(ComStSt25sdkCommandANdefType5Command, initWithComStSt25sdkRFReaderInterface_withByteArray_withByte_withInt_, reader, uid, flag, nbrOfBytesPerBlock)
}

ComStSt25sdkCommandANdefType5Command *create_ComStSt25sdkCommandANdefType5Command_initWithComStSt25sdkRFReaderInterface_withByteArray_withByte_withInt_(id<ComStSt25sdkRFReaderInterface> reader, IOSByteArray *uid, jbyte flag, jint nbrOfBytesPerBlock) {
  J2OBJC_CREATE_IMPL(ComStSt25sdkCommandANdefType5Command, initWithComStSt25sdkRFReaderInterface_withByteArray_withByte_withInt_, reader, uid, flag, nbrOfBytesPerBlock)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComStSt25sdkCommandANdefType5Command)
