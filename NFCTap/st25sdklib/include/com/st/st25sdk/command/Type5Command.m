//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: st25sdk_ios/command/Type5Command.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/st/st25sdk/RFReaderInterface.h"
#include "com/st/st25sdk/command/Iso15693Command.h"
#include "com/st/st25sdk/command/Iso15693Protocol.h"
#include "com/st/st25sdk/command/Type5Command.h"
#include "com/st/st25sdk/command/Type5MemoryCommand.h"
#include "com/st/st25sdk/type5/ReadBlockResult.h"
#include "com/st/st25sdk/type5/Type5Tag.h"

@interface ComStSt25sdkCommandType5Command () {
 @public
  ComStSt25sdkCommandType5MemoryCommand *mType5MemoryCommand_;
}

@end

J2OBJC_FIELD_SETTER(ComStSt25sdkCommandType5Command, mType5MemoryCommand_, ComStSt25sdkCommandType5MemoryCommand *)

@implementation ComStSt25sdkCommandType5Command

- (instancetype)initWithComStSt25sdkRFReaderInterface:(id<ComStSt25sdkRFReaderInterface>)reader
                                        withByteArray:(IOSByteArray *)uid {
  ComStSt25sdkCommandType5Command_initWithComStSt25sdkRFReaderInterface_withByteArray_(self, reader, uid);
  return self;
}

- (instancetype)initWithComStSt25sdkRFReaderInterface:(id<ComStSt25sdkRFReaderInterface>)reader
                                        withByteArray:(IOSByteArray *)uid
                                             withByte:(jbyte)flag {
  ComStSt25sdkCommandType5Command_initWithComStSt25sdkRFReaderInterface_withByteArray_withByte_(self, reader, uid, flag);
  return self;
}

- (instancetype)initWithComStSt25sdkRFReaderInterface:(id<ComStSt25sdkRFReaderInterface>)reader
                                        withByteArray:(IOSByteArray *)uid
                                              withInt:(jint)nbrOfBytesPerBlock {
  ComStSt25sdkCommandType5Command_initWithComStSt25sdkRFReaderInterface_withByteArray_withInt_(self, reader, uid, nbrOfBytesPerBlock);
  return self;
}

- (instancetype)initWithComStSt25sdkRFReaderInterface:(id<ComStSt25sdkRFReaderInterface>)reader
                                        withByteArray:(IOSByteArray *)uid
                                             withByte:(jbyte)flag
                                              withInt:(jint)nbrOfBytesPerBlock {
  ComStSt25sdkCommandType5Command_initWithComStSt25sdkRFReaderInterface_withByteArray_withByte_withInt_(self, reader, uid, flag, nbrOfBytesPerBlock);
  return self;
}

- (void)setFlagWithByte:(jbyte)flag {
  mFlag_ = flag;
  [((ComStSt25sdkCommandIso15693Command *) nil_chk(mIso15693Cmd_)) setFlagWithByte:flag];
  [((ComStSt25sdkCommandType5MemoryCommand *) nil_chk(mType5MemoryCommand_)) setFlagWithByte:flag];
}

- (void)setTagMaxReadMultipleBlockLengthWithInt:(jint)tagMaxReadMultipleBlockLength {
  [((ComStSt25sdkCommandType5MemoryCommand *) nil_chk(mType5MemoryCommand_)) setTagMaxReadMultipleBlockLengthWithInt:tagMaxReadMultipleBlockLength];
}

- (IOSByteArray *)readSingleBlockWithByte:(jbyte)blockAddress
                                 withByte:(jbyte)flag
                            withByteArray:(IOSByteArray *)uid {
  return [((ComStSt25sdkCommandIso15693Command *) nil_chk(mIso15693Cmd_)) readSingleBlockWithByte:blockAddress withByte:flag withByteArray:uid];
}

- (ComStSt25sdkType5ReadBlockResult *)readBlocksWithInt:(jint)firstBlockAddress
                                                withInt:(jint)sizeInBlocks {
  return [((ComStSt25sdkCommandType5MemoryCommand *) nil_chk(mType5MemoryCommand_)) readBlocksWithInt:firstBlockAddress withInt:sizeInBlocks withByte:mFlag_ withByteArray:mUid_];
}

- (ComStSt25sdkType5ReadBlockResult *)readBlocksWithInt:(jint)firstBlockAddress
                                                withInt:(jint)sizeInBlocks
                                               withByte:(jbyte)flag
                                          withByteArray:(IOSByteArray *)uid {
  return [((ComStSt25sdkCommandType5MemoryCommand *) nil_chk(mType5MemoryCommand_)) readBlocksWithInt:firstBlockAddress withInt:sizeInBlocks withByte:flag withByteArray:uid];
}

- (IOSByteArray *)readBytesWithInt:(jint)byteAddress
                           withInt:(jint)sizeInBytes {
  return [((ComStSt25sdkCommandType5MemoryCommand *) nil_chk(mType5MemoryCommand_)) readBytesWithInt:byteAddress withInt:sizeInBytes withByte:mFlag_ withByteArray:mUid_];
}

- (IOSByteArray *)readBytesWithInt:(jint)byteAddress
                           withInt:(jint)sizeInBytes
                          withByte:(jbyte)flag
                     withByteArray:(IOSByteArray *)uid {
  return [((ComStSt25sdkCommandType5MemoryCommand *) nil_chk(mType5MemoryCommand_)) readBytesWithInt:byteAddress withInt:sizeInBytes withByte:flag withByteArray:uid];
}

- (jbyte)writeSingleBlockWithByte:(jbyte)blockAddress
                    withByteArray:(IOSByteArray *)buffer
                         withByte:(jbyte)flag
                    withByteArray:(IOSByteArray *)uid {
  return [((ComStSt25sdkCommandIso15693Command *) nil_chk(mIso15693Cmd_)) writeSingleBlockWithByte:blockAddress withByteArray:buffer withByte:flag withByteArray:uid];
}

- (jbyte)writeSingleBlockWithByte:(jbyte)blockAddress
                    withByteArray:(IOSByteArray *)buffer {
  return [((ComStSt25sdkCommandIso15693Command *) nil_chk(mIso15693Cmd_)) writeSingleBlockWithByte:blockAddress withByteArray:buffer withByte:mFlag_ withByteArray:mUid_];
}

- (void)writeBlocksWithInt:(jint)firstBlockAddress
             withByteArray:(IOSByteArray *)buffer {
  [((ComStSt25sdkCommandType5MemoryCommand *) nil_chk(mType5MemoryCommand_)) writeBlocksWithInt:firstBlockAddress withByteArray:buffer withByte:mFlag_ withByteArray:mUid_];
}

- (void)writeBlocksWithInt:(jint)firstBlockAddress
             withByteArray:(IOSByteArray *)buffer
                  withByte:(jbyte)flag
             withByteArray:(IOSByteArray *)uid {
  [((ComStSt25sdkCommandType5MemoryCommand *) nil_chk(mType5MemoryCommand_)) writeBlocksWithInt:firstBlockAddress withByteArray:buffer withByte:flag withByteArray:uid];
}

- (void)writeBytesWithInt:(jint)byteAddress
            withByteArray:(IOSByteArray *)buffer {
  [((ComStSt25sdkCommandType5MemoryCommand *) nil_chk(mType5MemoryCommand_)) writeBytesWithInt:byteAddress withByteArray:buffer withByte:mFlag_ withByteArray:mUid_];
}

- (void)writeBytesWithInt:(jint)byteAddress
            withByteArray:(IOSByteArray *)buffer
                 withByte:(jbyte)flag
            withByteArray:(IOSByteArray *)uid {
  [((ComStSt25sdkCommandType5MemoryCommand *) nil_chk(mType5MemoryCommand_)) writeBytesWithInt:byteAddress withByteArray:buffer withByte:flag withByteArray:uid];
}

- (jbyte)lockSingleBlockWithByte:(jbyte)blockAddress
                        withByte:(jbyte)flag
                   withByteArray:(IOSByteArray *)uid {
  return [((ComStSt25sdkCommandIso15693Command *) nil_chk(mIso15693Cmd_)) lockBlockWithByte:blockAddress withByte:flag withByteArray:uid];
}

- (IOSByteArray *)readMultipleBlockWithByte:(jbyte)blockAddress
                                   withByte:(jbyte)nbrOfBlocks
                                   withByte:(jbyte)flag
                              withByteArray:(IOSByteArray *)uid {
  return [((ComStSt25sdkCommandIso15693Command *) nil_chk(mIso15693Cmd_)) readMultipleBlockWithByte:blockAddress withByte:nbrOfBlocks withByte:flag withByteArray:uid];
}

- (IOSByteArray *)extendedReadSingleBlockWithByteArray:(IOSByteArray *)blockAddress
                                              withByte:(jbyte)flag
                                         withByteArray:(IOSByteArray *)uid {
  return [((ComStSt25sdkCommandIso15693Command *) nil_chk(mIso15693Cmd_)) extendedReadSingleBlockWithByteArray:blockAddress withByte:flag withByteArray:uid];
}

- (jbyte)extendedWriteSingleBlockWithByteArray:(IOSByteArray *)blockAddress
                                 withByteArray:(IOSByteArray *)buffer
                                      withByte:(jbyte)flag
                                 withByteArray:(IOSByteArray *)uid {
  return [((ComStSt25sdkCommandIso15693Command *) nil_chk(mIso15693Cmd_)) extendedWriteSingleBlockWithByteArray:blockAddress withByteArray:buffer withByte:flag withByteArray:uid];
}

- (jbyte)extendedLockSingleBlockWithByteArray:(IOSByteArray *)blockAddress
                                     withByte:(jbyte)flag
                                withByteArray:(IOSByteArray *)uid {
  return [((ComStSt25sdkCommandIso15693Command *) nil_chk(mIso15693Cmd_)) extendedLockSingleBlockWithByteArray:blockAddress withByte:flag withByteArray:uid];
}

- (IOSByteArray *)extendedReadMultipleBlockWithByteArray:(IOSByteArray *)blockAddress
                                           withByteArray:(IOSByteArray *)nbrOfBlocks
                                                withByte:(jbyte)flag
                                           withByteArray:(IOSByteArray *)uid {
  return [((ComStSt25sdkCommandIso15693Command *) nil_chk(mIso15693Cmd_)) extendedReadMultipleBlockWithByteArray:blockAddress withByteArray:nbrOfBlocks withByte:flag withByteArray:uid];
}

- (jbyte)selectWithByte:(jbyte)flag
          withByteArray:(IOSByteArray *)uid {
  return [((ComStSt25sdkCommandIso15693Command *) nil_chk(mIso15693Cmd_)) selectWithByte:flag withByteArray:uid];
}

- (jbyte)stayQuietWithByte:(jbyte)flag
             withByteArray:(IOSByteArray *)uid {
  return [((ComStSt25sdkCommandIso15693Command *) nil_chk(mIso15693Cmd_)) stayQuietWithByte:flag withByteArray:uid];
}

- (void)setIsReadMultipleBlockSupportedWithBoolean:(jboolean)isReadMultipleBlockSupported {
  [((ComStSt25sdkCommandType5MemoryCommand *) nil_chk(mType5MemoryCommand_)) setIsReadMultipleBlockSupportedWithBoolean:isReadMultipleBlockSupported];
}

- (void)setIsWriteMultipleBlockSupportedWithBoolean:(jboolean)isWriteMultipleBlockSupported {
  [((ComStSt25sdkCommandType5MemoryCommand *) nil_chk(mType5MemoryCommand_)) setIsWriteMultipleBlockSupportedWithBoolean:isWriteMultipleBlockSupported];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, 8, 9, 10, -1, -1, -1 },
    { NULL, "LComStSt25sdkType5ReadBlockResult;", 0x1, 11, 12, 10, -1, -1, -1 },
    { NULL, "LComStSt25sdkType5ReadBlockResult;", 0x1, 11, 13, 10, -1, -1, -1 },
    { NULL, "[B", 0x1, 14, 12, 10, -1, -1, -1 },
    { NULL, "[B", 0x1, 14, 13, 10, -1, -1, -1 },
    { NULL, "B", 0x1, 15, 16, 10, -1, -1, -1 },
    { NULL, "B", 0x1, 15, 17, 10, -1, -1, -1 },
    { NULL, "V", 0x1, 18, 19, 10, -1, -1, -1 },
    { NULL, "V", 0x1, 18, 20, 10, -1, -1, -1 },
    { NULL, "V", 0x1, 21, 19, 10, -1, -1, -1 },
    { NULL, "V", 0x1, 21, 20, 10, -1, -1, -1 },
    { NULL, "B", 0x1, 22, 9, 10, -1, -1, -1 },
    { NULL, "[B", 0x1, 23, 24, 10, -1, -1, -1 },
    { NULL, "[B", 0x1, 25, 26, 10, -1, -1, -1 },
    { NULL, "B", 0x1, 27, 28, 10, -1, -1, -1 },
    { NULL, "B", 0x1, 29, 26, 10, -1, -1, -1 },
    { NULL, "[B", 0x1, 30, 28, 10, -1, -1, -1 },
    { NULL, "B", 0x1, 31, 17, 10, -1, -1, -1 },
    { NULL, "B", 0x1, 32, 17, 10, -1, -1, -1 },
    { NULL, "V", 0x1, 33, 34, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 35, 34, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComStSt25sdkRFReaderInterface:withByteArray:);
  methods[1].selector = @selector(initWithComStSt25sdkRFReaderInterface:withByteArray:withByte:);
  methods[2].selector = @selector(initWithComStSt25sdkRFReaderInterface:withByteArray:withInt:);
  methods[3].selector = @selector(initWithComStSt25sdkRFReaderInterface:withByteArray:withByte:withInt:);
  methods[4].selector = @selector(setFlagWithByte:);
  methods[5].selector = @selector(setTagMaxReadMultipleBlockLengthWithInt:);
  methods[6].selector = @selector(readSingleBlockWithByte:withByte:withByteArray:);
  methods[7].selector = @selector(readBlocksWithInt:withInt:);
  methods[8].selector = @selector(readBlocksWithInt:withInt:withByte:withByteArray:);
  methods[9].selector = @selector(readBytesWithInt:withInt:);
  methods[10].selector = @selector(readBytesWithInt:withInt:withByte:withByteArray:);
  methods[11].selector = @selector(writeSingleBlockWithByte:withByteArray:withByte:withByteArray:);
  methods[12].selector = @selector(writeSingleBlockWithByte:withByteArray:);
  methods[13].selector = @selector(writeBlocksWithInt:withByteArray:);
  methods[14].selector = @selector(writeBlocksWithInt:withByteArray:withByte:withByteArray:);
  methods[15].selector = @selector(writeBytesWithInt:withByteArray:);
  methods[16].selector = @selector(writeBytesWithInt:withByteArray:withByte:withByteArray:);
  methods[17].selector = @selector(lockSingleBlockWithByte:withByte:withByteArray:);
  methods[18].selector = @selector(readMultipleBlockWithByte:withByte:withByte:withByteArray:);
  methods[19].selector = @selector(extendedReadSingleBlockWithByteArray:withByte:withByteArray:);
  methods[20].selector = @selector(extendedWriteSingleBlockWithByteArray:withByteArray:withByte:withByteArray:);
  methods[21].selector = @selector(extendedLockSingleBlockWithByteArray:withByte:withByteArray:);
  methods[22].selector = @selector(extendedReadMultipleBlockWithByteArray:withByteArray:withByte:withByteArray:);
  methods[23].selector = @selector(selectWithByte:withByteArray:);
  methods[24].selector = @selector(stayQuietWithByte:withByteArray:);
  methods[25].selector = @selector(setIsReadMultipleBlockSupportedWithBoolean:);
  methods[26].selector = @selector(setIsWriteMultipleBlockSupportedWithBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "mIso15693Cmd_", "LComStSt25sdkCommandIso15693Command;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "mType5MemoryCommand_", "LComStSt25sdkCommandType5MemoryCommand;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComStSt25sdkRFReaderInterface;[B", "LComStSt25sdkRFReaderInterface;[BB", "LComStSt25sdkRFReaderInterface;[BI", "LComStSt25sdkRFReaderInterface;[BBI", "setFlag", "B", "setTagMaxReadMultipleBlockLength", "I", "readSingleBlock", "BB[B", "LComStSt25sdkSTException;", "readBlocks", "II", "IIB[B", "readBytes", "writeSingleBlock", "B[BB[B", "B[B", "writeBlocks", "I[B", "I[BB[B", "writeBytes", "lockSingleBlock", "readMultipleBlock", "BBB[B", "extendedReadSingleBlock", "[BB[B", "extendedWriteSingleBlock", "[B[BB[B", "extendedLockSingleBlock", "extendedReadMultipleBlock", "select", "stayQuiet", "setIsReadMultipleBlockSupported", "Z", "setIsWriteMultipleBlockSupported" };
  static const J2ObjcClassInfo _ComStSt25sdkCommandType5Command = { "Type5Command", "com.st.st25sdk.command", ptrTable, methods, fields, 7, 0x1, 27, 2, -1, -1, -1, -1, -1 };
  return &_ComStSt25sdkCommandType5Command;
}

@end

void ComStSt25sdkCommandType5Command_initWithComStSt25sdkRFReaderInterface_withByteArray_(ComStSt25sdkCommandType5Command *self, id<ComStSt25sdkRFReaderInterface> reader, IOSByteArray *uid) {
  ComStSt25sdkCommandType5Command_initWithComStSt25sdkRFReaderInterface_withByteArray_withByte_withInt_(self, reader, uid, ComStSt25sdkCommandIso15693Protocol_DEFAULT_FLAG, ComStSt25sdkType5Type5Tag_DEFAULT_NBR_OF_BYTES_PER_BLOCK);
}

ComStSt25sdkCommandType5Command *new_ComStSt25sdkCommandType5Command_initWithComStSt25sdkRFReaderInterface_withByteArray_(id<ComStSt25sdkRFReaderInterface> reader, IOSByteArray *uid) {
  J2OBJC_NEW_IMPL(ComStSt25sdkCommandType5Command, initWithComStSt25sdkRFReaderInterface_withByteArray_, reader, uid)
}

ComStSt25sdkCommandType5Command *create_ComStSt25sdkCommandType5Command_initWithComStSt25sdkRFReaderInterface_withByteArray_(id<ComStSt25sdkRFReaderInterface> reader, IOSByteArray *uid) {
  J2OBJC_CREATE_IMPL(ComStSt25sdkCommandType5Command, initWithComStSt25sdkRFReaderInterface_withByteArray_, reader, uid)
}

void ComStSt25sdkCommandType5Command_initWithComStSt25sdkRFReaderInterface_withByteArray_withByte_(ComStSt25sdkCommandType5Command *self, id<ComStSt25sdkRFReaderInterface> reader, IOSByteArray *uid, jbyte flag) {
  ComStSt25sdkCommandType5Command_initWithComStSt25sdkRFReaderInterface_withByteArray_withByte_withInt_(self, reader, uid, flag, ComStSt25sdkType5Type5Tag_DEFAULT_NBR_OF_BYTES_PER_BLOCK);
}

ComStSt25sdkCommandType5Command *new_ComStSt25sdkCommandType5Command_initWithComStSt25sdkRFReaderInterface_withByteArray_withByte_(id<ComStSt25sdkRFReaderInterface> reader, IOSByteArray *uid, jbyte flag) {
  J2OBJC_NEW_IMPL(ComStSt25sdkCommandType5Command, initWithComStSt25sdkRFReaderInterface_withByteArray_withByte_, reader, uid, flag)
}

ComStSt25sdkCommandType5Command *create_ComStSt25sdkCommandType5Command_initWithComStSt25sdkRFReaderInterface_withByteArray_withByte_(id<ComStSt25sdkRFReaderInterface> reader, IOSByteArray *uid, jbyte flag) {
  J2OBJC_CREATE_IMPL(ComStSt25sdkCommandType5Command, initWithComStSt25sdkRFReaderInterface_withByteArray_withByte_, reader, uid, flag)
}

void ComStSt25sdkCommandType5Command_initWithComStSt25sdkRFReaderInterface_withByteArray_withInt_(ComStSt25sdkCommandType5Command *self, id<ComStSt25sdkRFReaderInterface> reader, IOSByteArray *uid, jint nbrOfBytesPerBlock) {
  ComStSt25sdkCommandType5Command_initWithComStSt25sdkRFReaderInterface_withByteArray_withByte_withInt_(self, reader, uid, ComStSt25sdkCommandIso15693Protocol_DEFAULT_FLAG, nbrOfBytesPerBlock);
}

ComStSt25sdkCommandType5Command *new_ComStSt25sdkCommandType5Command_initWithComStSt25sdkRFReaderInterface_withByteArray_withInt_(id<ComStSt25sdkRFReaderInterface> reader, IOSByteArray *uid, jint nbrOfBytesPerBlock) {
  J2OBJC_NEW_IMPL(ComStSt25sdkCommandType5Command, initWithComStSt25sdkRFReaderInterface_withByteArray_withInt_, reader, uid, nbrOfBytesPerBlock)
}

ComStSt25sdkCommandType5Command *create_ComStSt25sdkCommandType5Command_initWithComStSt25sdkRFReaderInterface_withByteArray_withInt_(id<ComStSt25sdkRFReaderInterface> reader, IOSByteArray *uid, jint nbrOfBytesPerBlock) {
  J2OBJC_CREATE_IMPL(ComStSt25sdkCommandType5Command, initWithComStSt25sdkRFReaderInterface_withByteArray_withInt_, reader, uid, nbrOfBytesPerBlock)
}

void ComStSt25sdkCommandType5Command_initWithComStSt25sdkRFReaderInterface_withByteArray_withByte_withInt_(ComStSt25sdkCommandType5Command *self, id<ComStSt25sdkRFReaderInterface> reader, IOSByteArray *uid, jbyte flag, jint nbrOfBytesPerBlock) {
  ComStSt25sdkCommandIso15693Protocol_initWithComStSt25sdkRFReaderInterface_withByteArray_withByte_withInt_(self, reader, uid, flag, nbrOfBytesPerBlock);
  self->mIso15693Cmd_ = new_ComStSt25sdkCommandIso15693Command_initWithComStSt25sdkRFReaderInterface_withByteArray_withByte_withInt_(reader, uid, flag, nbrOfBytesPerBlock);
  self->mType5MemoryCommand_ = new_ComStSt25sdkCommandType5MemoryCommand_initWithComStSt25sdkRFReaderInterface_withByteArray_withByte_withInt_(reader, uid, flag, nbrOfBytesPerBlock);
}

ComStSt25sdkCommandType5Command *new_ComStSt25sdkCommandType5Command_initWithComStSt25sdkRFReaderInterface_withByteArray_withByte_withInt_(id<ComStSt25sdkRFReaderInterface> reader, IOSByteArray *uid, jbyte flag, jint nbrOfBytesPerBlock) {
  J2OBJC_NEW_IMPL(ComStSt25sdkCommandType5Command, initWithComStSt25sdkRFReaderInterface_withByteArray_withByte_withInt_, reader, uid, flag, nbrOfBytesPerBlock)
}

ComStSt25sdkCommandType5Command *create_ComStSt25sdkCommandType5Command_initWithComStSt25sdkRFReaderInterface_withByteArray_withByte_withInt_(id<ComStSt25sdkRFReaderInterface> reader, IOSByteArray *uid, jbyte flag, jint nbrOfBytesPerBlock) {
  J2OBJC_CREATE_IMPL(ComStSt25sdkCommandType5Command, initWithComStSt25sdkRFReaderInterface_withByteArray_withByte_withInt_, reader, uid, flag, nbrOfBytesPerBlock)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComStSt25sdkCommandType5Command)
