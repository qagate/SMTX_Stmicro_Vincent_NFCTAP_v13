//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: st25sdk_ios/command/Iso15693CommandInterface.java
//

#include "J2ObjC_source.h"
#include "com/st/st25sdk/command/Iso15693CommandInterface.h"

@interface ComStSt25sdkCommandIso15693CommandInterface : NSObject

@end

@implementation ComStSt25sdkCommandIso15693CommandInterface

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "[B", 0x401, 0, 1, 2, -1, -1, -1 },
    { NULL, "[B", 0x401, 0, 3, 2, -1, -1, -1 },
    { NULL, "B", 0x401, 4, 5, 2, -1, -1, -1 },
    { NULL, "B", 0x401, 4, 6, 2, -1, -1, -1 },
    { NULL, "B", 0x401, 7, 3, 2, -1, -1, -1 },
    { NULL, "B", 0x401, 7, 8, 2, -1, -1, -1 },
    { NULL, "B", 0x401, 9, 10, 2, -1, -1, -1 },
    { NULL, "B", 0x401, 9, 11, 2, -1, -1, -1 },
    { NULL, "B", 0x401, 12, 1, 2, -1, -1, -1 },
    { NULL, "B", 0x401, 12, 3, 2, -1, -1, -1 },
    { NULL, "[B", 0x401, 13, 14, 2, -1, -1, -1 },
    { NULL, "[B", 0x401, 13, 15, 2, -1, -1, -1 },
    { NULL, "[B", 0x401, 16, 17, 2, -1, -1, -1 },
    { NULL, "[B", 0x401, 16, 18, 2, -1, -1, -1 },
    { NULL, "B", 0x401, 19, 20, 2, -1, -1, -1 },
    { NULL, "B", 0x401, 19, 21, 2, -1, -1, -1 },
    { NULL, "B", 0x401, 22, 17, 2, -1, -1, -1 },
    { NULL, "B", 0x401, 22, 18, 2, -1, -1, -1 },
    { NULL, "[B", 0x401, 23, 20, 2, -1, -1, -1 },
    { NULL, "[B", 0x401, 23, 21, 2, -1, -1, -1 },
    { NULL, "B", 0x401, -1, -1, 2, -1, -1, -1 },
    { NULL, "B", 0x401, 24, 5, 2, -1, -1, -1 },
    { NULL, "[B", 0x401, 25, 1, 2, -1, -1, -1 },
    { NULL, "[B", 0x401, 25, 14, 2, -1, -1, -1 },
    { NULL, "[B", 0x401, 25, 3, 2, -1, -1, -1 },
    { NULL, "[B", 0x401, 25, 26, 2, -1, -1, -1 },
    { NULL, "B", 0x401, -1, -1, 2, -1, -1, -1 },
    { NULL, "B", 0x401, 27, 5, 2, -1, -1, -1 },
    { NULL, "B", 0x401, -1, -1, 2, -1, -1, -1 },
    { NULL, "B", 0x401, 28, 5, 2, -1, -1, -1 },
    { NULL, "B", 0x401, 29, 1, 2, -1, -1, -1 },
    { NULL, "B", 0x401, 29, 3, 2, -1, -1, -1 },
    { NULL, "B", 0x401, -1, -1, 2, -1, -1, -1 },
    { NULL, "B", 0x401, 30, 5, 2, -1, -1, -1 },
    { NULL, "B", 0x401, 31, 1, 2, -1, -1, -1 },
    { NULL, "B", 0x401, 31, 3, 2, -1, -1, -1 },
    { NULL, "B", 0x401, -1, -1, 2, -1, -1, -1 },
    { NULL, "B", 0x401, 32, 5, 2, -1, -1, -1 },
    { NULL, "[B", 0x401, -1, -1, 2, -1, -1, -1 },
    { NULL, "[B", 0x401, 33, 5, 2, -1, -1, -1 },
    { NULL, "[B", 0x401, -1, -1, 2, -1, -1, -1 },
    { NULL, "[B", 0x401, 34, 1, 2, -1, -1, -1 },
    { NULL, "[B", 0x401, 34, 3, 2, -1, -1, -1 },
    { NULL, "[B", 0x401, 35, 14, 2, -1, -1, -1 },
    { NULL, "[B", 0x401, 35, 15, 2, -1, -1, -1 },
    { NULL, "[B", 0x401, 36, 20, 2, -1, -1, -1 },
    { NULL, "[B", 0x401, 36, 21, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(readSingleBlockWithByte:);
  methods[1].selector = @selector(readSingleBlockWithByte:withByte:withByteArray:);
  methods[2].selector = @selector(writeSingleBlockWithByte:withByteArray:);
  methods[3].selector = @selector(writeSingleBlockWithByte:withByteArray:withByte:withByteArray:);
  methods[4].selector = @selector(writeMultipleBlockWithByte:withByte:withByteArray:);
  methods[5].selector = @selector(writeMultipleBlockWithByte:withByte:withByteArray:withByte:withByteArray:);
  methods[6].selector = @selector(extendedWriteMultipleBlockWithByteArray:withByteArray:withByteArray:);
  methods[7].selector = @selector(extendedWriteMultipleBlockWithByteArray:withByteArray:withByteArray:withByte:withByteArray:);
  methods[8].selector = @selector(lockBlockWithByte:);
  methods[9].selector = @selector(lockBlockWithByte:withByte:withByteArray:);
  methods[10].selector = @selector(readMultipleBlockWithByte:withByte:);
  methods[11].selector = @selector(readMultipleBlockWithByte:withByte:withByte:withByteArray:);
  methods[12].selector = @selector(extendedReadSingleBlockWithByteArray:);
  methods[13].selector = @selector(extendedReadSingleBlockWithByteArray:withByte:withByteArray:);
  methods[14].selector = @selector(extendedWriteSingleBlockWithByteArray:withByteArray:);
  methods[15].selector = @selector(extendedWriteSingleBlockWithByteArray:withByteArray:withByte:withByteArray:);
  methods[16].selector = @selector(extendedLockSingleBlockWithByteArray:);
  methods[17].selector = @selector(extendedLockSingleBlockWithByteArray:withByte:withByteArray:);
  methods[18].selector = @selector(extendedReadMultipleBlockWithByteArray:withByteArray:);
  methods[19].selector = @selector(extendedReadMultipleBlockWithByteArray:withByteArray:withByte:withByteArray:);
  methods[20].selector = @selector(select);
  methods[21].selector = @selector(selectWithByte:withByteArray:);
  methods[22].selector = @selector(inventoryWithByte:);
  methods[23].selector = @selector(inventoryWithByte:withByte:);
  methods[24].selector = @selector(inventoryWithByte:withByte:withByteArray:);
  methods[25].selector = @selector(inventoryWithByte:withByte:withByteArray:withByte:);
  methods[26].selector = @selector(stayQuiet);
  methods[27].selector = @selector(stayQuietWithByte:withByteArray:);
  methods[28].selector = @selector(resetToReady);
  methods[29].selector = @selector(resetToReadyWithByte:withByteArray:);
  methods[30].selector = @selector(writeAFIWithByte:);
  methods[31].selector = @selector(writeAFIWithByte:withByte:withByteArray:);
  methods[32].selector = @selector(lockAFI);
  methods[33].selector = @selector(lockAFIWithByte:withByteArray:);
  methods[34].selector = @selector(writeDSFIDWithByte:);
  methods[35].selector = @selector(writeDSFIDWithByte:withByte:withByteArray:);
  methods[36].selector = @selector(lockDSFID);
  methods[37].selector = @selector(lockDSFIDWithByte:withByteArray:);
  methods[38].selector = @selector(getSystemInfo);
  methods[39].selector = @selector(getSystemInfoWithByte:withByteArray:);
  methods[40].selector = @selector(extendedGetSystemInfo);
  methods[41].selector = @selector(extendedGetSystemInfoWithByte:);
  methods[42].selector = @selector(extendedGetSystemInfoWithByte:withByte:withByteArray:);
  methods[43].selector = @selector(getMultipleBlockSecStatusWithByte:withByte:);
  methods[44].selector = @selector(getMultipleBlockSecStatusWithByte:withByte:withByte:withByteArray:);
  methods[45].selector = @selector(extendedGetMultipleBlockSecStatusWithByteArray:withByteArray:);
  methods[46].selector = @selector(extendedGetMultipleBlockSecStatusWithByteArray:withByteArray:withByte:withByteArray:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "readSingleBlock", "B", "LComStSt25sdkSTException;", "BB[B", "writeSingleBlock", "B[B", "B[BB[B", "writeMultipleBlock", "BB[BB[B", "extendedWriteMultipleBlock", "[B[B[B", "[B[B[BB[B", "lockBlock", "readMultipleBlock", "BB", "BBB[B", "extendedReadSingleBlock", "[B", "[BB[B", "extendedWriteSingleBlock", "[B[B", "[B[BB[B", "extendedLockSingleBlock", "extendedReadMultipleBlock", "select", "inventory", "BB[BB", "stayQuiet", "resetToReady", "writeAFI", "lockAFI", "writeDSFID", "lockDSFID", "getSystemInfo", "extendedGetSystemInfo", "getMultipleBlockSecStatus", "extendedGetMultipleBlockSecStatus" };
  static const J2ObjcClassInfo _ComStSt25sdkCommandIso15693CommandInterface = { "Iso15693CommandInterface", "com.st.st25sdk.command", ptrTable, methods, NULL, 7, 0x609, 47, 0, -1, -1, -1, -1, -1 };
  return &_ComStSt25sdkCommandIso15693CommandInterface;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(ComStSt25sdkCommandIso15693CommandInterface)
