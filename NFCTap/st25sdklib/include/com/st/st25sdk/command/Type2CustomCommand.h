//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: st25sdk_ios/command/Type2CustomCommand.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComStSt25sdkCommandType2CustomCommand")
#ifdef RESTRICT_ComStSt25sdkCommandType2CustomCommand
#define INCLUDE_ALL_ComStSt25sdkCommandType2CustomCommand 0
#else
#define INCLUDE_ALL_ComStSt25sdkCommandType2CustomCommand 1
#endif
#undef RESTRICT_ComStSt25sdkCommandType2CustomCommand

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComStSt25sdkCommandType2CustomCommand_) && (INCLUDE_ALL_ComStSt25sdkCommandType2CustomCommand || defined(INCLUDE_ComStSt25sdkCommandType2CustomCommand))
#define ComStSt25sdkCommandType2CustomCommand_

#define RESTRICT_ComStSt25sdkCommandType2Command 1
#define INCLUDE_ComStSt25sdkCommandType2Command 1
#include "com/st/st25sdk/command/Type2Command.h"

@protocol ComStSt25sdkRFReaderInterface;

@interface ComStSt25sdkCommandType2CustomCommand : ComStSt25sdkCommandType2Command

#pragma mark Public

- (instancetype __nonnull)initWithComStSt25sdkRFReaderInterface:(id<ComStSt25sdkRFReaderInterface>)reader;

- (instancetype __nonnull)initWithComStSt25sdkRFReaderInterface:(id<ComStSt25sdkRFReaderInterface>)reader
                                                        withInt:(jint)blockSize
                                                        withInt:(jint)numberOfReadBlocks
                                                        withInt:(jint)numberOfWriteBlocks;

@end

J2OBJC_EMPTY_STATIC_INIT(ComStSt25sdkCommandType2CustomCommand)

FOUNDATION_EXPORT void ComStSt25sdkCommandType2CustomCommand_initWithComStSt25sdkRFReaderInterface_(ComStSt25sdkCommandType2CustomCommand *self, id<ComStSt25sdkRFReaderInterface> reader);

FOUNDATION_EXPORT ComStSt25sdkCommandType2CustomCommand *new_ComStSt25sdkCommandType2CustomCommand_initWithComStSt25sdkRFReaderInterface_(id<ComStSt25sdkRFReaderInterface> reader) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComStSt25sdkCommandType2CustomCommand *create_ComStSt25sdkCommandType2CustomCommand_initWithComStSt25sdkRFReaderInterface_(id<ComStSt25sdkRFReaderInterface> reader);

FOUNDATION_EXPORT void ComStSt25sdkCommandType2CustomCommand_initWithComStSt25sdkRFReaderInterface_withInt_withInt_withInt_(ComStSt25sdkCommandType2CustomCommand *self, id<ComStSt25sdkRFReaderInterface> reader, jint blockSize, jint numberOfReadBlocks, jint numberOfWriteBlocks);

FOUNDATION_EXPORT ComStSt25sdkCommandType2CustomCommand *new_ComStSt25sdkCommandType2CustomCommand_initWithComStSt25sdkRFReaderInterface_withInt_withInt_withInt_(id<ComStSt25sdkRFReaderInterface> reader, jint blockSize, jint numberOfReadBlocks, jint numberOfWriteBlocks) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComStSt25sdkCommandType2CustomCommand *create_ComStSt25sdkCommandType2CustomCommand_initWithComStSt25sdkRFReaderInterface_withInt_withInt_withInt_(id<ComStSt25sdkRFReaderInterface> reader, jint blockSize, jint numberOfReadBlocks, jint numberOfWriteBlocks);

J2OBJC_TYPE_LITERAL_HEADER(ComStSt25sdkCommandType2CustomCommand)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComStSt25sdkCommandType2CustomCommand")
