//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: st25sdk_ios/command/NdefVicinityCommand.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/st/st25sdk/ControlTlv.h"
#include "com/st/st25sdk/Helper.h"
#include "com/st/st25sdk/RFReaderInterface.h"
#include "com/st/st25sdk/STException.h"
#include "com/st/st25sdk/STLog.h"
#include "com/st/st25sdk/command/Iso15693Protocol.h"
#include "com/st/st25sdk/command/NdefVicinityCommand.h"
#include "com/st/st25sdk/command/VicinityCommand.h"
#include "com/st/st25sdk/command/VicinityMemoryCommand.h"
#include "com/st/st25sdk/ndef/NDEFMsg.h"
#include "com/st/st25sdk/type5/ReadBlockResult.h"
#include "com/st/st25sdk/type5/Type5Tag.h"
#include "java/lang/Exception.h"
#include "java/lang/System.h"

@interface ComStSt25sdkCommandNdefVicinityCommand () {
 @public
  ComStSt25sdkCommandVicinityMemoryCommand *mVicinityMemoryCommand_;
}

@end

J2OBJC_FIELD_SETTER(ComStSt25sdkCommandNdefVicinityCommand, mVicinityMemoryCommand_, ComStSt25sdkCommandVicinityMemoryCommand *)

@implementation ComStSt25sdkCommandNdefVicinityCommand

- (instancetype)initWithComStSt25sdkRFReaderInterface:(id<ComStSt25sdkRFReaderInterface>)reader
                                        withByteArray:(IOSByteArray *)uid {
  ComStSt25sdkCommandNdefVicinityCommand_initWithComStSt25sdkRFReaderInterface_withByteArray_(self, reader, uid);
  return self;
}

- (instancetype)initWithComStSt25sdkRFReaderInterface:(id<ComStSt25sdkRFReaderInterface>)reader
                                        withByteArray:(IOSByteArray *)uid
                                             withByte:(jbyte)flag {
  ComStSt25sdkCommandNdefVicinityCommand_initWithComStSt25sdkRFReaderInterface_withByteArray_withByte_(self, reader, uid, flag);
  return self;
}

- (instancetype)initWithComStSt25sdkRFReaderInterface:(id<ComStSt25sdkRFReaderInterface>)reader
                                        withByteArray:(IOSByteArray *)uid
                                              withInt:(jint)nbrOfBytesPerBlock {
  ComStSt25sdkCommandNdefVicinityCommand_initWithComStSt25sdkRFReaderInterface_withByteArray_withInt_(self, reader, uid, nbrOfBytesPerBlock);
  return self;
}

- (instancetype)initWithComStSt25sdkRFReaderInterface:(id<ComStSt25sdkRFReaderInterface>)reader
                                        withByteArray:(IOSByteArray *)uid
                                             withByte:(jbyte)flag
                                              withInt:(jint)nbrOfBytesPerBlock {
  ComStSt25sdkCommandNdefVicinityCommand_initWithComStSt25sdkRFReaderInterface_withByteArray_withByte_withInt_(self, reader, uid, flag, nbrOfBytesPerBlock);
  return self;
}

- (void)writeNdefMessageWithInt:(jint)blockOffset
    withComStSt25sdkNdefNDEFMsg:(ComStSt25sdkNdefNDEFMsg *)msg
                       withByte:(jbyte)flag
                  withByteArray:(IOSByteArray *)uid {
  IOSByteArray *formatedBuffer;
  @try {
    formatedBuffer = [((ComStSt25sdkNdefNDEFMsg *) nil_chk(msg)) formatType5];
  }
  @catch (JavaLangException *e) {
    [e printStackTrace];
    @throw new_ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_(JreLoadEnum(ComStSt25sdkSTException_STExceptionCode, INVALID_NDEF_DATA));
  }
  IOSByteArray *headerBuffer = [IOSByteArray newArrayWithLength:mNbrOfBytesPerBlock_];
  IOSByteArray *payloadBuffer;
  if (((IOSByteArray *) nil_chk(formatedBuffer))->size_ < mNbrOfBytesPerBlock_) {
    @throw new_ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_(JreLoadEnum(ComStSt25sdkSTException_STExceptionCode, BAD_PARAMETER));
  }
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(formatedBuffer, 0, headerBuffer, 0, mNbrOfBytesPerBlock_);
  *IOSByteArray_GetRef(headerBuffer, 1) = (jbyte) (jint) 0x00;
  [((ComStSt25sdkCommandVicinityMemoryCommand *) nil_chk(mVicinityMemoryCommand_)) writeBlocksWithInt:blockOffset withByteArray:headerBuffer withByte:flag withByteArray:uid];
  payloadBuffer = [IOSByteArray newArrayWithLength:formatedBuffer->size_ - mNbrOfBytesPerBlock_];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(formatedBuffer, mNbrOfBytesPerBlock_, payloadBuffer, 0, formatedBuffer->size_ - mNbrOfBytesPerBlock_);
  [((ComStSt25sdkCommandVicinityMemoryCommand *) nil_chk(mVicinityMemoryCommand_)) writeBlocksWithInt:blockOffset + 1 withByteArray:payloadBuffer withByte:flag withByteArray:uid];
  *IOSByteArray_GetRef(headerBuffer, 1) = IOSByteArray_Get(formatedBuffer, 1);
  [((ComStSt25sdkCommandVicinityMemoryCommand *) nil_chk(mVicinityMemoryCommand_)) writeBlocksWithInt:blockOffset withByteArray:headerBuffer withByte:flag withByteArray:uid];
}

- (ComStSt25sdkNdefNDEFMsg *)readNdefMessageWithInt:(jint)offsetInBlocks
                                           withByte:(jbyte)flag
                                      withByteArray:(IOSByteArray *)uid {
  IOSByteArray *dataArea;
  IOSByteArray *buffer;
  IOSByteArray *msg;
  jint sizeInBytes;
  ComStSt25sdkType5ReadBlockResult *readResult;
  readResult = [((ComStSt25sdkCommandVicinityMemoryCommand *) nil_chk(mVicinityMemoryCommand_)) readBlocksWithInt:(jbyte) offsetInBlocks & (jint) 0xFF withInt:mNbrOfBytesPerBlock_ withByte:flag withByteArray:uid];
  dataArea = ((ComStSt25sdkType5ReadBlockResult *) nil_chk(readResult))->data_;
  if (IOSByteArray_Get(nil_chk(dataArea), 0) != ComStSt25sdkControlTlv_NDEF_MESSAGE_TLV) {
    return nil;
  }
  if (IOSByteArray_Get(dataArea, 1) == (jbyte) (jint) 0xFF) {
    sizeInBytes = ((JreLShift32(IOSByteArray_Get(dataArea, 2), 8)) & (jint) 0xFF00) + (IOSByteArray_Get(dataArea, 3) & (jint) 0xFF);
    buffer = [((ComStSt25sdkCommandVicinityMemoryCommand *) nil_chk(mVicinityMemoryCommand_)) readBytesWithInt:offsetInBlocks * mNbrOfBytesPerBlock_ withInt:sizeInBytes + 4 withByte:flag withByteArray:uid];
    msg = [IOSByteArray newArrayWithLength:sizeInBytes];
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(buffer, 4, msg, 0, sizeInBytes);
  }
  else {
    sizeInBytes = ComStSt25sdkHelper_convertByteToUnsignedIntWithByte_(IOSByteArray_Get(dataArea, 1));
    buffer = [((ComStSt25sdkCommandVicinityMemoryCommand *) nil_chk(mVicinityMemoryCommand_)) readBytesWithInt:offsetInBlocks * mNbrOfBytesPerBlock_ withInt:sizeInBytes + 2 withByte:flag withByteArray:uid];
    msg = [IOSByteArray newArrayWithLength:sizeInBytes];
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(buffer, 2, msg, 0, sizeInBytes);
  }
  @try {
    return new_ComStSt25sdkNdefNDEFMsg_initWithByteArray_(msg);
  }
  @catch (JavaLangException *e) {
    [e printStackTrace];
    @throw new_ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_(JreLoadEnum(ComStSt25sdkSTException_STExceptionCode, INVALID_NDEF_DATA));
  }
}

- (void)setTagMaxReadMultipleBlockLengthWithInt:(jint)tagMaxReadMultipleBlockLength {
  [((ComStSt25sdkCommandVicinityMemoryCommand *) nil_chk(mVicinityMemoryCommand_)) setTagMaxReadMultipleBlockLengthWithInt:tagMaxReadMultipleBlockLength];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, 6, -1, -1, -1 },
    { NULL, "LComStSt25sdkNdefNDEFMsg;", 0x1, 7, 8, 6, -1, -1, -1 },
    { NULL, "V", 0x1, 9, 10, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComStSt25sdkRFReaderInterface:withByteArray:);
  methods[1].selector = @selector(initWithComStSt25sdkRFReaderInterface:withByteArray:withByte:);
  methods[2].selector = @selector(initWithComStSt25sdkRFReaderInterface:withByteArray:withInt:);
  methods[3].selector = @selector(initWithComStSt25sdkRFReaderInterface:withByteArray:withByte:withInt:);
  methods[4].selector = @selector(writeNdefMessageWithInt:withComStSt25sdkNdefNDEFMsg:withByte:withByteArray:);
  methods[5].selector = @selector(readNdefMessageWithInt:withByte:withByteArray:);
  methods[6].selector = @selector(setTagMaxReadMultipleBlockLengthWithInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "mVicinityMemoryCommand_", "LComStSt25sdkCommandVicinityMemoryCommand;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComStSt25sdkRFReaderInterface;[B", "LComStSt25sdkRFReaderInterface;[BB", "LComStSt25sdkRFReaderInterface;[BI", "LComStSt25sdkRFReaderInterface;[BBI", "writeNdefMessage", "ILComStSt25sdkNdefNDEFMsg;B[B", "LComStSt25sdkSTException;", "readNdefMessage", "IB[B", "setTagMaxReadMultipleBlockLength", "I" };
  static const J2ObjcClassInfo _ComStSt25sdkCommandNdefVicinityCommand = { "NdefVicinityCommand", "com.st.st25sdk.command", ptrTable, methods, fields, 7, 0x1, 7, 1, -1, -1, -1, -1, -1 };
  return &_ComStSt25sdkCommandNdefVicinityCommand;
}

@end

void ComStSt25sdkCommandNdefVicinityCommand_initWithComStSt25sdkRFReaderInterface_withByteArray_(ComStSt25sdkCommandNdefVicinityCommand *self, id<ComStSt25sdkRFReaderInterface> reader, IOSByteArray *uid) {
  ComStSt25sdkCommandNdefVicinityCommand_initWithComStSt25sdkRFReaderInterface_withByteArray_withByte_withInt_(self, reader, uid, ComStSt25sdkCommandIso15693Protocol_DEFAULT_VICINITY_FLAG, ComStSt25sdkType5Type5Tag_DEFAULT_NBR_OF_BYTES_PER_BLOCK);
}

ComStSt25sdkCommandNdefVicinityCommand *new_ComStSt25sdkCommandNdefVicinityCommand_initWithComStSt25sdkRFReaderInterface_withByteArray_(id<ComStSt25sdkRFReaderInterface> reader, IOSByteArray *uid) {
  J2OBJC_NEW_IMPL(ComStSt25sdkCommandNdefVicinityCommand, initWithComStSt25sdkRFReaderInterface_withByteArray_, reader, uid)
}

ComStSt25sdkCommandNdefVicinityCommand *create_ComStSt25sdkCommandNdefVicinityCommand_initWithComStSt25sdkRFReaderInterface_withByteArray_(id<ComStSt25sdkRFReaderInterface> reader, IOSByteArray *uid) {
  J2OBJC_CREATE_IMPL(ComStSt25sdkCommandNdefVicinityCommand, initWithComStSt25sdkRFReaderInterface_withByteArray_, reader, uid)
}

void ComStSt25sdkCommandNdefVicinityCommand_initWithComStSt25sdkRFReaderInterface_withByteArray_withByte_(ComStSt25sdkCommandNdefVicinityCommand *self, id<ComStSt25sdkRFReaderInterface> reader, IOSByteArray *uid, jbyte flag) {
  ComStSt25sdkCommandNdefVicinityCommand_initWithComStSt25sdkRFReaderInterface_withByteArray_withByte_withInt_(self, reader, uid, flag, ComStSt25sdkType5Type5Tag_DEFAULT_NBR_OF_BYTES_PER_BLOCK);
}

ComStSt25sdkCommandNdefVicinityCommand *new_ComStSt25sdkCommandNdefVicinityCommand_initWithComStSt25sdkRFReaderInterface_withByteArray_withByte_(id<ComStSt25sdkRFReaderInterface> reader, IOSByteArray *uid, jbyte flag) {
  J2OBJC_NEW_IMPL(ComStSt25sdkCommandNdefVicinityCommand, initWithComStSt25sdkRFReaderInterface_withByteArray_withByte_, reader, uid, flag)
}

ComStSt25sdkCommandNdefVicinityCommand *create_ComStSt25sdkCommandNdefVicinityCommand_initWithComStSt25sdkRFReaderInterface_withByteArray_withByte_(id<ComStSt25sdkRFReaderInterface> reader, IOSByteArray *uid, jbyte flag) {
  J2OBJC_CREATE_IMPL(ComStSt25sdkCommandNdefVicinityCommand, initWithComStSt25sdkRFReaderInterface_withByteArray_withByte_, reader, uid, flag)
}

void ComStSt25sdkCommandNdefVicinityCommand_initWithComStSt25sdkRFReaderInterface_withByteArray_withInt_(ComStSt25sdkCommandNdefVicinityCommand *self, id<ComStSt25sdkRFReaderInterface> reader, IOSByteArray *uid, jint nbrOfBytesPerBlock) {
  ComStSt25sdkCommandNdefVicinityCommand_initWithComStSt25sdkRFReaderInterface_withByteArray_withByte_withInt_(self, reader, uid, ComStSt25sdkCommandIso15693Protocol_DEFAULT_VICINITY_FLAG, nbrOfBytesPerBlock);
}

ComStSt25sdkCommandNdefVicinityCommand *new_ComStSt25sdkCommandNdefVicinityCommand_initWithComStSt25sdkRFReaderInterface_withByteArray_withInt_(id<ComStSt25sdkRFReaderInterface> reader, IOSByteArray *uid, jint nbrOfBytesPerBlock) {
  J2OBJC_NEW_IMPL(ComStSt25sdkCommandNdefVicinityCommand, initWithComStSt25sdkRFReaderInterface_withByteArray_withInt_, reader, uid, nbrOfBytesPerBlock)
}

ComStSt25sdkCommandNdefVicinityCommand *create_ComStSt25sdkCommandNdefVicinityCommand_initWithComStSt25sdkRFReaderInterface_withByteArray_withInt_(id<ComStSt25sdkRFReaderInterface> reader, IOSByteArray *uid, jint nbrOfBytesPerBlock) {
  J2OBJC_CREATE_IMPL(ComStSt25sdkCommandNdefVicinityCommand, initWithComStSt25sdkRFReaderInterface_withByteArray_withInt_, reader, uid, nbrOfBytesPerBlock)
}

void ComStSt25sdkCommandNdefVicinityCommand_initWithComStSt25sdkRFReaderInterface_withByteArray_withByte_withInt_(ComStSt25sdkCommandNdefVicinityCommand *self, id<ComStSt25sdkRFReaderInterface> reader, IOSByteArray *uid, jbyte flag, jint nbrOfBytesPerBlock) {
  ComStSt25sdkCommandVicinityCommand_initWithComStSt25sdkRFReaderInterface_withByteArray_withByte_withInt_(self, reader, uid, flag, nbrOfBytesPerBlock);
  if ((flag & ComStSt25sdkCommandIso15693Protocol_PROTOCOL_FORMAT_EXTENSION) == 0) {
    ComStSt25sdkSTLog_eWithNSString_(@"Error! Flag PROTOCOL_FORMAT_EXTENSION is mandatory for this class");
  }
  self->mVicinityMemoryCommand_ = new_ComStSt25sdkCommandVicinityMemoryCommand_initWithComStSt25sdkRFReaderInterface_withByteArray_withByte_withInt_(reader, uid, flag, nbrOfBytesPerBlock);
}

ComStSt25sdkCommandNdefVicinityCommand *new_ComStSt25sdkCommandNdefVicinityCommand_initWithComStSt25sdkRFReaderInterface_withByteArray_withByte_withInt_(id<ComStSt25sdkRFReaderInterface> reader, IOSByteArray *uid, jbyte flag, jint nbrOfBytesPerBlock) {
  J2OBJC_NEW_IMPL(ComStSt25sdkCommandNdefVicinityCommand, initWithComStSt25sdkRFReaderInterface_withByteArray_withByte_withInt_, reader, uid, flag, nbrOfBytesPerBlock)
}

ComStSt25sdkCommandNdefVicinityCommand *create_ComStSt25sdkCommandNdefVicinityCommand_initWithComStSt25sdkRFReaderInterface_withByteArray_withByte_withInt_(id<ComStSt25sdkRFReaderInterface> reader, IOSByteArray *uid, jbyte flag, jint nbrOfBytesPerBlock) {
  J2OBJC_CREATE_IMPL(ComStSt25sdkCommandNdefVicinityCommand, initWithComStSt25sdkRFReaderInterface_withByteArray_withByte_withInt_, reader, uid, flag, nbrOfBytesPerBlock)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComStSt25sdkCommandNdefVicinityCommand)
