//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: st25sdk_ios/command/PicopassCommandInterface.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComStSt25sdkCommandPicopassCommandInterface")
#ifdef RESTRICT_ComStSt25sdkCommandPicopassCommandInterface
#define INCLUDE_ALL_ComStSt25sdkCommandPicopassCommandInterface 0
#else
#define INCLUDE_ALL_ComStSt25sdkCommandPicopassCommandInterface 1
#endif
#undef RESTRICT_ComStSt25sdkCommandPicopassCommandInterface

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComStSt25sdkCommandPicopassCommandInterface_) && (INCLUDE_ALL_ComStSt25sdkCommandPicopassCommandInterface || defined(INCLUDE_ComStSt25sdkCommandPicopassCommandInterface))
#define ComStSt25sdkCommandPicopassCommandInterface_

@class IOSByteArray;

@protocol ComStSt25sdkCommandPicopassCommandInterface < JavaObject >

- (void)halt;

- (void)act;

- (void)actall;

- (IOSByteArray *)identify;

- (IOSByteArray *)selectWithByteArray:(IOSByteArray *)aSNBorSN;

- (IOSByteArray *)detect;

- (IOSByteArray *)readWithByte:(jbyte)address;

- (IOSByteArray *)read4WithByte:(jbyte)address;

- (IOSByteArray *)pageselWithByte:(jbyte)bookPage;

- (IOSByteArray *)updateWithByte:(jbyte)address
                   withByteArray:(IOSByteArray *)data;

- (IOSByteArray *)updateWithByte:(jbyte)address
                   withByteArray:(IOSByteArray *)data
                   withByteArray:(IOSByteArray *)sign;

- (IOSByteArray *)readCheckWithByte:(jbyte)address
                        withBoolean:(jboolean)isKC;

- (IOSByteArray *)checkWithByteArray:(IOSByteArray *)challenge
                       withByteArray:(IOSByteArray *)readerSignature;

- (IOSByteArray *)selectPicopassTag;

@end

J2OBJC_EMPTY_STATIC_INIT(ComStSt25sdkCommandPicopassCommandInterface)

J2OBJC_TYPE_LITERAL_HEADER(ComStSt25sdkCommandPicopassCommandInterface)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComStSt25sdkCommandPicopassCommandInterface")
