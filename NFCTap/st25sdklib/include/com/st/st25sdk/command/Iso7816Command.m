//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: st25sdk_ios/command/Iso7816Command.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/st/st25sdk/RFReaderInterface.h"
#include "com/st/st25sdk/STException.h"
#include "com/st/st25sdk/command/Iso7816Command.h"
#include "com/st/st25sdk/command/Iso7816Type4RApduStatus.h"
#include "java/lang/Exception.h"
#include "java/lang/System.h"

J2OBJC_INITIALIZED_DEFN(ComStSt25sdkCommandIso7816Command)

IOSByteArray *ComStSt25sdkCommandIso7816Command_OK;

@implementation ComStSt25sdkCommandIso7816Command

+ (jbyte)ISO7816_CMD_VERIFY {
  return ComStSt25sdkCommandIso7816Command_ISO7816_CMD_VERIFY;
}

+ (jbyte)ISO7816_CMD_CHANGE_REF_DATA {
  return ComStSt25sdkCommandIso7816Command_ISO7816_CMD_CHANGE_REF_DATA;
}

+ (jbyte)ISO7816_CMD_DISABLE_VERIFY_REQ {
  return ComStSt25sdkCommandIso7816Command_ISO7816_CMD_DISABLE_VERIFY_REQ;
}

+ (jbyte)ISO7816_CMD_ENABLE_VERIFY_REQ {
  return ComStSt25sdkCommandIso7816Command_ISO7816_CMD_ENABLE_VERIFY_REQ;
}

+ (jint)ISO7816_HEADER_SIZE {
  return ComStSt25sdkCommandIso7816Command_ISO7816_HEADER_SIZE;
}

+ (IOSByteArray *)OK {
  return ComStSt25sdkCommandIso7816Command_OK;
}

+ (void)setOK:(IOSByteArray *)value {
  ComStSt25sdkCommandIso7816Command_OK = value;
}

+ (jboolean)DBG {
  return ComStSt25sdkCommandIso7816Command_DBG;
}

- (instancetype)initWithComStSt25sdkRFReaderInterface:(id<ComStSt25sdkRFReaderInterface>)reader {
  ComStSt25sdkCommandIso7816Command_initWithComStSt25sdkRFReaderInterface_(self, reader);
  return self;
}

- (IOSByteArray *)verifyWithByte:(jbyte)cla
                        withByte:(jbyte)p1
                        withByte:(jbyte)p2
                   withByteArray:(IOSByteArray *)data {
  IOSByteArray *frame;
  if (data != nil) {
    frame = [IOSByteArray newArrayWithLength:data->size_ + ComStSt25sdkCommandIso7816Command_ISO7816_HEADER_SIZE + 1];
    *IOSByteArray_GetRef(frame, 4) = (jint) 0x10;
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(data, 0, frame, 5, data->size_);
  }
  else {
    frame = [IOSByteArray newArrayWithLength:ComStSt25sdkCommandIso7816Command_ISO7816_HEADER_SIZE + 1];
    *IOSByteArray_GetRef(frame, 4) = 0;
  }
  *IOSByteArray_GetRef(frame, 0) = cla;
  *IOSByteArray_GetRef(frame, 1) = ComStSt25sdkCommandIso7816Command_ISO7816_CMD_VERIFY;
  *IOSByteArray_GetRef(frame, 2) = p1;
  *IOSByteArray_GetRef(frame, 3) = p2;
  return [self transceiveWithNSString:@"Verify " withByteArray:frame];
}

- (IOSByteArray *)changeReferenceDataWithByte:(jbyte)cla
                                     withByte:(jbyte)p1
                                     withByte:(jbyte)p2
                                withByteArray:(IOSByteArray *)data {
  if (data == nil) @throw new_ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_(JreLoadEnum(ComStSt25sdkSTException_STExceptionCode, BAD_PARAMETER));
  IOSByteArray *frame = [IOSByteArray newArrayWithLength:data->size_ + ComStSt25sdkCommandIso7816Command_ISO7816_HEADER_SIZE + 1];
  *IOSByteArray_GetRef(frame, 0) = cla;
  *IOSByteArray_GetRef(frame, 1) = ComStSt25sdkCommandIso7816Command_ISO7816_CMD_CHANGE_REF_DATA;
  *IOSByteArray_GetRef(frame, 2) = p1;
  *IOSByteArray_GetRef(frame, 3) = p2;
  *IOSByteArray_GetRef(frame, 4) = (jint) 0x10;
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(data, 0, frame, 5, data->size_);
  return [self transceiveWithNSString:@"Change reference data" withByteArray:frame];
}

- (IOSByteArray *)enableVerificationReqWithByte:(jbyte)cla
                                       withByte:(jbyte)p1
                                       withByte:(jbyte)p2 {
  IOSByteArray *frame = [IOSByteArray newArrayWithLength:ComStSt25sdkCommandIso7816Command_ISO7816_HEADER_SIZE];
  *IOSByteArray_GetRef(frame, 0) = cla;
  *IOSByteArray_GetRef(frame, 1) = ComStSt25sdkCommandIso7816Command_ISO7816_CMD_ENABLE_VERIFY_REQ;
  *IOSByteArray_GetRef(frame, 2) = p1;
  *IOSByteArray_GetRef(frame, 3) = p2;
  return [self transceiveWithNSString:@"Enable Verification Req " withByteArray:frame];
}

- (IOSByteArray *)disableVerificationReqWithByte:(jbyte)cla
                                        withByte:(jbyte)p1
                                        withByte:(jbyte)p2 {
  IOSByteArray *frame = [IOSByteArray newArrayWithLength:ComStSt25sdkCommandIso7816Command_ISO7816_HEADER_SIZE];
  *IOSByteArray_GetRef(frame, 0) = cla;
  *IOSByteArray_GetRef(frame, 1) = ComStSt25sdkCommandIso7816Command_ISO7816_CMD_DISABLE_VERIFY_REQ;
  *IOSByteArray_GetRef(frame, 2) = p1;
  *IOSByteArray_GetRef(frame, 3) = p2;
  return [self transceiveWithNSString:@"Disable Verification Req " withByteArray:frame];
}

- (IOSByteArray *)transceiveWithNSString:(NSString *)commandName
                           withByteArray:(IOSByteArray *)data {
  @try {
    IOSByteArray *response = [((id<ComStSt25sdkRFReaderInterface>) nil_chk(mReaderInterface_)) transceiveWithId:[[self java_getClass] getSimpleName] withNSString:commandName withByteArray:data];
    ComStSt25sdkCommandIso7816Type4RApduStatus_checkErrorWithByteArray_(response);
    return response;
  }
  @catch (JavaLangException *e) {
    [e printStackTrace];
    @throw new_ComStSt25sdkSTException_initWithComStSt25sdkSTException_STExceptionCode_(JreLoadEnum(ComStSt25sdkSTException_STExceptionCode, CMD_FAILED));
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, 1, 2, 3, -1, -1, -1 },
    { NULL, "[B", 0x1, 4, 2, 3, -1, -1, -1 },
    { NULL, "[B", 0x1, 5, 6, 3, -1, -1, -1 },
    { NULL, "[B", 0x1, 7, 6, 3, -1, -1, -1 },
    { NULL, "[B", 0x1, 8, 9, 3, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComStSt25sdkRFReaderInterface:);
  methods[1].selector = @selector(verifyWithByte:withByte:withByte:withByteArray:);
  methods[2].selector = @selector(changeReferenceDataWithByte:withByte:withByte:withByteArray:);
  methods[3].selector = @selector(enableVerificationReqWithByte:withByte:withByte:);
  methods[4].selector = @selector(disableVerificationReqWithByte:withByte:withByte:);
  methods[5].selector = @selector(transceiveWithNSString:withByteArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "ISO7816_CMD_VERIFY", "B", .constantValue.asChar = ComStSt25sdkCommandIso7816Command_ISO7816_CMD_VERIFY, 0x19, -1, -1, -1, -1 },
    { "ISO7816_CMD_CHANGE_REF_DATA", "B", .constantValue.asChar = ComStSt25sdkCommandIso7816Command_ISO7816_CMD_CHANGE_REF_DATA, 0x19, -1, -1, -1, -1 },
    { "ISO7816_CMD_DISABLE_VERIFY_REQ", "B", .constantValue.asChar = ComStSt25sdkCommandIso7816Command_ISO7816_CMD_DISABLE_VERIFY_REQ, 0x19, -1, -1, -1, -1 },
    { "ISO7816_CMD_ENABLE_VERIFY_REQ", "B", .constantValue.asChar = ComStSt25sdkCommandIso7816Command_ISO7816_CMD_ENABLE_VERIFY_REQ, 0x19, -1, -1, -1, -1 },
    { "ISO7816_HEADER_SIZE", "I", .constantValue.asInt = ComStSt25sdkCommandIso7816Command_ISO7816_HEADER_SIZE, 0x19, -1, -1, -1, -1 },
    { "OK", "[B", .constantValue.asLong = 0, 0x9, -1, 10, -1, -1 },
    { "mReaderInterface_", "LComStSt25sdkRFReaderInterface;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "DBG", "Z", .constantValue.asBOOL = ComStSt25sdkCommandIso7816Command_DBG, 0x18, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComStSt25sdkRFReaderInterface;", "verify", "BBB[B", "LComStSt25sdkSTException;", "changeReferenceData", "enableVerificationReq", "BBB", "disableVerificationReq", "transceive", "LNSString;[B", &ComStSt25sdkCommandIso7816Command_OK };
  static const J2ObjcClassInfo _ComStSt25sdkCommandIso7816Command = { "Iso7816Command", "com.st.st25sdk.command", ptrTable, methods, fields, 7, 0x1, 6, 8, -1, -1, -1, -1, -1 };
  return &_ComStSt25sdkCommandIso7816Command;
}

+ (void)initialize {
  if (self == [ComStSt25sdkCommandIso7816Command class]) {
    ComStSt25sdkCommandIso7816Command_OK = [IOSByteArray newArrayWithBytes:(jbyte[]){ (jbyte) (jint) 0x90, (jbyte) (jint) 0x00 } count:2];
    J2OBJC_SET_INITIALIZED(ComStSt25sdkCommandIso7816Command)
  }
}

@end

void ComStSt25sdkCommandIso7816Command_initWithComStSt25sdkRFReaderInterface_(ComStSt25sdkCommandIso7816Command *self, id<ComStSt25sdkRFReaderInterface> reader) {
  NSObject_init(self);
  self->mReaderInterface_ = reader;
}

ComStSt25sdkCommandIso7816Command *new_ComStSt25sdkCommandIso7816Command_initWithComStSt25sdkRFReaderInterface_(id<ComStSt25sdkRFReaderInterface> reader) {
  J2OBJC_NEW_IMPL(ComStSt25sdkCommandIso7816Command, initWithComStSt25sdkRFReaderInterface_, reader)
}

ComStSt25sdkCommandIso7816Command *create_ComStSt25sdkCommandIso7816Command_initWithComStSt25sdkRFReaderInterface_(id<ComStSt25sdkRFReaderInterface> reader) {
  J2OBJC_CREATE_IMPL(ComStSt25sdkCommandIso7816Command, initWithComStSt25sdkRFReaderInterface_, reader)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComStSt25sdkCommandIso7816Command)
